<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hệ sinh thái định hướng nghề nghiệp</title>
    <!-- Tải Tailwind CSS để tạo giao diện nhanh chóng -->
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Tải icon (Heroicons) -->
    <script type="module" src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.esm.js"></script>
    <script nomodule src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.js"></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap');
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f3f4f6;
        }
        /* Định nghĩa màu sắc DISC trong CSS để dễ tái sử dụng với Tailwind */
        :root {
            --tw-disc-d: #ef4444; /* red-500 */
            --tw-disc-i: #3b82f6; /* blue-500 */
            --tw-disc-s: #10b981; /* green-500 */
            --tw-disc-c: #f59e0b; /* amber-500 */
            /* Màu Holland */
            --tw-holland-r: #b91c1c; /* red-700 */
            --tw-holland-i: #3b82f6; /* blue-500 */
            --tw-holland-a: #a855f7; /* purple-500 */
            --tw-holland-s: #10b981; /* green-500 */
            --tw-holland-e: #f97316; /* orange-500 */
            --tw-holland-c: #4b5563; /* gray-600 */
            /* Màu MBTI */
            --tw-mbti-e: #fcd34d; /* amber-300 */
            --tw-mbti-i: #34d399; /* emerald-400 */
            --tw-mbti-s: #60a5fa; /* blue-400 */
            --tw-mbti-n: #a78bfa; /* violet-400 */
            --tw-mbti-t: #f87171; /* red-400 */
            --tw-mbti-f: #f472b6; /* pink-400 */
            --tw-mbti-j: #3b82f6; /* blue-500 */
            --tw-mbti-p: #f59e0b; /* amber-500 */
        }
        .text-disc-d { color: var(--tw-disc-d); }
        .text-disc-i { color: var(--tw-disc-i); }
        .text-disc-s { color: var(--tw-disc-s); }
        .text-disc-c { color: var(--tw-disc-c); }
        .bg-disc-d { background-color: var(--tw-disc-d); }

        /* Ẩn các trang ban đầu */
        .page-content {
            display: none;
        }
        .message-bubble {
            max-width: 80%;
            padding: 10px 15px;
            border-radius: 20px;
            margin-bottom: 10px;
            word-wrap: break-word;
        }
        .user-message {
            background-color: #3b82f6;
            color: white;
            align-self: flex-end;
            border-bottom-right-radius: 4px;
        }
        .ai-message {
            background-color: #e5e7eb;
            color: #1f2937;
            align-self: flex-start;
            border-bottom-left-radius: 4px;
        }
        .page-bg-gradient {
            background: linear-gradient(135deg, #e0f2fe 0%, #d1fae5 100%);
        }
        .chat-container {
            height: calc(100vh - 200px);
            min-height: 500px;
        }
        /* Style cho Modal */
        .modal {
            display: none;
            position: fixed;
            z-index: 100;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0,0,0,0.5);
            padding-top: 60px;
        }
        .modal-content {
            background-color: #fefefe;
            margin: 5% auto;
            padding: 30px;
            border-radius: 12px;
            width: 90%;
            max-width: 800px;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.1);
        }
        .close-btn {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
            transition: color 0.2s;
        }
        .close-btn:hover,
        .close-btn:focus {
            color: #333;
            text-decoration: none;
            cursor: pointer;
        }
        /* Typing indicator styles */
        .typing-indicator span {
            display: inline-block;
            width: 8px;
            height: 8px;
            border-radius: 50%;
            background-color: #9ca3af;
            animation: bounce 1.4s infinite ease-in-out both;
        }
        .typing-indicator span:nth-child(1) { animation-delay: -0.32s; }
        .typing-indicator span:nth-child(2) { animation-delay: -0.16s; }
        @keyframes bounce {
            0%, 80%, 100% { transform: scale(0); }
            40% { transform: scale(1.0); }
        }

        /* --- STYLES FOR EXAM LIBRARY (THI THỬ) --- */
        .card-shadow {
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.1);
        }
        .input-score {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid #d1d5db;
            border-radius: 0.5rem;
            background-color: #f9fafb;
            transition: border-color 0.2s, box-shadow 0.2s;
        }
        .input-score:focus {
            outline: none;
            border-color: #4f46e5;
            box-shadow: 0 0 0 2px rgba(79, 70, 229, 0.25);
        }
        .btn-test-hub {
            font-weight: 700;
            padding: 0.75rem 1rem;
            border-radius: 0.75rem;
            transition: all 0.3s;
            color: white;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            transform: translateY(0);
        }
        .btn-test-hub:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.15);
        }
        .btn-indigo { background-color: #4f46e5; }
        .btn-indigo:hover { background-color: #4338ca; }
        .btn-blue { background-color: #2563eb; }
        .btn-blue:hover { background-color: #1d4ed8; }
        .btn-green { background-color: #16a34a; }
        .btn-green:hover { background-color: #15803d; }

        /* CSS CHO TAB MINIGAME */
        .game-tab-btn {
            padding: 0.75rem 1.5rem;
            font-weight: 600;
            color: #6b7280; /* gray-500 */
            border-bottom: 3px solid transparent;
            cursor: pointer;
        }
        .game-tab-btn.active, .game-tab-btn:hover {
            color: #4f46e5; /* indigo-600 */
            border-bottom-color: #4f46e5;
        }
        .game-tab-content {
            animation: fadeIn 0.5s ease-out;
        }
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }


        @media (max-width: 640px) {
            .modal-content {
                margin: 20px auto;
                width: 95%;
            }
            .chat-container {
                 min-height: 400px;
            }
        }

        /* Transition cho thanh tiến trình kết quả */
        .progress-bar-transition {
            transition: width 1s ease-out;
        }

      /* Ẩn liên kết Kiểm tra API Gemini trên mọi thiết bị */
      a[onclick*="api-test"] {
        display: none !important;
      }
      
        /* CSS THÊM CHO TAB HỌC BỔNG VÀ TUYỂN SINH */
        /* Lớp active cho tab (từ file HOC BONG) */
        #scholarship-page .tab-active {
            border-bottom-color: #3B82F6; /* blue-500 */
            color: #3B82F6;
            font-weight: 600;
        }
         /* Thêm class cho các tab học bổng (để JS hoạt động) */
        #scholarship-page .tab-button {
             border-color: transparent; /* Sửa lỗi cú pháp */
             color: #6b7280; /* gray-500 */
             padding-top: 1rem; /* py-4 */
             padding-bottom: 1rem; /* py-4 */
             padding-left: 0.25rem; /* px-1 */
             padding-right: 0.25rem; /* px-1 */
             border-bottom-width: 2px;
             font-weight: 500; /* medium */
             font-size: 0.875rem; /* sm */
        }
        #scholarship-page .tab-button:hover {
            color: #4b5563; /* gray-700 */
            border-bottom-color: #d1d5db; /* gray-300 */
        }

        /* Lớp tùy chỉnh cho tab đang được chọn (từ file TUYEN SINH) */
        #admissions-page .tab-active {
            border-bottom-width: 3px;
            border-color: #3B82F6; /* blue-600 */
            color: #3B82F6;
        }
        /* Thêm class cho các tab tuyển sinh (để JS hoạt động) */
        #admissions-page .tab-button {
             width: 25%; /* w-1/4 */
             padding-top: 1rem; /* py-4 */
             padding-bottom: 1rem; /* py-4 */
             padding-left: 1rem; /* px-4 */
             padding-right: 1rem; /* px-4 */
             text-align: center;
             font-weight: 500; /* medium */
             font-size: 0.875rem; /* sm */
             cursor: pointer;
        }
         #admissions-page .tab-button:focus {
             outline: none;
         }
         @media (min-width: 768px) { /* md: */
            #admissions-page .tab-button {
                 width: auto;
                 padding-left: 1.5rem; /* md:px-6 */
                 padding-right: 1.5rem; /* md:px-6 */
                 font-size: 1rem; /* md:text-base */
            }
         }


    </style>
</head>
<body class="flex flex-col min-h-screen">
    <!-- Thanh điều hướng -->
    <nav class="bg-white shadow-lg sticky top-0 z-50">
        <div class="container mx-auto px-6 py-3 flex justify-between items-center flex-wrap">
            <a href="#" class="text-2xl font-bold text-gray-800" onclick="showPage('home')">
                <span class="text-indigo-600">Hướng</span>Nghiệp
            </a>
            <!-- Menu cho Desktop -->
            <div class="hidden md:flex space-x-4">
                <a href="#" class="text-gray-800 hover:text-indigo-600 font-medium transition duration-150" onclick="showPage('home')">Trang chủ</a>
                <!-- Updated to quiz-hub -->
                <a href="#" class="text-gray-800 hover:text-indigo-600 font-medium transition duration-150" onclick="showPage('quiz-hub')">Mật mã cá nhân</a>
                <a href="#" class="text-gray-800 hover:text-indigo-600 font-medium transition duration-150" onclick="showPage('search')">Tra cứu AI</a>
                <a href="#" class="text-gray-800 hover:text-indigo-600 font-medium transition duration-150" onclick="showPage('advice')">Tâm sự & Lời khuyên</a>
                <a href="#" class="text-gray-800 hover:text-indigo-600 font-medium transition duration-150" onclick="showPage('inspo')">Truyền cảm hứng</a>
                <a href="#" class="text-gray-800 hover:text-indigo-600 font-medium transition duration-150" onclick="showPage('survey')">Góp ý & Khảo sát</a>
                <a href="#" class="text-gray-800 hover:text-indigo-600 font-medium transition duration-150" onclick="showPage('admissions')">Tuyển sinh</a>
                <a href="#" class="text-gray-800 hover:text-indigo-600 font-medium transition duration-150" onclick="showPage('social-media')">Cộng đồng</a>
                <!-- NEW API Test Link -->
                <a href="#" class="text-gray-800 hover:text-purple-600 font-medium transition duration-150" onclick="showPage('api-test')">Kiểm tra API Gemini</a>
            </div>
              <!-- Menu cho Mobile (đơn giản hóa) -->
              <div id="mobile-menu-btn" class="md:hidden text-gray-800 cursor-pointer text-xl" onclick="toggleMobileMenu()">☰</div>
        </div>
        <!-- Menu Mobile mở rộng -->
        <div id="mobile-menu" class="hidden md:hidden px-6 pb-3 space-y-2 bg-gray-50 border-t border-gray-200">
            <a href="#" class="block text-gray-800 hover:text-indigo-600 font-medium transition duration-150 py-1" onclick="showPage('home'); toggleMobileMenu();">Trang chủ</a>
            <!-- Updated to quiz-hub -->
            <a href="#" class="block text-gray-800 hover:text-indigo-600 font-medium transition duration-150 py-1" onclick="showPage('quiz-hub'); toggleMobileMenu();">Mật mã cá nhân</a>
            <a href="#" class="block text-gray-800 hover:text-indigo-600 font-medium transition duration-150 py-1" onclick="showPage('search'); toggleMobileMenu();">Tra cứu AI</a>
            <a href="#" class="block text-gray-800 hover:text-indigo-600 font-medium transition duration-150 py-1" onclick="showPage('advice'); toggleMobileMenu();">Tâm sự & Lời khuyên</a>
            <a href="#" class="block text-gray-800 hover:text-indigo-600 font-medium transition duration-150 py-1" onclick="showPage('inspo'); toggleMobileMenu();">Truyền cảm hứng</a>
            <a href="#" class="block text-gray-800 hover:text-indigo-600 font-medium transition duration-150 py-1" onclick="showPage('survey'); toggleMobileMenu();">Góp ý & Khảo sát</a>
            <a href="#" class="block text-gray-800 hover:text-indigo-600 font-medium transition duration-150 py-1" onclick="showPage('admissions'); toggleMobileMenu();">Tuyển sinh</a>
            <a href="#" class="block text-gray-800 hover:text-indigo-600 font-medium transition duration-150 py-1" onclick="showPage('social-media'); toggleMobileMenu();">Cộng đồng</a>
            <!-- NEW API Test Link -->
            <a href="#" class="block text-gray-800 hover:text-purple-600 font-medium transition duration-150 py-1" onclick="showPage('api-test'); toggleMobileMenu();">Kiểm tra API Gemini</a>
        </div>
    </nav>

    <!-- Các trang nội dung -->
    <main class="flex-grow container mx-auto px-6 py-12">
        <!-- Trang chủ -->
        <section id="home-page" class="page-content">
            <section class="text-center py-20 page-bg-gradient rounded-3xl shadow-xl">
                <h1 class="text-5xl font-extrabold text-gray-900 mb-4">
                    Tìm kiếm con đường sự nghiệp của bạn
                </h1>
                <p class="text-xl text-gray-600 mb-8 max-w-2xl mx-auto">
                    Khám phá bản thân, định hướng tương lai và lựa chọn ngành nghề phù hợp nhất với năng lực và sở thích của bạn.
                </p>
                <div class="flex justify-center space-x-4">
                    <!-- Updated to quiz-hub -->
                    <button class="bg-indigo-600 text-white font-bold py-3 px-8 rounded-full shadow-lg hover:bg-indigo-700 transition duration-300 transform hover:scale-105" onclick="showPage('quiz-hub')">
                        Bắt đầu ngay
                    </button>
                </div>
            </section>
            <!-- Các thẻ tính năng -->
            <section class="py-12 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8">
                <!-- Thẻ 1: Trắc nghiệm tính cách (Updated OnClick to quiz-hub) -->
                <div class="bg-white p-8 rounded-3xl shadow-xl hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-2">
                    <div class="text-5xl text-indigo-600 mb-4 text-center">
                        <svg xmlns="http://www.w3.org/2000/svg" class="w-16 h-16 mx-auto" viewBox="0 0 20 20" fill="currentColor">
                           <path d="M9 2a1 1 0 000 2h2a1 1 0 100-2H9z" />
                           <path fill-rule="evenodd" d="M4 5a2 2 0 012-2 3 3 0 003 3h2a3 3 0 003-3 2 2 0 012 2v11a2 2 0 01-2 2H6a2 2 0 01-2-2V5zm3 4a1 1 0 000 2h.01a1 1 0 100-2H7zm3 0a1 1 0 000 2h3a1 1 0 100-2h-3zm-3 4a1 1 0 100 2h.01a1 1 0 100-2H7zm3 0a1 1 0 100 2h3a1 1 0 100-2h-3z" clip-rule="evenodd" />
                        </svg>
                    </div>
                    <h3 class="text-2xl font-bold text-gray-900 mb-2 text-center">Mật mã cá nhân</h3>
                    <p class="text-gray-600 text-center">Hiểu rõ điểm mạnh, điểm yếu và sở thích của bản thân để đưa ra quyết định đúng đắn.</p>
                    <div class="text-center mt-4">
                        <button class="text-indigo-600 font-semibold hover:underline" onclick="showPage('quiz-hub')">Khám phá ngay &rarr;</button>
                    </div>
                </div>

                <!-- Thẻ 2: Tra cứu ngành nghề (Updated Icon) -->
                <div class="bg-white p-8 rounded-3xl shadow-xl hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-2">
                    <div class="text-5xl text-indigo-600 mb-4 text-center">
                         <svg xmlns="http://www.w3.org/2000/svg" class="w-16 h-16 mx-auto" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd" />
                        </svg>
                    </div>
                    <h3 class="text-2xl font-bold text-gray-900 mb-2 text-center">Tra cứu ngành nghề AI</h3>
                    <p class="text-gray-600 text-center">Sử dụng AI để tìm hiểu chi tiết về các ngành học, cơ hội việc làm và thị trường lao động.</p>
                    <div class="text-center mt-4">
                        <button class="text-indigo-600 font-semibold hover:underline" onclick="showPage('search')">Bắt đầu tra cứu &rarr;</button>
                    </div>
                </div>

                <!-- Thẻ 3: Tâm sự & Lời khuyên -->
                <div class="bg-white p-8 rounded-3xl shadow-xl hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-2">
                    <div class="text-5xl text-green-600 mb-4 text-center">💡</div>
                    <h3 class="text-2xl font-bold text-gray-900 mb-2 text-center">Góc Tâm sự & Lời khuyên</h3>
                    <p class="text-gray-600 text-center">Nhận sự đồng cảm và tư vấn chân thành từ AI để giải quyết những băn khoăn trong cuộc sống.</p>
                    <div class="text-center mt-4">
                        <button class="text-indigo-600 font-semibold hover:underline" onclick="showPage('advice')">Nhận lời khuyên &rarr;</button>
                    </div>
                </div>

                <!-- Thẻ 4: Góc Truyền cảm hứng -->
                <div class="bg-white p-8 rounded-3xl shadow-xl hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-2">
                    <div class="text-5xl text-red-600 mb-4 text-center">⭐</div>
                    <h3 class="text-2xl font-bold text-gray-900 mb-2 text-center">Góc Truyền cảm hứng</h3>
                    <p class="text-gray-600 text-center">Đọc các câu chuyện có thật về những người đã thành công trong sự nghiệp của họ.</p>
                    <div class="text-center mt-4">
                        <button class="text-indigo-600 font-semibold hover:underline" onclick="showPage('inspo')">Khám phá &rarr;</button>
                    </div>
                </div>

                <!-- Thẻ 5: Thông tin tuyển sinh -->
                <div class="bg-white p-8 rounded-3xl shadow-xl hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-2">
                    <div class="text-5xl text-indigo-600 mb-4 text-center">📣</div>
                    <h3 class="text-2xl font-bold text-gray-900 mb-2 text-center">Thông tin tuyển sinh</h3>
                    <p class="text-gray-600 text-center">Cập nhật tin tức mới nhất về các kỳ thi, phương thức xét tuyển và học bổng.</p>
                    <div class="text-center mt-4">
                        <button class="text-indigo-600 font-semibold hover:underline" onclick="showPage('admissions')">Xem chi tiết &rarr;</button>
                    </div>
                </div>

                <!-- Thẻ 6: Góp ý & Khảo sát -->
                <div class="bg-white p-8 rounded-3xl shadow-xl hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-2">
                    <div class="text-5xl text-purple-600 mb-4 text-center">📝</div>
                    <h3 class="text-2xl font-bold text-gray-900 mb-2 text-center">Góp ý & Khảo sát</h3>
                    <p class="text-gray-600 text-center">Đóng góp ý kiến và tham gia khảo sát để giúp chúng tôi cải thiện hệ thống.</p>
                    <div class="text-center mt-4">
                        <button class="text-indigo-600 font-semibold hover:underline" onclick="showPage('survey')">Đóng góp ngay &rarr;</button>
                    </div>
                </div>

                <!-- Thẻ 7: Mạng xã hội -->
                <div class="bg-white p-8 rounded-3xl shadow-xl hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-2">
                    <div class="text-5xl text-indigo-600 mb-4 text-center">💬</div>
                    <h3 class="text-2xl font-bold text-gray-900 mb-2 text-center">Cộng đồng</h3>
                    <p class="text-gray-600 text-center">Kết nối với cộng đồng, đặt câu hỏi và nhận lời khuyên từ các chuyên gia.</p>
                    <div class="text-center mt-4">
                        <button class="text-indigo-600 font-semibold hover:underline" onclick="showPage('social-media')">Tham gia cộng đồng &rarr;</button>
                    </div>
                </div>

                <!-- Thẻ 8: MINIGAME (ĐÃ THAY THẾ) -->
                <div class="bg-white p-8 rounded-3xl shadow-xl hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-2 cursor-pointer" onclick="showPage('minigame')">
                    <div class="text-5xl text-indigo-600 mb-4 text-center">🎮</div>
                    <h3 class="text-2xl font-bold text-gray-900 mb-2 text-center">Minigame</h3>
                    <p class="text-gray-600 text-center">Chơi các trò chơi tương tác để khám phá và tìm hiểu về các ngành nghề.</p>
                    <div class="text-center mt-4">
                        <button class="text-indigo-600 font-semibold hover:underline">Chơi ngay &rarr;</button>
                    </div>
                </div>

                <!-- Thẻ 9: Thông tin Học bổng (Updated Onclick) -->
                <div class="bg-white p-8 rounded-3xl shadow-xl hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-2 cursor-pointer" onclick="showPage('scholarship')">
                    <div class="text-5xl text-orange-500 mb-4 text-center">🏅</div>
                    <h3 class="text-2xl font-bold text-gray-900 mb-2 text-center">Thông tin Học bổng</h3>
                    <p class="text-gray-600 text-center">Tổng hợp chương trình học bổng, hỗ trợ tài chính cho sinh viên.</p>
                    <div class="text-center mt-4">
                        <button class="text-orange-600 font-semibold hover:underline">Tìm kiếm ngay &rarr;</button>
                    </div>
                </div>

            </section>
        </section>

        <!-- Trang Trắc nghiệm HUB (Mới: Thay thế nội dung quiz-page placeholder) -->
        <section id="quiz-hub-page" class="page-content">
             <h1 class="text-4xl font-bold text-center mb-10 text-gray-900">Chọn Bài Trắc Nghiệm Khám Phá Bản Thân</h1>
            <div class="grid grid-cols-1 md:grid-cols-3 gap-8 max-w-5xl mx-auto">

                <!-- Thẻ DISC -->
                <div class="bg-white p-8 rounded-3xl shadow-xl hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-2 border-t-8 border-red-500">
                    <h3 class="text-2xl font-bold text-gray-900 mb-2 text-center">DISC (Phong cách hành vi)</h3>
                    <p class="text-gray-600 text-center text-sm">Hiểu cách bạn phản ứng với vấn đề, con người, tốc độ và quy tắc. (30 Câu)</p>
                    <div class="text-center mt-4">
                        <button class="bg-red-500 text-white font-semibold py-2 px-6 rounded-full shadow-lg hover:bg-red-600 transition" onclick="initializeQuiz('disc'); showPage('quiz-disc')">Làm bài ngay &rarr;</button>
                    </div>
                </div>

                <!-- Thẻ Holland (RIASEC) -->
                <div class="bg-white p-8 rounded-3xl shadow-xl hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-2 border-t-8 border-indigo-500">
                    <h3 class="text-2xl font-bold text-gray-900 mb-2 text-center">Holland (Sở thích nghề nghiệp)</h3>
                    <p class="text-gray-600 text-center text-sm">Xác định nhóm nghề nghiệp phù hợp với sở thích cá nhân (Realistic, Investigative...). (54 Câu)</p>
                    <div class="text-center mt-4">
                        <button class="bg-indigo-500 text-white font-semibold py-2 px-6 rounded-full shadow-lg hover:bg-indigo-600 transition" onclick="initializeQuiz('holland'); showPage('quiz-holland')">Làm bài ngay &rarr;</button>
                    </div>
                </div>

                <!-- Thẻ MBTI -->
                <div class="bg-white p-8 rounded-3xl shadow-xl hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-2 border-t-8 border-green-500">
                    <h3 class="text-2xl font-bold text-gray-900 mb-2 text-center">MBTI (Tâm lý học)</h3>
                    <p class="text-gray-600 text-center text-sm">Tìm ra loại hình tính cách (nhóm 4 chữ cái) và cách bạn tương tác với thế giới. (40 Câu)</p>
                    <div class="text-center mt-4">
                        <button class="bg-green-500 text-white font-semibold py-2 px-6 rounded-full shadow-lg hover:bg-green-600 transition" onclick="initializeQuiz('mbti'); showPage('quiz-mbti')">Làm bài ngay &rarr;</button>
                    </div>
                </div>

            </div>
        </section>

        <!-- Trang trắc nghiệm DISC (Giữ nguyên ID) -->
        <section id="quiz-disc-page" class="page-content">
            <div id="disc-quiz-container" class="w-full max-w-4xl mx-auto bg-white shadow-2xl rounded-xl overflow-hidden p-6 md:p-10">
                <!-- Header -->
                <header class="text-center mb-8">
                    <h1 class="text-4xl font-extrabold text-gray-900 mb-2">Trắc Nghiệm Tính Cách <span class="text-disc-i">DISC</span></h1>
                    <p class="text-lg text-gray-500">30 câu hỏi - Khám phá phong cách hành vi tự nhiên của bạn</p>
                    <div class="h-1 bg-gradient-to-r from-red-500 via-blue-500 to-amber-500 rounded mt-3"></div>
                </header>

                <!-- Thanh tiến trình tổng thể -->
                <div id="disc-overall-progress-container" class="mb-8">
                    <p class="text-sm font-medium text-gray-600 mb-2">Tiến độ Trắc nghiệm</p>
                    <div class="w-full bg-gray-200 rounded-full h-2.5">
                        <!-- Thanh tổng thể (chạy từ 0% đến 100% khi làm bài) -->
                        <div id="disc-overall-progress-bar" class="bg-disc-s h-2.5 rounded-full transition-all duration-500 ease-out" style="width: 0%;"></div>
                    </div>
                </div>

                <!-- Quiz Area (Khu vực câu hỏi) -->
                <div id="disc-quiz-area">
                    <!-- Questions will be dynamically inserted here -->
                </div>

                <!-- Result Area (Khu vực kết quả) -->
                <div id="disc-result-area" class="hidden text-center">
                    <h2 class="text-3xl font-bold mb-4 text-gray-800">🎉 Kết Quả Tính Cách DISC Của Bạn</h2>
                    <div id="disc-result-profile" class="p-6 md:p-8 rounded-xl shadow-lg border-t-8 border-disc-i bg-white transition-all duration-500">
                        <div id="disc-main-style-display" class="mb-4">
                            <!-- Main style will be inserted here -->
                        </div>

                        <!-- Score Chart -->
                        <div class="grid grid-cols-2 gap-4 text-left mt-6">

                            <!-- D - Dominance -->
                            <div class="flex items-center space-x-3 p-3 bg-red-50 rounded-lg shadow-md">
                                <span class="text-disc-d text-2xl font-bold">D</span>
                                <div class="flex-1">
                                    <div class="flex justify-between items-baseline">
                                        <p class="text-sm font-semibold text-gray-700">Thống trị (Dominance)</p>
                                        <span id="disc-score-count-d" class="text-base font-bold text-disc-d">0 / 30</span> <!-- HIỂN THỊ ĐIỂM -->
                                    </div>
                                    <div class="w-full bg-gray-200 rounded-full h-2.5">
                                        <!-- Thanh này sẽ chạy mượt mà khi xem kết quả -->
                                        <div id="disc-score-d" class="h-2.5 rounded-full progress-bar-transition" style="background-color: var(--tw-disc-d); width: 0%;"></div>
                                    </div>
                                </div>
                            </div>

                            <!-- I - Influence -->
                            <div class="flex items-center space-x-3 p-3 bg-blue-50 rounded-lg shadow-md">
                                <span class="text-disc-i text-2xl font-bold">I</span>
                                <div class="flex-1">
                                    <div class="flex justify-between items-baseline">
                                        <p class="text-sm font-semibold text-gray-700">Ảnh hưởng (Influence)</p>
                                        <span id="disc-score-count-i" class="text-base font-bold text-disc-i">0 / 30</span> <!-- HIỂN THỊ ĐIỂM -->
                                    </div>
                                    <div class="w-full bg-gray-200 rounded-full h-2.5">
                                        <!-- Thanh này sẽ chạy mượt mà khi xem kết quả -->
                                        <div id="disc-score-i" class="h-2.5 rounded-full progress-bar-transition" style="background-color: var(--tw-disc-i); width: 0%;"></div>
                                    </div>
                                </div>
                            </div>

                            <!-- S - Steadiness -->
                            <div class="flex items-center space-x-3 p-3 bg-green-50 rounded-lg shadow-md">
                                <span class="text-disc-s text-2xl font-bold">S</span>
                                <div class="flex-1">
                                    <div class="flex justify-between items-baseline">
                                        <p class="text-sm font-semibold text-gray-700">Kiên định (Steadiness)</p>
                                        <span id="disc-score-count-s" class="text-base font-bold text-disc-s">0 / 30</span> <!-- HIỂN THỊ ĐIỂM -->
                                    </div>
                                    <div class="w-full bg-gray-200 rounded-full h-2.5">
                                        <!-- Thanh này sẽ chạy mượt mà khi xem kết quả -->
                                        <div id="disc-score-s" class="h-2.5 rounded-full progress-bar-transition" style="background-color: var(--tw-disc-s); width: 0%;"></div>
                                    </div>
                                </div>
                            </div>

                            <!-- C - Conscientiousness -->
                            <div class="flex items-center space-x-3 p-3 bg-yellow-50 rounded-lg shadow-md">
                                <span class="text-disc-c text-2xl font-bold">C</span>
                                <div class="flex-1">
                                    <div class="flex justify-between items-baseline">
                                        <p class="text-sm font-semibold text-gray-700">Tuân thủ (Conscientiousness)</p>
                                        <span id="disc-score-count-c" class="text-base font-bold text-disc-c">0 / 30</span> <!-- HIỂN THỊ ĐIỂM -->
                                    </div>
                                    <div class="w-full bg-gray-200 rounded-full h-2.5">
                                        <!-- Thanh này sẽ chạy mượt mà khi xem kết quả -->
                                        <div id="disc-score-c" class="h-2.5 rounded-full progress-bar-transition" style="background-color: var(--tw-disc-c); width: 0%;"></div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <p id="disc-result-description" class="mt-6 text-gray-600 leading-relaxed italic"></p>

                        <button onclick="DISCEngine.restartQuiz()" class="mt-8 bg-gray-700 hover:bg-gray-900 text-white font-bold py-3 px-6 rounded-lg transition duration-300 transform hover:scale-105 shadow-md">
                            Làm lại Trắc nghiệm
                        </button>
                    </div>
                </div>
            </div>
        </section>

        <!-- Trang trắc nghiệm Holland (Mới) -->
        <section id="quiz-holland-page" class="page-content">
            <div id="holland-quiz-container" class="w-full max-w-4xl mx-auto bg-white shadow-2xl rounded-xl overflow-hidden p-6 md:p-10">
                <!-- Header -->
                <header class="text-center mb-8">
                    <h1 class="text-4xl font-extrabold text-gray-900 mb-2">Trắc Nghiệm Sở Thích Nghề Nghiệp <span class="text-indigo-600">Holland (RIASEC)</span></h1>
                    <p class="text-lg text-gray-500">54 câu hỏi - Khám phá nhóm nghề nghiệp phù hợp với sở thích của bạn.</p>
                    <div class="h-1 bg-gradient-to-r from-red-700 via-purple-500 to-gray-600 rounded mt-3"></div>
                </header>

                <!-- Thanh tiến trình tổng thể -->
                <div id="holland-overall-progress-container" class="mb-8">
                    <p class="text-sm font-medium text-gray-600 mb-2">Tiến độ Trắc nghiệm</p>
                    <div class="w-full bg-gray-200 rounded-full h-2.5">
                        <div id="holland-overall-progress-bar" class="bg-indigo-500 h-2.5 rounded-full transition-all duration-500 ease-out" style="width: 0%;"></div>
                    </div>
                </div>

                <!-- Quiz Area (Khu vực câu hỏi) -->
                <div id="holland-quiz-area">
                    <!-- Questions will be dynamically inserted here -->
                </div>

                <!-- Result Area (Khu vực kết quả) -->
                <div id="holland-result-area" class="hidden text-center">
                    <h2 class="text-3xl font-bold mb-4 text-gray-800">🎉 Kết Quả Mã Holland (RIASEC) Của Bạn</h2>
                    <div id="holland-result-profile" class="p-6 md:p-8 rounded-xl shadow-lg border-t-8 border-indigo-500 bg-white transition-all duration-500">
                        <div id="holland-main-style-display" class="mb-4">
                            <!-- Main style will be inserted here -->
                        </div>

                        <!-- Score Chart -->
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 text-left mt-6" id="holland-score-chart">
                            <!-- Holland Scores will be dynamically inserted here -->
                        </div>

                        <p id="holland-result-description" class="mt-6 text-gray-600 leading-relaxed italic"></p>

                        <button onclick="HollandEngine.restartQuiz()" class="mt-8 bg-gray-700 hover:bg-gray-900 text-white font-bold py-3 px-6 rounded-lg transition duration-300 transform hover:scale-105 shadow-md">
                            Làm lại Trắc nghiệm
                        </button>
                    </div>
                </div>
            </div>
        </section>

        <!-- Trang trắc nghiệm MBTI (Mới) -->
        <section id="quiz-mbti-page" class="page-content">
            <div id="mbti-quiz-container" class="w-full max-w-4xl mx-auto bg-white shadow-2xl rounded-xl overflow-hidden p-6 md:p-10">
                <!-- Header -->
                <header class="text-center mb-8">
                    <h1 class="text-4xl font-extrabold text-gray-900 mb-2">Trắc Nghiệm Tính Cách <span class="text-green-600">MBTI</span></h1>
                    <p class="text-lg text-gray-500">40 câu hỏi - Khám phá 4 cặp đối lập chính trong tính cách của bạn.</p>
                    <div class="h-1 bg-gradient-to-r from-green-500 via-blue-500 to-pink-400 rounded mt-3"></div>
                </header>

                <!-- Thanh tiến trình tổng thể -->
                <div id="mbti-overall-progress-container" class="mb-8">
                    <p class="text-sm font-medium text-gray-600 mb-2">Tiến độ Trắc nghiệm</p>
                    <div class="w-full bg-gray-200 rounded-full h-2.5">
                        <div id="mbti-overall-progress-bar" class="bg-green-500 h-2.5 rounded-full transition-all duration-500 ease-out" style="width: 0%;"></div>
                    </div>
                </div>

                <!-- Quiz Area (Khu vực câu hỏi) -->
                <div id="mbti-quiz-area">
                    <!-- Questions will be dynamically inserted here -->
                </div>

                <!-- Result Area (Khu vực kết quả) -->
                <div id="mbti-result-area" class="hidden text-center">
                    <h2 class="text-3xl font-bold mb-4 text-gray-800">🎉 Kết Quả Tính Cách MBTI Của Bạn</h2>
                    <div id="mbti-result-profile" class="p-6 md:p-8 rounded-xl shadow-lg border-t-8 border-green-500 bg-white transition-all duration-500">
                        <div id="mbti-main-style-display" class="mb-4">
                            <!-- Main style will be inserted here -->
                        </div>
                        <p id="mbti-result-description" class="mt-6 text-gray-600 leading-relaxed italic"></p>
                        <button onclick="MBTIEngine.restartQuiz()" class="mt-8 bg-gray-700 hover:bg-gray-900 text-white font-bold py-3 px-6 rounded-lg transition duration-300 transform hover:scale-105 shadow-md">
                            Làm lại Trắc nghiệm
                        </button>
                    </div>
                </div>
            </div>
        </section>

        <!-- Trang tra cứu ngành nghề (Chatbot AI) -->
        <section id="search-page" class="page-content">
            <h1 class="text-4xl font-bold text-center mb-8 text-gray-900">Hỏi đáp Ngành nghề cùng AI (Có trích dẫn nguồn)</h1>
            <div class="bg-white p-8 rounded-3xl shadow-xl flex flex-col chat-container">
                <div id="chat-history" class="flex-grow overflow-y-auto p-4 mb-4 flex flex-col space-y-4 rounded-xl border border-gray-200 bg-gray-50">
                    <!-- Lịch sử chat sẽ được hiển thị tại đây -->
                </div>
                <div class="flex items-center space-x-4">
                    <input type="text" id="search-user-input" placeholder="Bạn muốn hỏi về ngành nghề gì?" class="flex-grow p-3 border border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-indigo-500" disabled>
                    <button id="search-send-btn" class="bg-indigo-600 text-white font-bold p-3 rounded-full shadow-lg hover:bg-indigo-700 transition duration-300 disabled:opacity-50" disabled>
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-6 h-6">
                            <path d="M3.478 2.405a.75.75 0 00-.926.94l2.432 7.917H3.75a.75.75 0 00-.75.75v6.75a.75.75 0 001.085.67L17.25 4.75l-13.772-2.345Z" />
                        </svg>
                    </button>
                </div>
            </div>
        </section>

        <!-- Trang Tâm sự & Lời khuyên (Chatbot Tư vấn) -->
        <section id="advice-page" class="page-content">
            <h1 class="text-4xl font-bold text-center mb-8 text-gray-900">Góc Tâm sự & Lời khuyên Cuộc sống (AI đồng cảm)</h1>
            <div class="bg-white p-8 rounded-3xl shadow-xl flex flex-col chat-container">
                <div id="advice-chat-history" class="flex-grow overflow-y-auto p-4 mb-4 flex flex-col space-y-4 rounded-xl border border-gray-200 bg-gray-50">
                    <!-- Lịch sử chat sẽ được hiển thị tại đây -->
                </div>
                <div class="flex items-center space-x-4">
                    <input type="text" id="advice-user-input" placeholder="Bạn đang cảm thấy thế nào? Hãy chia sẻ nhé." class="flex-grow p-3 border border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-green-500" disabled>
                    <button id="advice-send-btn" class="bg-green-600 text-white font-bold p-3 rounded-full shadow-lg hover:bg-green-700 transition duration-300 disabled:opacity-50" disabled>
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-6 h-6">
                            <path d="M3.478 2.405a.75.75 0 00-.926.94l2.432 7.917H3.75a.75.75 0 00-.75.75v6.75a.75.75 0 001.085.67L17.25 4.75l-13.772-2.345Z" />
                        </svg>
                    </button>
                </div>
            </div>
        </section>

        <!-- Trang Truyền cảm hứng (ĐÃ CẬP NHẬT) -->
        <section id="inspo-page" class="page-content">
            <h1 class="text-4xl font-bold text-center mb-10 text-gray-900">Góc Truyền cảm hứng: Những Câu Chuyện Thật</h1>
            <p class="text-center text-gray-600 mb-12 max-w-3xl mx-auto">
                Khám phá hành trình đầy nỗ lực, thất bại và thành công của những con người đã tìm thấy và kiên trì với con đường của mình.
            </p>
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                <!-- Câu chuyện 1 (MỚI) -->
                <div class="bg-white p-8 rounded-3xl shadow-xl border-l-4 border-blue-500">
                    <h3 class="text-2xl font-bold text-blue-700 mb-3">Nguyễn Huyền Châu: Chuyện trao đi những cơ hội</h3>
                    <p class="text-sm text-gray-500 mb-4">Lĩnh vực: Hoạt động xã hội, Doanh nghiệp</p>
                    <p class="text-gray-700 mb-4">
                        Nguyễn Huyền Châu thường được nhắc tới như cô gái người Việt dưới 30 tuổi đầu tiên được mời tham dự Diễn đàn Kinh tế thế giới Davos. Hành trình này bắt đầu từ khi cô 19 tuổi, biết rằng: mình hoàn toàn có thể làm những gì mình thích, cứ thử, sai, và làm lại...
                    </p>
                    <!-- Make sure showStoryModal is accessible globally -->
                    <button class="text-indigo-600 font-semibold hover:underline" onclick="window.showStoryModal('chau')">Đọc toàn bộ câu chuyện &rarr;</button>
                </div>

                <!-- Câu chuyện 2 (MỚI) -->
                <div class="bg-white p-8 rounded-3xl shadow-xl border-l-4 border-green-500">
                    <h3 class="text-2xl font-bold text-green-700 mb-3">Đặng Lê Nguyên Vũ: Câu chuyện vua cafe</h3>
                    <p class="text-sm text-gray-500 mb-4">Lĩnh vực: Khởi nghiệp, F&B</p>
                    <p class="text-gray-700 mb-4">
                        33 tuổi, ông đã tạo ra một đế chế cà phê danh tiếng. Là chàng sinh viên Y khoa nhưng ông lại luôn nung nấu ước mơ kinh doanh, mong muốn nâng tầm hạt cà phê Việt Nam trên thị trường thế giới...
                    </p>
                     <!-- Make sure showStoryModal is accessible globally -->
                    <button class="text-indigo-600 font-semibold hover:underline" onclick="window.showStoryModal('vu')">Đọc toàn bộ câu chuyện &rarr;</button>
                </div>

                <!-- Câu chuyện 3 (MỚI) -->
                <div class="bg-white p-8 rounded-3xl shadow-xl border-l-4 border-red-500 lg:col-span-2">
                    <h3 class="text-2xl font-bold text-red-700 mb-3">Harland Sanders: Huyền thoại KFC ở tuổi 66</h3>
                    <p class="text-sm text-gray-500 mb-4">Lĩnh vực: Khởi nghiệp, F&B</p>
                    <p class="text-gray-700 mb-4">
                        Trải qua một cuộc đời cực nhọc, ở tuổi 66, Harland Sanders quyết tâm tạo ra công thức gà rán của riêng mình. Ông đã đi từng nhà để thuyết phục và bị từ chối 1009 lần trước khi thành công...
                    </p>
                     <!-- Make sure showStoryModal is accessible globally -->
                    <button class="text-indigo-600 font-semibold hover:underline" onclick="window.showStoryModal('sanders')">Đọc toàn bộ câu chuyện &rarr;</button>
                </div>
            </div>
        </section>

        <!-- Trang Khảo sát & Góp ý -->
        <section id="survey-page" class="page-content">
            <h1 class="text-4xl font-bold text-center mb-8 text-gray-900">Góp ý & Khảo sát Người dùng</h1>
            <div class="bg-white p-8 rounded-3xl shadow-xl h-[80vh] min-h-[600px] flex flex-col">
                <p class="text-center text-gray-600 mb-4">
                    Ý kiến của bạn là vô cùng quan trọng để chúng tôi cải thiện hệ sinh thái định hướng nghề nghiệp này. Xin cảm ơn bạn đã dành thời gian!
                </p>
                <iframe src="https://docs.google.com/forms/d/e/1FAIpQLScPlm_y_VS_fiVGtQBC_2auIino13tKOrEDB0DtWKqgagRXSQ/viewform?usp=embed_facebook"
                        width="100%"
                        height="100%"
                        frameborder="0"
                        marginheight="0"
                        marginwidth="0"
                        class="rounded-2xl border border-gray-300 flex-grow"
                        title="Form Khảo sát">
                    Đang tải form khảo sát...
                </iframe>
            </div>
        </section>

        <!-- Trang tuyển sinh (ĐÃ CẬP NHẬT TỪ FILE) -->
        <section id="admissions-page" class="page-content">
            <div class="max-w-4xl mx-auto bg-white rounded-lg shadow-xl overflow-hidden">
        
                <!-- Tiêu đề chính -->
                <header class="bg-gradient-to-r from-blue-600 to-blue-800 p-6 shadow-md">
                    <h1 class="text-2xl md:text-3xl font-bold text-white text-center">
                        TUYỂN SINH
                    </h1>
                    <p class="text-center text-blue-100 text-sm md:text-base mt-2">
                        Tổng hợp các phương thức xét tuyển phổ biến hiện nay
                    </p>
                </header>
        
                <!-- Vùng chứa các tab -->
                <div>
                    <!-- Các nút bấm chuyển tab -->
                    <!-- Thêm overflow-x-auto để cuộn ngang trên di động -->
                    <div class="border-b border-gray-200 overflow-x-auto whitespace-nowrap">
                        <nav class="flex -mb-px" aria-label="Tabs">
                            <!-- Nút Tab 1: Thi THPT (mặc định active) -->
                            <button class="admissions-tab-button tab-button tab-active" data-tab="tab-thpt">
                                Thi Tốt Nghiệp THPT
                            </button>
                            
                            <!-- Nút Tab 2: Học bạ -->
                            <button class="admissions-tab-button tab-button text-gray-600 hover:text-blue-600" data-tab="tab-hocba">
                                Xét Học Bạ
                            </button>
                            
                            <!-- Nút Tab 3: ĐGNL -->
                            <button class="admissions-tab-button tab-button text-gray-600 hover:text-blue-600" data-tab="tab-dgnl">
                                Thi ĐGNL / ĐGTD
                            </button>
                            
                            <!-- Nút Tab 4: Tuyển thẳng -->
                            <button class="admissions-tab-button tab-button text-gray-600 hover:text-blue-600" data-tab="tab-tuyenthang">
                                Tuyển Thẳng & Ưu Tiên
                            </button>
                        </nav>
                    </div>
        
                    <!-- Nội dung các tab -->
                    <div class="p-6 md:p-8">
                        
                        <!-- Nội dung Tab 1: Thi THPT (mặc định hiển thị) -->
                        <div id="tab-thpt" class="admissions-tab-panel tab-panel space-y-4">
                            <h2 class="text-2xl font-semibold text-blue-700">Xét Điểm Thi Tốt Nghiệp THPT</h2>
                            
                            <h3 class="text-xl font-semibold text-gray-800 pt-2">1. Giới thiệu chung về kỳ thi</h3>
                            <ul class="list-none space-y-2 text-gray-700">
                                <li><strong>Tên kỳ thi:</strong> Kỳ thi Tốt nghiệp Trung học phổ thông (THPT).</li>
                                <li><strong>Bản chất:</strong> Đây là kỳ thi "2 trong 1", phục vụ hai mục đích chính:
                                    <ul class="list-disc list-inside ml-6 mt-1">
                                        <li>Công nhận tốt nghiệp THPT cho học sinh.</li>
                                        <li>Làm căn cứ để các trường Đại học, Cao đẳng sử dụng xét tuyển sinh viên.</li>
                                    </ul>
                                </li>
                                <li><strong>Điểm mốc 2025:</strong> Đây là năm đầu tiên kỳ thi được tổ chức cho học sinh theo học Chương trình Giáo dục phổ thông 2018. Do đó, cấu trúc môn thi có sự thay đổi căn bản.</li>
                                <li><strong>Đơn vị tổ chức:</strong> Bộ Giáo dục và Đào tạo (Bộ GD&ĐT) tổ chức thi và xét tuyển tập trung, công khai, minh bạch trên hệ thống chung.</li>
                            </ul>
        
                            <h3 class="text-xl font-semibold text-gray-800 pt-2">2. Cách thức thi (Áp dụng từ 2025)</h3>
                            <p class="text-gray-700 leading-relaxed">
                                Kỳ thi Tốt nghiệp THPT 2025 có sự thay đổi lớn về số lượng và cơ cấu môn thi, theo phương án 2+2. Thí sinh sẽ thi tổng cộng 4 môn, thay vì 5-6 môn như các năm trước.
                            </p>
                            
                            <h4 class="text-lg font-semibold text-gray-700">2 môn Bắt buộc:</h4>
                            <ul class="list-disc list-inside ml-6 text-gray-700">
                                <li>Toán</li>
                                <li>Ngữ văn</li>
                            </ul>
        
                            <h4 class="text-lg font-semibold text-gray-700">2 môn Tự chọn:</h4>
                            <p class="text-gray-700 leading-relaxed">Thí sinh được chọn 2 trong số 9 môn sau (đây là các môn học sinh đã học ở Lớp 12):</p>
                            <ul class="list-disc list-inside ml-6 text-gray-700 grid grid-cols-2 md:grid-cols-3 gap-x-4">
                                <li>Ngoại ngữ</li>
                                <li>Lịch sử</li>
                                <li>Địa lý</li>
                                <li>Vật lý</li>
                                <li>Hóa học</li>
                                <li>Sinh học</li>
                                <li>Giáo dục kinh tế và pháp luật</li>
                                <li>Tin học</li>
                                <li>Công nghệ (2 phân môn)</li>
                            </ul>
        
                            <h4 class="text-lg font-semibold text-gray-700">Chiến lược chọn môn thi:</h4>
                            <p class="text-gray-700 leading-relaxed">
                                Việc chọn 2 môn tự chọn là cực kỳ quan trọng. Thí sinh phải chọn môn thi dựa trên định hướng ngành nghề và tổ hợp xét tuyển mà các trường Đại học công bố.
                            </p>
                            <p class="text-gray-700 leading-relaxed bg-gray-50 p-3 rounded-lg border border-gray-200">
                                <strong>Ví dụ:</strong> Nếu muốn xét tuyển vào ngành Kỹ thuật máy tính (thường xét tổ hợp Toán, Lý, Hóa hoặc Toán, Lý, Anh), thí sinh bắt buộc phải thi <strong>Toán</strong> (bắt buộc) và chọn 2 môn tự chọn là <strong>Vật lý</strong> và <strong>Hóa học</strong> (hoặc <strong>Vật lý</strong> và <strong>Tiếng Anh</strong>).
                            </p>
        
                            <h3 class="text-xl font-semibold text-gray-800 pt-2">3. Điểm xét tuyển Đại học</h3>
                            <p class="text-gray-700 leading-relaxed">Các trường Đại học sẽ tự công bố tổ hợp xét tuyển (thường là 3 hoặc 4 môn) cho từng ngành học.</p>
        
                            <h4 class="text-lg font-semibold text-gray-700">a. Tổ hợp xét tuyển</h4>
                            <ul class="list-disc list-inside ml-6 space-y-2 text-gray-700">
                                <li>Do cách thức thi 2+2, các tổ hợp xét tuyển 2025 sẽ linh hoạt hơn.</li>
                                <li><strong>Xu hướng:</strong> Các trường dự kiến vẫn ưu tiên các tổ hợp truyền thống (Toán-Lý-Hóa, Toán-Hóa-Sinh, Toán-Văn-Anh...) nhưng sẽ bổ sung nhiều tổ hợp mới để phù hợp (ví dụ: Toán-Lý-Tin, Toán-Văn-Giáo dục KT&PL...).</li>
                                <li>Thí sinh phải tra cứu <strong>Đề án tuyển sinh 2025</strong> của trường để biết chính xác ngành mình muốn vào xét tuyển những tổ hợp nào.</li>
                            </ul>
        
                            <h4 class="text-lg font-semibold text-gray-700">b. Công thức tính Điểm xét tuyển (ĐXT)</h4>
                            <p class="text-gray-700 leading-relaxed">Công thức chung cơ bản (cho thang điểm 30):</p>
                            <code class="block bg-gray-100 p-3 rounded-md text-gray-800 text-sm overflow-x-auto">ĐXT = Tổng điểm các môn trong tổ hợp + Điểm ưu tiên (nếu có)</code>
                            <p class="text-gray-700 leading-relaxed mt-2"><strong>Nhân hệ số môn chính:</strong> Một số ngành (như Sư phạm Ngoại ngữ, Ngôn ngữ Anh...) có thể nhân hệ số 2 môn chính. Ví dụ:</p>
                            <ul class="list-disc list-inside ml-6 space-y-2 text-gray-700">
                                <li>Quy về thang 30: <code class="text-sm">ĐXT = [(Điểm Môn chính * 2 + Môn 2 + Môn 3) * 3/4] + Điểm ưu tiên</code></li>
                                <li>Để thang 40: <code class="text-sm">ĐXT = (Điểm Môn chính * 2) + Môn 2 + Môn 3 + Điểm ưu tiên (quy đổi)</code></li>
                            </ul>
        
                            <h4 class="text-lg font-semibold text-gray-700">c. Điểm ưu tiên</h4>
                            <p class="text-gray-700 leading-relaxed">Điểm ưu tiên được giữ ổn định, bao gồm:</p>
                            <ul class="list-disc list-inside ml-6 space-y-2 text-gray-700">
                                <li><strong>Ưu tiên theo đối tượng</strong> (VD: con thương binh, dân tộc thiểu số...): Mức 1.0 hoặc 2.0 điểm.</li>
                                <li><strong>Ưu tiên theo khu vực</strong> (Nơi học THPT):
                                    <ul class="list-circle list-inside ml-8 mt-1">
                                        <li>Khu vực 1 (KV1 - vùng sâu, xa, đặc biệt khó khăn): +0.75 điểm.</li>
                                        <li>Khu vực 2 Nông thôn (KV2-NT): +0.5 điểm.</li>
                                        <li>Khu vực 2 (KV2 - thị xã, TP trực thuộc tỉnh): +0.25 điểm.</li>
                                        <li>Khu vực 3 (KV3 - quận nội thành TP trực thuộc TW): 0 điểm.</li>
                                    </ul>
                                </li>
                            </ul>
                            <div class="bg-yellow-50 border-l-4 border-yellow-400 p-4 rounded-r-lg">
                                <p class="font-semibold text-yellow-800">Lưu ý (Áp dụng từ 2023):</p>
                                <p class="text-yellow-700">Thí sinh có tổng điểm thi (chưa cộng ưu tiên) từ <strong>22.5 điểm</strong> trở lên (thang 30) thì điểm ưu tiên sẽ bị <strong>giảm tuyến tính</strong> theo công thức của Bộ. Nếu đạt 30 điểm, điểm ưu tiên bằng 0.</p>
                            </div>
        
                            <h3 class="text-xl font-semibold text-gray-800 pt-2">4. Lưu ý quan trọng nhất cho 2025</h3>
                            <ul class="list-decimal list-inside space-y-3 text-gray-700">
                                <li>
                                    <strong>Tra cứu Đề án tuyển sinh 2025:</strong>
                                    <p class="ml-6">Đây là việc quan trọng nhất. Thí sinh phải vào website của các trường Đại học mình nhắm tới để xem chính xác:</p>
                                    <ul class="list-disc list-inside ml-10 mt-1">
                                        <li>Ngành đó xét tuyển những tổ hợp môn nào?</li>
                                        <li>Có tiêu chí phụ hay môn nhân hệ số không?</li>
                                    </ul>
                                </li>
                                <li>
                                    <strong>Chọn môn tự chọn chiến lược:</strong>
                                    <p class="ml-6">Việc chọn 2 môn thi tự chọn (ở Bước 2) quyết định trực tiếp bạn có thể nộp hồ sơ vào những ngành nào. Phải chọn môn dựa trên tổ hợp xét tuyển (ở Bước 1).</p>
                                </li>
                                <li>
                                    <strong>Đăng ký nguyện vọng (NV):</strong>
                                    <ul class="list-disc list-inside ml-10 mt-1">
                                        <li>Thí sinh đăng ký xét tuyển trực tuyến trên hệ thống chung của Bộ GD&ĐT (sau khi đã có điểm thi).</li>
                                        <li>Được đăng ký không giới hạn số lượng nguyện vọng.</li>
                                        <li>Các nguyện vọng phải được sắp xếp theo thứ tự ưu tiên từ 1 đến hết.</li>
                                    </ul>
                                </li>
                                <li>
                                    <strong>Quy tắc lọc ảo:</strong>
                                    <p class="ml-6">Hệ thống của Bộ sẽ chạy lọc ảo. Thí sinh sẽ chỉ trúng tuyển vào một nguyện vọng duy nhất - là nguyện vọng cao nhất mà thí sinh đủ điểm. (Nếu đã trúng NV1, sẽ không xét NV2, NV3...).</p>
                                </li>
                            </ul>
                        </div>
        
                        <!-- Nội dung Tab 2: Học bạ (mặc định ẩn) -->
                        <div id="tab-hocba" class="admissions-tab-panel tab-panel hidden space-y-4">
                            <h2 class="text-2xl font-semibold text-blue-700">Xét Tuyển Bằng Học Bạ THPT</h2>
                            
                            <h3 class="text-xl font-semibold text-gray-800 pt-2">1. Giới thiệu chung về phương thức</h3>
                            <ul class="list-none space-y-2 text-gray-700">
                                <li><strong>Bản chất:</strong> Là phương thức các trường Đại học (ĐH) sử dụng kết quả học tập (điểm tổng kết các môn, điểm trung bình các học kỳ) được ghi trong học bạ THPT để làm căn cứ xét tuyển.</li>
                                <li><strong>Mục đích:</strong>
                                    <ul class="list-disc list-inside ml-6 mt-1">
                                        <li>Giảm áp lực thi cử cho thí sinh.</li>
                                        <li>Giúp các trường ĐH chủ động tuyển sinh sớm, thu hút thí sinh có quá trình học tập ổn định, tốt.</li>
                                        <li>Đa dạng hóa phương thức tuyển sinh.</li>
                                    </ul>
                                </li>
                                <li><strong>Tác động của 2025:</strong> Dù xét học bạ không phụ thuộc vào kỳ thi Tốt nghiệp 2025, nhưng năm 2025 là lứa học sinh đầu tiên tốt nghiệp theo Chương trình Giáo dục phổ thông 2018. Do đó, các trường ĐH sẽ điều chỉnh các tổ hợp môn xét học bạ để bao gồm các môn học mới (như Tin học, Giáo dục KT&PL...).</li>
                            </ul>
        
                            <h3 class="text-xl font-semibold text-gray-800 pt-2">2. Cách thức xét tuyển (Không thi)</h3>
                            <p class="text-gray-700 leading-relaxed">
                                Phương thức này không sử dụng điểm thi Tốt nghiệp. Mỗi trường ĐH sẽ công bố Đề án tuyển sinh riêng, trong đó quy định rõ cách thức xét học bạ. Có một số hình thức phổ biến sau:
                            </p>
                            <h4 class="text-lg font-semibold text-gray-700">Xét theo tổ hợp 3 môn:</h4>
                            <ul class="list-disc list-inside ml-6 text-gray-700">
                                <li>Các trường quy định các tổ hợp môn (tương tự tổ hợp xét thi Tốt nghiệp, ví dụ: Toán-Lý-Hóa, Toán-Văn-Anh...).</li>
                                <li>Trường sẽ xét dựa trên điểm trung bình của 3 môn đó trong 1 học kỳ (VD: HK1 lớp 12), 2 học kỳ (VD: cả năm lớp 12), hoặc 3-5 học kỳ.</li>
                            </ul>
        
                            <h4 class="text-lg font-semibold text-gray-700">Xét theo tổng điểm trung bình nhiều học kỳ:</h4>
                            <ul class="list-disc list-inside ml-6 text-gray-700">
                                <li><strong>Phổ biến nhất (Xét 5 học kỳ):</strong> Tổng điểm trung bình của 2 học kỳ lớp 10, 2 học kỳ lớp 11, và học kỳ 1 lớp 12.</li>
                                <li><strong>Xét 3 học kỳ:</strong> Tổng điểm trung bình của lớp 11 và học kỳ 1 lớp 12.</li>
                                <li><strong>Xét 6 học kỳ:</strong> Tổng điểm trung bình của cả 3 năm THPT.</li>
                            </ul>
        
                            <h4 class="text-lg font-semibold text-gray-700">Quy trình chung (thường gọi là "Xét tuyển sớm"):</h4>
                            <ul class="list-decimal list-inside ml-6 text-gray-700">
                                <li><strong>Theo dõi Đề án tuyển sinh:</strong> Thí sinh tìm hiểu kỹ website của trường ĐH mình muốn vào để xem: điều kiện, thời gian, tổ hợp môn, cách tính điểm.</li>
                                <li><strong>Đăng ký trực tuyến:</strong> Thí sinh đăng ký xét tuyển trên hệ thống riêng của trường ĐH đó (thường mở từ tháng 3 - tháng 6).</li>
                                <li><strong>Nộp hồ sơ:</strong> Nộp các giấy tờ theo yêu cầu (bản photo công chứng học bạ, giấy tờ ưu tiên...).</li>
                                <li><strong>Nhận kết quả:</strong> Các trường ĐH công bố "Kết quả trúng tuyển có điều kiện" (thường trước khi thi Tốt nghiệp THPT).</li>
                            </ul>
        
                            <h3 class="text-xl font-semibold text-gray-800 pt-2">3. Điểm xét tuyển (ĐXT)</h3>
                            <h4 class="text-lg font-semibold text-gray-700">a. Ngưỡng đảm bảo chất lượng (Điểm sàn)</h4>
                            <ul class="list-disc list-inside ml-6 space-y-2 text-gray-700">
                                <li>Hầu hết các trường đều yêu cầu thí sinh phải có học lực Khá hoặc Giỏi (VD: điểm trung bình chung từ 6.5 trở lên).</li>
                                <li><strong>Đặc biệt:</strong> Với các ngành Y Dược, Sư phạm, Bộ GD&ĐT quy định điểm sàn riêng (thường là học lực Giỏi).</li>
                            </ul>
        
                            <h4 class="text-lg font-semibold text-gray-700">b. Cách tính ĐXT</h4>
                            <p class="text-gray-700 leading-relaxed">Tùy theo trường công bố. Ví dụ:</p>
                            <code class="block bg-gray-100 p-3 rounded-md text-gray-800 text-sm overflow-x-auto"><strong>Ví dụ 1 (Xét 3 môn):</strong> ĐXT = (Điểm TB môn 1) + (Điểm TB môn 2) + (Điểm TB môn 3) + Điểm ưu tiên (nếu có)</code>
                            <code class="block bg-gray-100 p-3 rounded-md text-gray-800 text-sm overflow-x-auto mt-2"><strong>Ví dụ 2 (Xét 5 học kỳ):</strong> ĐXT = (ĐTB HK1 L10 + ... + ĐTB HK1 L12) / 5 + Điểm ưu tiên (nếu có)</code>
        
                            <h4 class="text-lg font-semibold text-gray-700">c. Điểm ưu tiên</h4>
                            <ul class="list-disc list-inside ml-6 space-y-2 text-gray-700">
                                <li>Các trường ĐH thường áp dụng điểm ưu tiên khu vực và đối tượng tương tự như quy định của Bộ GD&ĐT.</li>
                                <li>Chính sách giảm điểm ưu tiên (khi thí sinh đạt từ 22.5 điểm trở lên) vẫn được áp dụng để đảm bảo công bằng.</li>
                            </ul>
                            
                            <h3 class="text-xl font-semibold text-gray-800 pt-2">4. Lưu ý quan trọng nhất</h3>
                            
                            <div class="bg-yellow-50 border-l-4 border-yellow-400 p-4 rounded-r-lg space-y-2">
                                <p class="font-semibold text-yellow-800">"Trúng tuyển sớm" KHÔNG PHẢI là trúng tuyển chính thức:</p>
                                <p class="text-yellow-700">Khi nhận kết quả "Trúng tuyển có điều kiện" từ các trường, thí sinh vẫn <strong>BẮT BUỘC phải Tốt nghiệp THPT</strong>.</p>
                            </div>
        
                            <div class="bg-red-50 border-l-4 border-red-500 p-4 rounded-r-lg space-y-2">
                                <p class="font-semibold text-red-800">BẮT BUỘC Đăng ký nguyện vọng lên Hệ thống chung:</p>
                                <p class="text-red-700">Sau khi biết mình đã trúng tuyển sớm, thí sinh VẪN PHẢI đăng ký nguyện vọng đó lên hệ thống đăng ký xét tuyển chung của Bộ GD&ĐT. Nếu thực sự muốn nhập học, <strong>phải đặt nguyện vọng đó là Nguyện vọng 1</strong>. Nếu không đăng ký, thí sinh sẽ mất quyền nhập học bằng học bạ.</p>
                            </div>
        
                            <ul class="list-disc list-inside space-y-2 text-gray-700">
                                <li><strong>Mỗi trường một quy định:</strong> Không có quy chuẩn chung 100%. Thí sinh phải tự mình tra cứu Đề án tuyển sinh của từng trường để biết thời gian, cách thức nộp hồ sơ, cách tính điểm.</li>
                                <li><strong>Cập nhật 2025:</strong> Các tổ hợp xét học bạ sẽ thay đổi. Các trường sẽ bổ sung các môn học của chương trình 2018 (Tin học, Công nghệ, Giáo dục KT&PL...). Thí sinh cần kiểm tra kỹ xem học bạ của mình có lợi thế với các tổ hợp mới này không.</li>
                                <li><strong>Cạnh tranh cao:</strong> Những năm gần đây, điểm chuẩn học bạ của các trường "top" rất cao (thường 28-30 điểm) do chỉ tiêu ít và nhiều thí sinh có học bạ đẹp.</li>
                            </ul>
                        </div>
                        
                        <!-- Nội dung Tab 3: ĐGNL (mặc định ẩn) -->
                        <div id="tab-dgnl" class="admissions-tab-panel tab-panel hidden space-y-4">
                            <h2 class="text-2xl font-semibold text-blue-700">Xét Điểm Thi ĐGNL / ĐGTD</h2>
                            
                            <h3 class="text-xl font-semibold text-gray-800 pt-2">1. Giới thiệu chung về phương thức</h3>
                            <ul class="list-none space-y-2 text-gray-700">
                                <li><strong>Bản chất:</strong> Là phương thức các trường ĐH sử dụng điểm của một kỳ thi riêng (do chính họ hoặc một cụm trường tổ chức) để xét tuyển. Các bài thi này thường kiểm tra năng lực tổng hợp như: tư duy logic, khả năng đọc hiểu, phân tích số liệu, và giải quyết vấn đề, thay vì chỉ tập trung vào kiến thức các môn học cụ thể.</li>
                                <li><strong>Mục đích:</strong>
                                    <ul class="list-disc list-inside ml-6 mt-1">
                                        <li>Tuyển chọn được thí sinh có năng lực, tư duy phù hợp với đặc thù đào tạo của trường (ví dụ: ĐGTD của ĐH Bách khoa Hà Nội ưu tiên tư duy Kỹ thuật).</li>
                                        <li>Đa dạng hóa nguồn tuyển, giảm phụ thuộc vào một kỳ thi THPT duy nhất.</li>
                                        <li>Giúp các trường ĐH chủ động hoàn toàn trong việc tuyển sinh.</li>
                                    </ul>
                                </li>
                                <li><strong>Tác động của 2025:</strong> Các kỳ thi ĐGNL/ĐGTD vốn đã được thiết kế để độc lập với chương trình học THPT cụ thể, mà tập trung vào năng lực. Do đó, chúng hoàn toàn tương thích và là xu hướng phát triển mạnh mẽ song song với Chương trình Giáo dục phổ thông 2018 (lứa học sinh 2025).</li>
                            </ul>
        
                            <h3 class="text-xl font-semibold text-gray-800 pt-2">2. Cách thức thi (Tổng quan 4 kỳ thi lớn)</h3>
                            <p class="text-gray-700 leading-relaxed">
                                Thí sinh muốn sử dụng phương thức này phải chủ động đăng ký tham gia các kỳ thi riêng do các trường ĐH tổ chức. Dưới đây là thông tin về 4 kỳ thi lớn nhất:
                            </p>
        
                            <h4 class="text-lg font-semibold text-gray-700">a. Kỳ thi ĐGNL của Đại học Quốc gia TP.HCM (VNU-HCMC)</h4>
                            <ul class="list-disc list-inside ml-6 space-y-1 text-gray-700">
                                <li><strong>Cấu trúc bài thi:</strong> Một bài thi duy nhất, 120 câu hỏi trắc nghiệm trong 150 phút.</li>
                                <li><strong>Nội dung:</strong> Đánh giá năng lực toàn diện (Sử dụng ngôn ngữ; Toán học, Tư duy logic, Phân tích số liệu; Giải quyết vấn đề).</li>
                                <li><strong>Thang điểm:</strong> 1.200 điểm.</li>
                                <li><strong>Đối tượng sử dụng:</strong> Rộng rãi nhất, hơn 80 trường ĐH trên cả nước sử dụng.</li>
                            </ul>
        
                            <h4 class="text-lg font-semibold text-gray-700">b. Kỳ thi ĐGNL của Đại học Quốc gia Hà Nội (VNU-Hanoi / HSA)</h4>
                            <ul class="list-disc list-inside ml-6 space-y-1 text-gray-700">
                                <li><strong>Cấu trúc bài thi:</strong> Thi trên máy tính, tổng thời gian 195 - 199 phút.</li>
                                <li><strong>Nội dung:</strong> 3 phần (Tư duy định lượng - Toán; Tư duy định tính - Văn, Ngôn ngữ; Khoa học - Tự chọn KHTN hoặc KHXH).</li>
                                <li><strong>Thang điểm:</strong> 150 điểm.</li>
                                <li><strong>Đối tượng sử dụng:</strong> Các trường thành viên ĐHQG-HN và hàng chục trường ĐH khác (chủ yếu phía Bắc).</li>
                            </ul>
        
                            <h4 class="text-lg font-semibold text-gray-700">c. Kỳ thi ĐGTD của Đại học Bách khoa Hà Nội (HUST / TSA)</h4>
                            <ul class="list-disc list-inside ml-6 space-y-1 text-gray-700">
                                <li><strong>Cấu trúc bài thi:</strong> 3 phần (Tư duy Toán học - 60 phút; Tư duy Đọc hiểu - 30 phút; Tư duy Khoa học/Giải quyết vấn đề - 60 phút).</li>
                                <li><strong>Phần 3 (Tự chọn):</strong> Thí sinh được chọn 1 trong 3 nội dung (Lý-Hóa; Hóa-Sinh; Lý-Sử...) tùy theo ngành đăng ký.</li>
                                <li><strong>Thang điểm:</strong> 100 điểm.</li>
                                <li><strong>Đối tượng sử dụng:</strong> ĐH Bách khoa Hà Nội và khoảng 30-40 trường ĐH khối kỹ thuật, kinh tế.</li>
                            </ul>
        
                            <h4 class="text-lg font-semibold text-gray-700">d. Kỳ thi V-SAT</h4>
                            <ul class="list-disc list-inside ml-6 space-y-1 text-gray-700">
                                <li><strong>Đơn vị tổ chức:</strong> Mạng lưới các trường ĐH (ĐH Bách khoa Hà Nội, ĐH Giao thông Vận tải, ĐH Sư phạm Kỹ thuật Vinh...).</li>
                                <li><strong>Cấu trúc bài thi:</strong> Thi theo mô-đun, thí sinh linh hoạt chọn môn thi (Toán, Tiếng Anh, KHTN hoặc KHXH).</li>
                                <li><strong>Đối tượng sử dụng:</strong> Các trường trong mạng lưới tổ chức thi.</li>
                            </ul>
        
                            <h3 class="text-xl font-semibold text-gray-800 pt-2">3. Điểm xét tuyển (ĐXT)</h3>
                            <ul class="list-disc list-inside ml-6 space-y-2 text-gray-700">
                                <li><strong>Quy trình đăng ký:</strong> Thí sinh phải tự đăng ký dự thi trên cổng thông tin của đơn vị tổ chức.</li>
                                <li><strong>Ngưỡng đảm bảo chất lượng (Điểm sàn):</strong> Các trường ĐH sẽ công bố mức điểm sàn riêng.
                                    <p class="text-sm bg-gray-50 p-2 rounded mt-1"><strong>Ví dụ:</strong> Trường A nhận hồ sơ ĐGNL của ĐHQG-HCM từ 750/1200 điểm; Trường B nhận hồ sơ ĐGTD của ĐH Bách khoa HN từ 60/100 điểm.</p>
                                </li>
                                <li><strong>Cách thức nộp hồ sơ:</strong> Thường nộp qua hệ thống xét tuyển sớm của từng trường.</li>
                                <li><strong>Quy đổi điểm:</strong> Nhiều trường sẽ quy đổi điểm về thang 30 để đảm bảo công bằng.
                                    <code class="block bg-gray-100 p-2 rounded-md text-gray-800 text-sm mt-1">ĐXT (thang 30) = (Điểm ĐGNL / 1200) * 30 + Điểm ưu tiên</code>
                                    <code class="block bg-gray-100 p-2 rounded-md text-gray-800 text-sm mt-1">ĐXT (thang 30) = (Điểm ĐGTD / 100) * 30 + Điểm ưu tiên</code>
                                </li>
                                <li><strong>Điểm ưu tiên:</strong> Vẫn áp dụng chính sách ưu tiên khu vực, đối tượng theo quy định của Bộ (bao gồm cả việc giảm điểm ưu tiên khi thí sinh đạt điểm cao).</li>
                            </ul>
        
                            <h3 class="text-xl font-semibold text-gray-800 pt-2">4. Lưu ý quan trọng nhất</h3>
                            
                            <div class="bg-yellow-50 border-l-4 border-yellow-400 p-4 rounded-r-lg space-y-2">
                                <p class="font-semibold text-yellow-800">Cần Tốt nghiệp THPT:</p>
                                <p class="text-yellow-700">Dù thí sinh có điểm ĐGNL/ĐGTD cao đến đâu, thí sinh vẫn <strong>BẮT BUỘC phải có bằng Tốt nghiệp THPT</strong> thì mới đủ điều kiện nhập học chính thức.</p>
                            </div>
        
                            <div class="bg-red-50 border-l-4 border-red-500 p-4 rounded-r-lg space-y-2">
                                <p class="font-semibold text-red-800">BẮT BUỘC Đăng ký nguyện vọng lên Hệ thống chung (Rất quan trọng):</p>
                                <p class="text-red-700">Nếu đã được trường ĐH thông báo "Trúng tuyển có điều kiện" (bằng điểm ĐGNL/ĐGTD theo phương thức Xét tuyển sớm), thí sinh VẪN PHẢI đăng ký nguyện vọng đó lên hệ thống xét tuyển chung của Bộ GD&ĐT. Nếu thực sự muốn nhập học, <strong>phải đặt nguyện vọng đó là Nguyện vọng 1</strong>.</p>
                            </div>
        
                            <ul class="list-disc list-inside space-y-2 text-gray-700">
                                <li><strong>Các kỳ thi hoàn toàn độc lập:</strong> Thí sinh có thể tham gia nhiều kỳ thi khác nhau (cả 4 kỳ thi nếu muốn) và chọn kết quả tốt nhất để xét tuyển.</li>
                                <li><strong>Cấu trúc đề thi đặc thù:</strong> Đề thi ĐGNL/ĐGTD rất khác đề thi THPT. Thí sinh cần tìm hiểu kỹ cấu trúc, làm đề thi minh họa do các trường công bố để làm quen.</li>
                                <li><strong>Chi phí và địa điểm:</strong> Thí sinh phải tự trả lệ phí dự thi và chủ động di chuyển đến các địa điểm tổ chức thi (thường chỉ tập trung ở các thành phố lớn).</li>
                            </ul>
                        </div>
        
                        <!-- Nội dung Tab 4: Tuyển thẳng (mặc định ẩn) -->
                        <div id="tab-tuyenthang" class="admissions-tab-panel tab-panel hidden space-y-4">
                            <h2 class="text-2xl font-semibold text-blue-700">Tuyển Thẳng và Ưu Tiên Xét Tuyển</h2>
                            <p class="text-gray-700 leading-relaxed">
                                Phương thức này dành cho các thí sinh có thành tích đặc biệt xuất sắc hoặc thuộc các đối tượng ưu tiên theo quy định của Bộ GD&ĐT và của riêng từng trường.
                            </p>
                            <ul class="list-disc list-inside space-y-2 text-gray-700">
                                <li><strong>Đối tượng tuyển thẳng (theo Bộ GD&ĐT):</strong>
                                    <ul class="list-circle list-inside ml-6 mt-1">
                                        <li>Thí sinh đạt giải Học sinh giỏi Quốc gia, Quốc tế (các môn văn hóa, KHKT).</li>
                                        <li>Thí sinh thuộc các huyện nghèo, dân tộc thiểu số rất ít người (theo chương trình dự bị đại học).</li>
                                    </ul>
                                </li>
                                <li><strong>Đối tượng ưu tiên xét tuyển/tuyển thẳng (theo đề án riêng của trường):</strong>
                                    <ul class="list-circle list-inside ml-6 mt-1">
                                        <li>Học sinh các trường THPT chuyên.</li>
                                        <li>Có chứng chỉ quốc tế (IELTS, SAT, ACT...).</li>
                                        <li>Học sinh đạt giải HSG cấp Tỉnh/Thành phố.</li>
                                    </ul>
                                </li>
                            </ul>
                        </div>
        
                    </div>
                </div>
            </div>
        </section>


        <!-- Trang mạng xã hội -->
        <section id="social-media-page" class="page-content">
            <h1 class="text-4xl font-bold text-center mb-8">Tham gia cộng đồng</h1>
            <p class="text-center text-gray-600 mb-12">
                Kết nối với chúng tôi qua các nền tảng mạng xã hội để cập nhật những thông tin mới nhất.
            </p>
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
                <a href="http://www.youtube.com/@EDUPATH-f4e" target="_blank" class="block bg-white p-8 rounded-3xl shadow-xl hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-2 text-center">
                    <div class="text-6xl text-red-500 mb-4">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512" fill="currentColor" class="w-16 h-16 mx-auto">
                            <path d="M549.655 124.083c-6.281-23.65-24.787-42.276-48.284-48.597C458.781 64 288 64 288 64S117.22 64 74.629 75.486c-23.497 6.322-42.003 24.947-48.284 48.597-11.412 42.867-11.412 132.305-11.412 132.305s0 89.438 11.412 132.305c6.281 23.65 24.787 41.517 48.284 47.838C117.22 448 288 448 288 448s170.781 0 213.371-11.486c23.497-6.321 42.003-24.188 48.284-47.838 11.412-42.867 11.412-132.305 11.412-132.305s0-89.438-11.412-132.305zm-317.51 213.508V175.147l142.753 71.791-142.753 71.791z"/>
                        </svg>
                    </div>
                    <h4 class="text-2xl font-bold mb-2">YouTube</h4>
                    <p class="text-gray-600">Xem các video chuyên sâu và workshop về định hướng nghề nghiệp.</p>
                    <span class="inline-block mt-4 text-indigo-600 font-semibold hover:underline">Theo dõi ngay &rarr;</span>
                </a>
                <a href="https://www.facebook.com/profile.php?id=61582417071028" target="_blank" class="block bg-white p-8 rounded-3xl shadow-xl hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-2 text-center">
                    <div class="text-6xl text-blue-600 mb-4">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" fill="currentColor" class="w-16 h-16 mx-auto">
                            <path d="M504 256C504 119 393 8 256 8S8 119 8 256c0 123.78 90.69 226.38 209.25 245V327.69h-63V256h63v-54.64c0-62.15 37-96.48 93.67-96.48 27.14 0 55.52 4.84 55.52 4.84v61h-31.28c-30.8 0-40.42 19.12-40.42 38.73V256h68.78l-11 71.69h-57.78V489C413.31 482.38 504 379.78 504 256z"/>
                        </svg>
                    </div>
                    <h4 class="text-2xl font-bold mb-2">Facebook</h4>
                    <p class="text-gray-600">Tham gia cộng đồng, hỏi đáp và nhận tư vấn trực tiếp.</p>
                    <span class="inline-block mt-4 text-indigo-600 font-semibold hover:underline">Theo dõi ngay &rarr;</span>
                </a>
                <a href="https://tiktok.com/@edupath.tng.lai.c" target="_blank" class="block bg-white p-8 rounded-3xl shadow-xl hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-2 text-center">
                    <div class="text-6xl text-black mb-4">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" class="w-16 h-16 mx-auto">
                            <path d="M448,209.91a210.06,210.06,0,0,1-122.77-39.25V349.38A162.55,162.55,0,1,1,185,188.31V278.2h213.13V209.91ZM185,324.42A76.25,76.25,0,1,0,108.75,248.17,76.15,76.15,0,0,0,185,324.42Z"/>
                        </svg>
                    </div>
                    <h4 class="text-2xl font-bold mb-2">TikTok</h4>
                    <p class="text-gray-600">Xem các video ngắn và mẹo hữu ích về chọn ngành, nghề.</p>
                    <span class="inline-block mt-4 text-indigo-600 font-semibold hover:underline">Theo dõi ngay &rarr;</span>
                </a>
            </div>
        </section>

        <!-- Trang Minigame (MỚI) -->
        <section id="minigame-page" class="page-content">
            <h1 class="text-4xl font-bold text-center mb-8 text-gray-900">Minigame Khám Phá Nghề Nghiệp</h1>

            <!-- Tab buttons -->
            <div class="flex border-b mb-4 justify-center">
                <button class="game-tab-btn active" onclick="showGameTab('game1', this)">Đoán Nghề Nghiệp</button>
                <button class="game-tab-btn" onclick="showGameTab('game2', this)">Trắc Nghiệm Hướng Nghiệp</button>
            </div>

            <!-- Tab content -->
            <!-- Removed fixed height, added min-height -->
            <div id="game1-content" class="game-tab-content" style="min-height: 600px;">
                <iframe srcdoc="<!DOCTYPE html>
<html lang=&quot;vi&quot;>
<head>
    <meta charset=&quot;UTF-8&quot;>
    <meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;>
    <title>Minigame: Đoán Tên Nghề Nghiệp</title>
    <link rel=&quot;preconnect&quot; href=&quot;https://fonts.googleapis.com&quot;>
    <link rel=&quot;preconnect&quot; href=&quot;https://fonts.gstatic.com&quot; crossorigin>
    <link href=&quot;https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap&quot; rel=&quot;stylesheet&quot;>
    <style>
        :root {
            --primary-color: #4f46e5;
            --primary-gradient: linear-gradient(90deg, #6366f1, #a855f7);
            --correct-color: #16a34a;
            --incorrect-color: #dc2626;
            --text-dark: #1f2937;
            --text-light: #4b5563;
            --border-color: #e5e7eb;
            --bg-light: #f9faff; /* New light bg */
        }

        /* --- General Styling --- */
        body {
            font-family: 'Inter', 'Arial', sans-serif;
            /* UPDATED BACKGROUND */
            background: radial-gradient(circle, #f4f4f7 0%, #d4e0ff 100%);
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            margin: 0;
            padding: 20px;
            box-sizing: border-box;
        }

        /* --- Animations --- */
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }
            20%, 40%, 60%, 80% { transform: translateX(5px); }
        }

        /* --- Game Container --- */
        #game-container {
            background-color: #ffffff;
            border-radius: 20px;
            /* UPDATED SHADOW */
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05), 0 10px 30px rgba(0, 0, 0, 0.07);
            padding: 25px 35px 35px 35px;
            width: 100%;
            max-width: 600px;
            text-align: center;
            /* REMOVED BORDER-TOP */
            animation: fadeIn 0.6s ease-out;
            min-height: 520px;
            display: flex;
            flex-direction: column;
        }

        /* --- Progress Bar --- */
        #progress-container {
            width: 100%;
            background-color: #e5e7eb;
            border-radius: 99px;
            height: 12px;
            margin-bottom: 20px;
            overflow: hidden;
        }
        #progress-bar {
            width: 0%;
            height: 100%;
            background: var(--primary-gradient);
            border-radius: 99px;
            transition: width 0.5s ease-in-out;
        }

        /* --- Score Container --- */
        #score-container {
            display: flex;
            justify-content: space-between;
            width: 100%;
            margin-bottom: 20px;
            font-size: 1.1em;
            font-weight: 600;
            color: var(--text-light);
        }
        #score-container span {
            color: var(--text-dark);
            background-color: #f3f4f6;
            padding: 5px 12px;
            border-radius: 8px;
            margin-left: 5px;
        }

        /* --- Header: Game Title --- */
        #game-title {
            color: var(--text-dark);
            margin: 0 0 10px 0;
            font-size: 1.75em;
            font-weight: 700;
            background: var(--primary-gradient);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            text-fill-color: transparent;
        }

        /* --- Clue/Question Text --- */
        #clue-text {
            font-size: 1.2em;
            color: var(--text-light);
            margin-bottom: 25px;
            min-height: 100px;
            line-height: 1.6;
            display: flex;
            justify-content: center;
            align-items: center;
            /* UPDATED CLUE BOX STYLE */
            background-color: var(--bg-light);
            border: 1px solid #e0e7ff;
            border-radius: 12px;
            padding: 15px;
            font-style: italic;
        }

        /* --- Input Container --- */
        #input-container {
            display: flex;
            gap: 10px;
            margin-bottom: 15px;
        }
        #guess-input {
            flex-grow: 1;
            border: 2px solid var(--border-color);
            border-radius: 12px;
            padding: 14px 18px;
            font-size: 1.1em;
            transition: border-color 0.3s, box-shadow 0.3s;
        }
        #guess-input:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.2);
        }
        #guess-input.shake {
            animation: shake 0.5s;
        }
        #guess-button {
            background-color: var(--primary-color);
            color: white;
            border: none;
            border-radius: 12px;
            padding: 0 25px;
            font-size: 1.05em;
            font-weight: 600;
            cursor: pointer;
            transition: background-color 0.3s, transform 0.2s;
        }
        #guess-button:hover {
            background-color: #4338ca;
            transform: translateY(-2px);
        }

        /* --- Feedback Section --- */
        #feedback-container {
            min-height: 24px;
            margin-bottom: 15px;
            font-size: 1.1em;
            font-weight: 600;
        }
        .feedback-correct { color: var(--correct-color); }
        .feedback-incorrect { color: var(--incorrect-color); }

        /* --- Control Buttons --- */
        #button-container {
            margin-top: auto;
            display: flex;
            flex-direction: column;
            gap: 10px; /* Space between buttons */
        }

        #control-button {
            background: var(--primary-gradient);
            color: white;
            border: none;
            border-radius: 12px;
            padding: 14px 30px;
            font-size: 1.1em;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 5px 20px rgba(79, 70, 229, 0.3);
            order: 2; /* Main button last */
        }

        #control-button:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(79, 70, 229, 0.4);
        }

        /* UPDATED BUTTON STYLE */
        #skip-button {
            background: transparent;
            color: var(--text-light);
            border: 2px solid var(--border-color);
            border-radius: 12px;
            padding: 12px 30px; /* Slightly smaller */
            font-size: 1.0em; /* Slightly smaller */
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: none; /* Hidden by default */
            order: 1; /* Skip button first */
        }
        #skip-button:hover {
            background: #f3f4f6;
            color: var(--text-dark);
            border-color: #d1d5db;
        }

        #end-message {
            font-size: 1.3em;
            font-weight: 600;
            color: var(--primary-color);
            padding: 20px 0;
            flex-grow: 1;
            display: flex;
            align-items: center;
            justify-content: center;
        }

    </style>
</head>
<body>

    <div id=&quot;game-container&quot;>
        <div id=&quot;progress-container&quot;>
            <div id=&quot;progress-bar&quot;></div>
        </div>
        <div id=&quot;score-container&quot;>
            <div>Chuỗi đúng: <span id=&quot;streak-value&quot;>0</span></div>
            <div>Câu: <span id=&quot;question-counter&quot;>0/0</span></div>
            <div>Kỷ lục: <span id=&quot;high-score-value&quot;>0</span></div>
        </div>
        <h2 id=&quot;game-title&quot;>Đây là nghề gì?</h2>
        <p id=&quot;clue-text&quot;></p>
        <div id=&quot;input-container&quot; style=&quot;display: none;&quot;>
            <input type=&quot;text&quot; id=&quot;guess-input&quot; placeholder=&quot;Nhập câu trả lời của bạn...&quot;>
            <button id=&quot;guess-button&quot;>Đoán</button>
        </div>
        <div id=&quot;feedback-container&quot;></div>
        <div id=&quot;end-message&quot; style=&quot;display: none;&quot;></div>

        <div id=&quot;button-container&quot;>
            <button id=&quot;skip-button&quot;>Bỏ qua & Xem đáp án</button>
            <button id=&quot;control-button&quot;>Bắt đầu</button>
        </div>
    </div>

    <script>
        // --- Game Data ---
        const allProfessions = [
            { jobName: &quot;Bác sĩ&quot;, clues: [&quot;Để theo đuổi tôi, bạn cần xuất sắc ở các môn khối B00 (Toán, Hóa, Sinh).&quot;, &quot;Đại học Y Hà Nội là một trong những nơi đào tạo hàng đầu.&quot;, &quot;Tôi làm việc tại các bệnh viện và phòng khám.&quot;, &quot;Chiếc áo blouse trắng và ống nghe là hình ảnh quen thuộc của tôi.&quot;] },
            { jobName: &quot;Lập trình viên&quot;, clues: [&quot;Khối A00, A01 là lựa chọn hàng đầu để theo đuổi tôi.&quot;, &quot;Đại học Bách Khoa, Đại học FPT là những nơi đào tạo nổi tiếng.&quot;, &quot;Tôi 'nói chuyện' với máy tính bằng các ngôn ngữ như Python, JavaScript.&quot;, &quot;Tôi làm việc tại các công ty công nghệ, từ startup đến tập đoàn lớn.&quot;] },
            { jobName: &quot;Giáo viên&quot;, clues: [&quot;Tùy vào môn học, tôi có thể xét tuyển các khối A, B, C, D.&quot;, &quot;Các trường Đại học Sư phạm trên cả nước là nơi đào tạo chính.&quot;, &quot;Công việc của tôi là truyền đạt kiến thức và 'trồng người'.&quot;, &quot;Trường học, bảng đen và phấn trắng là môi trường quen thuộc của tôi.&quot;] },
            { jobName: &quot;Kiến trúc sư&quot;, clues: [&quot;Tôi cần sự kết hợp giữa kỹ thuật và nghệ thuật, thường xét tuyển khối V00 (Toán, Lý, Vẽ).&quot;, &quot;Đại học Kiến trúc và Đại học Xây dựng là những cái nôi đào tạo ra tôi.&quot;, &quot;Tôi biến những ý tưởng thành các bản vẽ chi tiết cho các công trình.&quot;, &quot;Tôi làm việc tại các công ty thiết kế hoặc làm việc tự do.&quot;] },
            { jobName: &quot;Luật sư&quot;, clues: [&quot;Khối C00 (Văn, Sử, Địa) hoặc D01 (Toán, Văn, Anh) là những lựa chọn phổ biến.&quot;, &quot;Đại học Luật là nơi tôi nghiên cứu các bộ luật và quy định.&quot;, &quot;Tôi bảo vệ cho thân chủ của mình tại các phiên tòa.&quot;, &quot;Công lý và sự thật là những gì tôi luôn theo đuổi.&quot;] },
            { jobName: &quot;Đầu bếp&quot;, clues: [&quot;Năng khiếu, vị giác và sự sáng tạo quan trọng hơn khối thi.&quot;, &quot;Tôi có thể được đào tạo tại các trường dạy nghề hoặc du lịch.&quot;, &quot;Chiếc mũ trắng cao là biểu tượng của tôi trong các nhà hàng, khách sạn.&quot;, &quot;Tôi biến những nguyên liệu thô thành các tác phẩm nghệ thuật ẩm thực.&quot;] },
            { jobName: &quot;Nhà báo&quot;, clues: [&quot;Khối C00 và D01 là những khối thi phù hợp với tôi.&quot;, &quot;Học viện Báo chí và Tuyên truyền là nơi đào tạo tôi.&quot;, &quot;Tôi có thể làm việc cho các tòa soạn, đài truyền hình.&quot;, &quot;Tôi luôn săn lùng tin tức và sự kiện nóng hổi.&quot;] },
            { jobName: &quot;Phi công&quot;, clues: [&quot;Sức khỏe, ngoại ngữ và tư duy logic là yêu cầu khắt khe, không chỉ là khối thi.&quot;, &quot;Học viện Hàng không là nơi đào tạo chuyên nghiệp cho tôi.&quot;, &quot;Buồng lái máy bay chính là văn phòng làm việc của tôi.&quot;, &quot;Tôi chịu trách nhiệm cho sự an toàn của hàng trăm hành khách.&quot;] },
            { jobName: &quot;Họa sĩ&quot;, clues: [&quot;Năng khiếu về mỹ thuật (khối H) là điều kiện cần.&quot;, &quot;Đại học Mỹ thuật là nơi tôi được rèn giũa tài năng.&quot;, &quot;Tôi có thể làm việc tự do tại studio riêng hoặc cho các phòng trưng bày.&quot;, &quot;Cọ vẽ, màu sắc và toan tranh là những người bạn thân thiết của tôi.&quot;] },
            { jobName: &quot;Dược sĩ&quot;, clues: [&quot;Khối A00 hoặc B00 là con đường để bạn đến với tôi.&quot;, &quot;Đại học Dược Hà Nội là một trong những nơi đào tạo hàng đầu.&quot;, &quot;Tôi làm việc tại nhà thuốc, công ty dược hoặc bệnh viện.&quot;, &quot;Tôi là chuyên gia về thuốc, tư vấn sử dụng thuốc an toàn.&quot;] },
            { jobName: &quot;Y tá&quot;, clues: [&quot;Khối B00 là lựa chọn phổ biến, hoặc xét tuyển từ các trường cao đẳng y.&quot;, &quot;Tôi được đào tạo tại các trường Cao đẳng hoặc Đại học Y.&quot;, &quot;Tôi là người chăm sóc bệnh nhân trực tiếp tại các cơ sở y tế.&quot;, &quot;Tôi phối hợp chặt chẽ với bác sĩ trong quá trình điều trị.&quot;] },
            { jobName: &quot;Nhiếp ảnh gia&quot;, clues: [&quot;Đây là nghề không quá phụ thuộc vào khối thi, mà là năng khiếu và kỹ năng.&quot;, &quot;Tôi có thể học nghề tại các trung tâm hoặc tự học.&quot;, &quot;Tôi có thể làm việc tự do, mở studio hoặc làm cho các tạp chí.&quot;, &quot;Tôi 'đóng băng' những khoảnh khắc đẹp của cuộc sống qua ống kính.&quot;] },
            { jobName: &quot;Nhà khoa học&quot;, clues: [&quot;Tôi cần một nền tảng vững chắc về các môn khoa học tự nhiên (A00, B00).&quot;, &quot;Tôi thường làm việc và nghiên cứu tại các viện, trường đại học.&quot;, &quot;Phòng thí nghiệm là ngôi nhà thứ hai của tôi.&quot;, &quot;Tôi thực hiện các thí nghiệm để tìm ra những kiến thức mới.&quot;] },
            { jobName: &quot;Nhạc sĩ&quot;, clues: [&quot;Năng khiếu âm nhạc (khối N) là tấm vé vào cửa.&quot;, &quot;Nhạc viện là nơi tôi được đào tạo bài bản.&quot;, &quot;Tôi có thể là người sáng tác, hòa âm phối khí hoặc biểu diễn.&quot;, &quot;Sản phẩm của tôi là các giai điệu lay động lòng người.&quot;] },
            { jobName: &quot;Diễn viên&quot;, clues: [&quot;Khối S (Năng khiếu Sân khấu Điện ảnh) là con đường chính thống.&quot;, &quot;Đại học Sân khấu - Điện ảnh là ước mơ của nhiều người muốn trở thành tôi.&quot;, &quot;Tôi hóa thân thành nhiều cuộc đời khác nhau trên màn ảnh hoặc sân khấu.&quot;, &quot;Tôi làm việc dưới sự chỉ đạo của đạo diễn.&quot;] },
            { jobName: &quot;Cảnh sát&quot;, clues: [&quot;Tôi xét tuyển các khối A00, A01, C03, D01.&quot;, &quot;Học viện An ninh hoặc Học viện Cảnh sát là nơi tôi được rèn luyện.&quot;, &quot;Tôi tuần tra trên đường phố hoặc làm việc tại các phòng điều tra.&quot;, &quot;Nhiệm vụ của tôi là bảo vệ trật tự và an toàn xã hội.&quot;] },
            { jobName: &quot;Lính cứu hỏa&quot;, clues: [&quot;Tôi cần thể chất cực tốt, thường xét tuyển từ các khối A00.&quot;, &quot;Tôi được huấn luyện tại các trường phòng cháy chữa cháy.&quot;, &quot;Tôi đối mặt với nguy hiểm để cứu người và tài sản.&quot;, &quot;Tiếng còi hú từ chiếc xe màu đỏ là tín hiệu tôi lên đường.&quot;] },
            { jobName: &quot;Nhà thiết kế thời trang&quot;, clues: [&quot;Khối H (Văn, Vẽ, Vẽ) là khối thi dành cho tôi.&quot;, &quot;Đại học Mỹ thuật Công nghiệp là một trong những nơi đào tạo tôi.&quot;, &quot;Tôi biến những tấm vải thành các bộ trang phục độc đáo.&quot;, &quot;Các tuần lễ thời trang là nơi tôi trình làng các bộ sưu tập.&quot;] },
            { jobName: &quot;Kế toán&quot;, clues: [&quot;Các khối A00, A01, D01 là lựa chọn phổ biến để học ngành này.&quot;, &quot;Học viện Tài chính hay Đại học Kinh tế Quốc dân là nơi đào tạo uy tín.&quot;, &quot;Tôi làm việc với các con số, báo cáo tài chính tại mọi loại hình doanh nghiệp.&quot;, &quot;Sự cẩn thận và chính xác là phẩm chất quan trọng nhất của tôi.&quot;] },
            { jobName: &quot;Nhà tâm lý học&quot;, clues: [&quot;Tôi thường được xét tuyển từ các khối xã hội như C00 hoặc D01.&quot;, &quot;Đại học Khoa học Xã hội và Nhân văn là nơi đào tạo tôi.&quot;, &quot;Tôi lắng nghe và gỡ rối những khúc mắc trong tâm hồn con người.&quot;, &quot;Phòng tham vấn là nơi làm việc kín đáo của tôi.&quot;] },
            { jobName: &quot;Thợ mộc&quot;, clues: [&quot;Tôi không nhất thiết phải vào đại học mà có thể học nghề.&quot;, &quot;Đôi tay khéo léo và khả năng đo đạc chính xác là thế mạnh của tôi.&quot;, &quot;Xưởng gỗ là nơi tôi biến những khối gỗ thô kệch thành sản phẩm hữu ích.&quot;, &quot;Tôi tạo ra bàn, ghế, tủ và các đồ nội thất khác.&quot;] },
            { jobName: &quot;Nông dân&quot;, clues: [&quot;Tôi gắn bó với đất đai, đồng ruộng hoặc trang trại.&quot;, &quot;Kiến thức của tôi được truyền từ đời này sang đời khác và từ Học viện Nông nghiệp.&quot;, &quot;Tôi trồng trọt hoặc chăn nuôi để cung cấp lương thực, thực phẩm.&quot;, &quot;Công việc của tôi chịu ảnh hưởng lớn từ thiên nhiên và thời tiết.&quot;] },
            { jobName: &quot;Thợ điện&quot;, clues: [&quot;Tôi được đào tạo tại các trường Cao đẳng, Trung cấp kỹ thuật.&quot;, &quot;Tôi làm việc với dây, cáp và các mạch điện phức tạp.&quot;, &quot;An toàn lao động là nguyên tắc số một trong công việc của tôi.&quot;, &quot;Tôi đảm bảo nguồn sáng và năng lượng cho mọi hoạt động.&quot;] },
            { jobName: &quot;Thủy thủ&quot;, clues: [&quot;Tôi cần sức khỏe tốt và được đào tạo tại Đại học Hàng hải.&quot;, &quot;Tôi làm việc trên các con tàu lớn trên biển.&quot;, &quot;Đại dương là ngôi nhà thứ hai của tôi.&quot;, &quot;Công việc của tôi có thể kéo dài hàng tháng trời xa nhà.&quot;] },
            { jobName: &quot;Bác sĩ thú y&quot;, clues: [&quot;Khối B00 (Toán, Hóa, Sinh) là khối thi truyền thống.&quot;, &quot;Học viện Nông nghiệp Việt Nam là nơi đào tạo hàng đầu.&quot;, &quot;Tôi chăm sóc sức khỏe và chữa bệnh cho động vật.&quot;, &quot;Tôi làm việc tại các phòng khám thú cưng, trang trại hoặc sở thú.&quot;] },
            { jobName: &quot;Nhà thiết kế nội thất&quot;, clues: [&quot;Khối V hoặc H (có môn Vẽ) là bắt buộc.&quot;, &quot;Đại học Kiến trúc, Đại học Mỹ thuật Công nghiệp là nơi đào tạo tôi.&quot;, &quot;Tôi lên kế hoạch và trang trí không gian bên trong các tòa nhà.&quot;, &quot;Tôi giúp tạo ra những không gian sống và làm việc đẹp, tiện nghi.&quot;] },
            { jobName: &quot;Biên tập viên&quot;, clues: [&quot;Tôi cần giỏi Văn (khối C00, D01) và có ngôn ngữ tốt.&quot;, &quot;Tôi có thể học ngành Báo chí, Ngôn ngữ học, Sư phạm Văn.&quot;, &quot;Tôi đọc, chỉnh sửa và hoàn thiện các bản thảo trước khi xuất bản.&quot;, &quot;Tôi làm việc cho các nhà xuất bản, tạp chí hoặc trang web.&quot;] }
        ];

        // --- DOM Elements ---
        const progressBarEl = document.getElementById('progress-bar');
        const streakEl = document.getElementById('streak-value');
        const highScoreEl = document.getElementById('high-score-value');
        const questionCounterEl = document.getElementById('question-counter');
        const gameTitleEl = document.getElementById('game-title');
        const clueTextEl = document.getElementById('clue-text');
        const inputContainerEl = document.getElementById('input-container');
        const guessInputEl = document.getElementById('guess-input');
        const guessButtonEl = document.getElementById('guess-button');
        const feedbackContainerEl = document.getElementById('feedback-container');
        const controlButtonEl = document.getElementById('control-button');
        const endMessageEl = document.getElementById('end-message');
        const skipButtonEl = document.getElementById('skip-button');

        // --- Game State ---
        let currentSessionProfessions = [];
        let currentProfessionIndex = 0;
        let currentClueIndex = 0;
        let gameState = 'start'; // 'start', 'playing', 'correct_feedback', 'end'
        let correctStreak = 0;
        let highScore = 0;

        // --- Functions ---
        function normalizeString(str) {
            return str.toLowerCase().normalize(&quot;NFD&quot;).replace(/[\u0300-\u036f]/g, &quot;&quot;).replace(/đ/g, &quot;d&quot;).trim();
        }

        // Function to shuffle array
        function shuffle(array) {
            for (let i = array.length - 1; i > 0; i--) {
                const j = Math.floor(Math.random() * (i + 1));
                [array[i], array[j]] = [array[j], array[i]];
            }
        }

        function startGame() {
            shuffle(allProfessions);
            currentSessionProfessions = [...allProfessions]; // Use the full, shuffled list
            currentProfessionIndex = 0;
            correctStreak = 0;
            highScore = localStorage.getItem('minigameHighScore') || 0;
            updateScoreDisplay();
            loadProfession();
        }

        function updateScoreDisplay() {
            streakEl.textContent = correctStreak;
            highScoreEl.textContent = highScore;
        }

        function loadProfession() {
            gameState = 'playing';
            currentClueIndex = 0;

            // Show/hide elements
            clueTextEl.style.display = 'flex';
            inputContainerEl.style.display = 'flex';
            endMessageEl.style.display = 'none';
            controlButtonEl.style.display = 'block';
            skipButtonEl.style.display = 'block';
            skipButtonEl.disabled = false;
            questionCounterEl.parentElement.style.display = 'block';

            // Reset elements
            feedbackContainerEl.textContent = '';
            feedbackContainerEl.className = '';
            guessInputEl.value = '';
            guessInputEl.disabled = false;
            guessButtonEl.disabled = false;
            controlButtonEl.disabled = false;
            controlButtonEl.textContent = &quot;Xem gợi ý tiếp theo&quot;;

            questionCounterEl.textContent = `${currentProfessionIndex + 1}/${currentSessionProfessions.length}`;
            updateScoreDisplay();
            displayClue();
        }

        function displayClue() {
            const profession = currentSessionProfessions[currentProfessionIndex];
            clueTextEl.textContent = profession.clues[currentClueIndex];
            updateProgressBar();

            if (currentClueIndex >= profession.clues.length - 1) {
                controlButtonEl.disabled = true;
                controlButtonEl.textContent = &quot;Hết gợi ý!&quot;;
            }
        }

        function checkGuess() {
            const profession = currentSessionProfessions[currentProfessionIndex];
            const userAnswer = normalizeString(guessInputEl.value);
            const correctAnswer = normalizeString(profession.jobName);

            if (userAnswer === &quot;&quot;) return;

            if (userAnswer === correctAnswer) {
                gameState = 'correct_feedback';
                correctStreak++;
                if (correctStreak > highScore) {
                    highScore = correctStreak;
                    localStorage.setItem('minigameHighScore', highScore);
                }
                updateScoreDisplay();

                feedbackContainerEl.textContent = `Chính xác! Đó là nghề &quot;${profession.jobName}&quot;.`;
                feedbackContainerEl.className = 'feedback-correct';

                guessInputEl.disabled = true;
                guessButtonEl.disabled = true;
                skipButtonEl.style.display = 'none';
                skipButtonEl.disabled = true;
                controlButtonEl.disabled = false;

                if (currentProfessionIndex < currentSessionProfessions.length - 1) {
                    controlButtonEl.textContent = &quot;Thử nghề tiếp theo&quot;;
                } else {
                    controlButtonEl.textContent = &quot;Hoàn thành!&quot;;
                }
            } else {
                correctStreak = 0;
                updateScoreDisplay();
                feedbackContainerEl.textContent = &quot;Chưa đúng, thử lại hoặc xem thêm gợi ý nhé!&quot;;
                feedbackContainerEl.className = 'feedback-incorrect';
                guessInputEl.classList.add('shake');
                setTimeout(() => {
                    guessInputEl.classList.remove('shake');
                    feedbackContainerEl.textContent = ''; // Clear feedback after a while
                }, 1000);
                guessInputEl.value = '';
                guessInputEl.focus();
            }
        }

        function showEndMessage() {
            gameState = 'end';
            clueTextEl.style.display = 'none';
            inputContainerEl.style.display = 'none';
            feedbackContainerEl.style.display = 'none';
            questionCounterEl.parentElement.style.display = 'none';
            skipButtonEl.style.display = 'none';
            endMessageEl.style.display = 'flex';
            endMessageEl.textContent = &quot;Bạn đã hoàn thành tất cả các câu đố!&quot;;
            controlButtonEl.textContent = &quot;Chơi lại&quot;;
        }

        function updateProgressBar(){
            const profession = currentSessionProfessions[currentProfessionIndex];
            const progress = ((currentClueIndex + 1) / profession.clues.length) * 100;
            progressBarEl.style.width = `${progress}%`;
        }

        // --- Event Listeners ---
        controlButtonEl.addEventListener('click', () => {
            if (gameState === 'start' || gameState === 'end') {
                startGame();
            } else if (gameState === 'correct_feedback') {
                currentProfessionIndex++;
                if (currentProfessionIndex < currentSessionProfessions.length) {
                    loadProfession();
                } else {
                    showEndMessage();
                }
            } else if (gameState === 'playing') {
                currentClueIndex++;
                displayClue();
            }
        });

        guessButtonEl.addEventListener('click', checkGuess);
        guessInputEl.addEventListener('keyup', (event) => {
            if (event.key === 'Enter') {
                checkGuess();
            }
        });

        skipButtonEl.addEventListener('click', () => {
            // 1. Get the answer
            const profession = currentSessionProfessions[currentProfessionIndex];

            // 2. Show feedback with answer
            feedbackContainerEl.textContent = `Đáp án đúng là: &quot;${profession.jobName}&quot;.`;
            feedbackContainerEl.className = 'feedback-incorrect'; // Red color

            // 3. Reset streak
            correctStreak = 0;
            updateScoreDisplay();

            // 4. Disable guessing & buttons
            guessInputEl.disabled = true;
            guessButtonEl.disabled = true;
            controlButtonEl.disabled = true; // Disable &quot;Next Clue&quot;
            skipButtonEl.disabled = true;
            skipButtonEl.style.display = 'none';

            // 5. Change state to 'correct_feedback' to reuse the logic
            gameState = 'correct_feedback';

            // 6. Update control button to move to next
            if (currentProfessionIndex < currentSessionProfessions.length - 1) {
                controlButtonEl.textContent = &quot;Thử nghề tiếp theo&quot;;
            } else {
                controlButtonEl.textContent = &quot;Hoàn thành!&quot;;
            }
            controlButtonEl.disabled = false;
            controlButtonEl.style.display = 'block';
        });

        // Initial load
        window.onload = () => {
            highScore = localStorage.getItem('minigameHighScore') || 0;
            updateScoreDisplay();
        };

    </script>
</body>
</html>
" class="w-full h-full border-0 rounded-xl shadow-lg min-h-[600px]"></iframe>
            </div>
             <!-- Removed fixed height, added min-height -->
            <div id="game2-content" class="game-tab-content" style="display: none; min-height: 600px;">
                <iframe srcdoc="<!DOCTYPE html>
<html lang=&quot;vi&quot;>
<head>
    <meta charset=&quot;UTF-8&quot;>
    <meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;>
    <title>Trắc Nghiệm Hướng Nghiệp</title>
    <!-- Tải Tailwind CSS CDN -->
    <script src=&quot;https://cdn.tailwindcss.com&quot;></script>
    <!-- Tải Tone.js cho hiệu ứng âm thanh -->
    <script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/tone/14.7.77/Tone.js&quot;></script>
    <!-- Tải thư viện icon Phosphor -->
    <script src=&quot;https://unpkg.com/@phosphor-icons/web&quot;></script>
    <!-- Thiết lập font và style tùy chỉnh -->
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap');

        body {
            font-family: 'Inter', sans-serif;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        }
        .option-button {
            transition: all 0.2s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        }
        .option-button:hover:not(:disabled) {
            transform: translateY(-5px);
            box-shadow: 0 12px 20px -8px rgba(0,0,0,0.15);
        }
        .correct {
            background: linear-gradient(45deg, #2dd4bf, #34d399);
            color: white;
            border-color: #059669;
        }
        .incorrect {
            background: linear-gradient(45deg, #fb7185, #f43f5e);
            color: white;
            border-color: #dc2626;
        }
        #timer-bar-fill {
            transition: width 1s linear;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(15px); }
            to { opacity: 1; transform: translateY(0); }
        }
        .fade-in { animation: fadeIn 0.5s ease-out forwards; }

        /* Tab Styles */
        .tab-button {
            padding: 0.75rem 1.25rem;
            cursor: pointer;
            border: none;
            background-color: transparent;
            font-size: 1rem;
            font-weight: 600;
            color: #6b7280; /* gray-500 */
            border-bottom: 3px solid transparent;
            transition: all 0.2s ease;
        }
        .tab-button:hover {
            color: #1d4ed8; /* blue-700 */
        }
        .active-tab {
            color: #1d4ed8; /* blue-700 */
            border-bottom-color: #1d4ed8; /* blue-700 */
        }
        .drive-iframe {
            border: 1px solid #e5e7eb; /* Thêm viền cho iframe */
            width: 100%;
            height: 80vh;
            border-radius: 1rem;
        }
    </style>
</head>
<body class=&quot;p-4 bg-gray-100&quot;>

    <div class=&quot;w-full max-w-5xl mx-auto bg-white/60 backdrop-blur-sm p-4 md:p-6 rounded-3xl shadow-lg border border-gray-200/50&quot;>
        <!-- Tab Navigation -->
        <div class=&quot;flex border-b mb-4 flex-wrap&quot;>
            <button id=&quot;game-tab-button&quot; class=&quot;tab-button&quot; onclick=&quot;showTab('game')&quot;>Trắc Nghiệm Hướng Nghiệp</button>
        </div>

        <!-- Tab Content -->
        <div id=&quot;game-tab-content&quot; class=&quot;tab-content&quot;>
             <div id=&quot;app&quot; class=&quot;w-full max-w-2xl mx-auto&quot;>
                <!-- Start Screen -->
                <div id=&quot;start-screen&quot; class=&quot;fade-in&quot;>
                    <header class=&quot;text-center mb-6&quot;>
                        <h1 class=&quot;text-3xl md:text-4xl font-extrabold text-gray-800 mb-2&quot;>
                            Chào mừng bạn!
                        </h1>
                        <p class=&quot;text-gray-500&quot;>Vui lòng đọc luật chơi để bắt đầu</p>
                    </header>

                    <!-- Luật Chơi -->
                    <div class=&quot;bg-blue-50 border-l-4 border-blue-500 text-blue-800 p-4 rounded-r-lg mb-6 shadow-sm&quot;>
                        <h3 class=&quot;font-bold text-lg mb-2 flex items-center&quot;>
                            <i class=&quot;ph-fill ph-game-controller mr-2&quot;></i>
                            Luật Chơi
                        </h3>
                        <ul class=&quot;list-disc list-inside space-y-1 text-sm text-blue-700&quot;>
                            <li>Ghép đúng <strong>Tổ Hợp Môn</strong> với <strong>Ngành Nghề</strong> tương ứng.</li>
                            <li>Bạn có <strong>15 giây</strong> cho mỗi câu hỏi, hãy trả lời nhanh!</li>
                            <li>Trả lời đúng liên tiếp sẽ nhận được điểm thưởng chuỗi.</li>
                            <li>Dựa vào kết quả, hệ thống sẽ gợi ý nhóm ngành phù hợp với bạn.</li>
                        </ul>
                    </div>

                    <button onclick=&quot;startGame()&quot; class=&quot;w-full px-10 py-3 bg-blue-600 text-white font-bold text-lg rounded-full shadow-lg hover:bg-blue-700 transition duration-300&quot;>
                        Bắt đầu
                    </button>
                </div>

                <!-- Game Wrapper -->
                <div id=&quot;game-wrapper&quot; class=&quot;hidden&quot;>
                    <header class=&quot;text-center mb-6&quot;>
                        <h1 class=&quot;text-3xl md:text-4xl font-extrabold text-gray-800 mb-2&quot;>
                            Định Hướng Ngành Nghề
                        </h1>
                        <p class=&quot;text-gray-500&quot;>Ghép Tổ Hợp Môn với Ngành Nghề</p>
                    </header>
                    <div class=&quot;flex justify-between items-center bg-gray-100 p-3 rounded-xl mb-6&quot;>
                        <div class=&quot;flex items-center gap-2&quot;>
                            <i class=&quot;ph ph-question text-2xl text-blue-500&quot;></i>
                            <span id=&quot;question-counter&quot; class=&quot;text-lg font-bold text-gray-700&quot;>1/45</span>
                        </div>
                         <div class=&quot;flex items-center gap-2&quot;>
                            <i class=&quot;ph-fill ph-fire text-2xl text-orange-500&quot;></i>
                            <span id=&quot;streak-counter&quot; class=&quot;text-lg font-bold text-gray-700&quot;>0</span>
                        </div>
                        <div class=&quot;flex items-center gap-2&quot;>
                            <i class=&quot;ph-fill ph-star text-2xl text-yellow-500&quot;></i>
                            <span id=&quot;score-display&quot; class=&quot;text-lg font-bold text-gray-700&quot;>0</span>
                        </div>
                    </div>
                    <div id=&quot;timer-bar&quot; class=&quot;w-full bg-gray-200 rounded-full h-2.5 mb-6&quot;>
                        <div id=&quot;timer-bar-fill&quot; class=&quot;bg-blue-500 h-2.5 rounded-full&quot;></div>
                    </div>
                    <main id=&quot;game-area&quot; class=&quot;fade-in&quot;>
                        <div class=&quot;bg-blue-50 p-6 rounded-xl mb-6 shadow-inner text-center&quot;>
                            <h2 class=&quot;text-xl font-semibold text-gray-700 mb-2&quot;>Tổ Hợp Môn</h2>
                            <p id=&quot;question-text&quot; class=&quot;text-2xl md:text-3xl font-bold text-blue-600&quot;></p>
                        </div>
                        <div id=&quot;options-container&quot; class=&quot;grid grid-cols-1 sm:grid-cols-2 gap-4 mb-4&quot;></div>
                        <div id=&quot;feedback-message&quot; class=&quot;text-center font-semibold text-lg py-3 px-4 rounded-xl hidden&quot;></div>
                    </main>
                    <footer class=&quot;text-center mt-6&quot;>
                        <button id=&quot;next-button&quot; class=&quot;w-full sm:w-auto px-10 py-3 bg-blue-600 text-white font-bold text-lg rounded-full shadow-lg hover:bg-blue-700 transition duration-300 opacity-0 pointer-events-none&quot;>
                            Tiếp Tục
                        </button>
                    </footer>
                </div>

                <!-- Game Over Modal -->
                <div id=&quot;results-modal&quot; class=&quot;hidden fixed inset-0 bg-gray-800 bg-opacity-75 flex items-center justify-center z-50 p-4&quot;>
                    <div class=&quot;bg-white p-8 rounded-2xl shadow-xl w-full max-w-lg text-center fade-in&quot;>
                        <i class=&quot;ph-bold ph-confetti text-7xl text-green-500&quot;></i>
                        <h3 class=&quot;text-3xl font-bold text-gray-800 mt-4 mb-2&quot;>Hoàn Thành!</h3>
                        <p class=&quot;text-gray-600 mb-6&quot;>Đây là kết quả của bạn:</p>
                        <div class=&quot;bg-blue-50 p-4 rounded-xl mb-4 flex justify-around items-center text-center&quot;>
                            <div>
                                <p class=&quot;text-lg font-semibold text-blue-800&quot;>Tổng điểm</p>
                                <p id=&quot;final-score&quot; class=&quot;text-5xl font-extrabold text-blue-600&quot;></p>
                            </div>
                            <div class=&quot;border-l-2 border-blue-200 h-16 mx-4&quot;></div>
                            <div>
                                <p class=&quot;text-lg font-semibold text-blue-800&quot;>Thời gian làm bài</p>
                                <p id=&quot;total-time&quot; class=&quot;text-3xl font-extrabold text-blue-600&quot;></p>
                            </div>
                        </div>
                        <div id=&quot;career-suggestion-box&quot; class=&quot;bg-green-50 p-4 rounded-xl text-left&quot;>
                             <h4 class=&quot;text-lg font-bold text-green-800 mb-2&quot;>Nhóm ngành gợi ý</h4>
                             <p id=&quot;suggestion-text&quot; class=&quot;text-green-700&quot;></p>
                        </div>
                        <button onclick=&quot;resetToStartScreen()&quot; class=&quot;mt-8 w-full px-6 py-4 bg-green-500 text-white font-bold rounded-lg hover:bg-green-600 transition duration-300 text-lg&quot;>
                            Chơi Lại
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Tab Tài Liệu Drive -->
    </div>

    <script>
        const SUBJECT_CAREER_MAP = [
            // 15 câu gốc
            { combination: &quot;Toán, Lý, Hóa (A00)&quot;, correctCareer: &quot;Kỹ thuật, Công nghệ&quot;, category: &quot;Kỹ thuật&quot; },
            { combination: &quot;Văn, Sử, Địa (C00)&quot;, correctCareer: &quot;Khoa học Xã hội, Báo chí&quot;, category: &quot;Xã hội&quot; },
            { combination: &quot;Toán, Văn, Anh (D01)&quot;, correctCareer: &quot;Kinh tế, Quản trị, Marketing&quot;, category: &quot;Kinh doanh&quot; },
            { combination: &quot;Toán, Hóa, Sinh (B00)&quot;, correctCareer: &quot;Y Dược, Công nghệ Sinh học&quot;, category: &quot;Y tế & Sức khỏe&quot; },
            { combination: &quot;Toán, Lý, Anh (A01)&quot;, correctCareer: &quot;Công nghệ thông tin, Kỹ thuật phần mềm&quot;, category: &quot;Kỹ thuật&quot; },
            { combination: &quot;Văn, Sử, Anh (D14)&quot;, correctCareer: &quot;Luật, Quan hệ Quốc tế&quot;, category: &quot;Xã hội&quot; },
            { combination: &quot;Văn, Năng khiếu Vẽ (H00)&quot;, correctCareer: &quot;Thiết kế Đồ họa, Kiến trúc&quot;, category: &quot;Nghệ thuật&quot; },
            { combination: &quot;Toán, Anh, Năng khiếu (V00)&quot;, correctCareer: &quot;Kiến trúc, Quy hoạch đô thị&quot;, category: &quot;Nghệ thuật&quot; },
            { combination: &quot;Toán, Sinh, Anh (D08)&quot;, correctCareer: &quot;Thú y, Công nghệ Thực phẩm&quot;, category: &quot;Nông nghiệp&quot; },
            { combination: &quot;Văn, Hóa, Sinh (C08)&quot;, correctCareer: &quot;Công tác Xã hội, Môi trường&quot;, category: &quot;Xã hội&quot; },
            { combination: &quot;Toán, KHTN (A02)&quot;, correctCareer: &quot;Sư phạm Khoa học Tự nhiên&quot;, category: &quot;Giáo dục&quot; },
            { combination: &quot;Văn, Anh, Tiếng Pháp (D03)&quot;, correctCareer: &quot;Ngôn ngữ học, Biên-Phiên dịch&quot;, category: &quot;Xã hội&quot; },
            { combination: &quot;Toán, Địa, Anh (D10)&quot;, correctCareer: &quot;Logistics, Quản lý chuỗi cung ứng&quot;, category: &quot;Kinh doanh&quot; },
            { combination: &quot;Toán, Lý, GDCD (A04)&quot;, correctCareer: &quot;Quản lý Nhà nước, An ninh&quot;, category: &quot;Xã hội&quot; },
            { combination: &quot;Toán, Anh, KHTN (A06)&quot;, correctCareer: &quot;Khoa học dữ liệu, AI&quot;, category: &quot;Kỹ thuật&quot; },

            // 30 câu bổ sung
            { combination: &quot;Toán, Lý, Hóa (A00)&quot;, correctCareer: &quot;Kỹ thuật Hóa học, Dược sĩ&quot;, category: &quot;Y tế & Sức khỏe&quot; },
            { combination: &quot;Văn, Sử, Địa (C00)&quot;, correctCareer: &quot;Hướng dẫn viên Du lịch&quot;, category: &quot;Dịch vụ&quot; },
            { combination: &quot;Toán, Văn, Anh (D01)&quot;, correctCareer: &quot;Kế toán, Kiểm toán&quot;, category: &quot;Kinh doanh&quot; },
            { combination: &quot;Toán, Hóa, Sinh (B00)&quot;, correctCareer: &quot;Bác sĩ Đa khoa&quot;, category: &quot;Y tế & Sức khỏe&quot; },
            { combination: &quot;Toán, Lý, Anh (A01)&quot;, correctCareer: &quot;Quản trị Mạng, An toàn Thông tin&quot;, category: &quot;Kỹ thuật&quot; },
            { combination: &quot;Toán, Văn, Sử (C03)&quot;, correctCareer: &quot;Sư phạm Lịch sử&quot;, category: &quot;Giáo dục&quot; },
            { combination: &quot;Toán, Văn, Địa (C04)&quot;, correctCareer: &quot;Quản lý Đất đai&quot;, category: &quot;Xã hội&quot; },
            { combination: &quot;Toán, Văn, GDCD (D66)&quot;, correctCareer: &quot;Tâm lý học&quot;, category: &quot;Xã hội&quot; },
            { combination: &quot;Toán, Sử, Anh (D09)&quot;, correctCareer: &quot;Luật Kinh tế&quot;, category: &quot;Kinh doanh&quot; },
            { combination: &quot;Văn, Địa, GDCD (C20)&quot;, correctCareer: &quot;Báo chí, Truyền thông&quot;, category: &quot;Xã hội&quot; },
            { combination: &quot;Toán, Hóa, Anh (D07)&quot;, correctCareer: &quot;Công nghệ Thực phẩm&quot;, category: &quot;Nông nghiệp&quot; },
            { combination: &quot;Văn, Năng khiếu Báo chí (N01)&quot;, correctCareer: &quot;Quan hệ Công chúng (PR)&quot;, category: &quot;Kinh doanh&quot; },
            { combination: &quot;Toán, Lý, Năng khiếu (V01)&quot;, correctCareer: &quot;Thiết kế Nội thất&quot;, category: &quot;Nghệ thuật&quot; },
            { combination: &quot;Toán, Sinh, GDCD (B04)&quot;, correctCareer: &quot;Khoa học Môi trường&quot;, category: &quot;Xã hội&quot; },
            { combination: &quot;Văn, Sử, GDCD (C19)&quot;, correctCareer: &quot;Chính trị học&quot;, category: &quot;Xã hội&quot; },
            { combination: &quot;Toán, Anh, Tiếng Nhật (D06)&quot;, correctCareer: &quot;Ngôn ngữ Nhật, Kinh tế Đối ngoại&quot;, category: &quot;Kinh doanh&quot; },
            { combination: &quot;Toán, Hóa, GDCD (B05)&quot;, correctCareer: &quot;Quản lý Tài nguyên & Môi trường&quot;, category: &quot;Xã hội&quot; },
            { combination: &quot;Văn, Năng khiếu Âm nhạc (N00)&quot;, correctCareer: &quot;Thanh nhạc, Sư phạm Âm nhạc&quot;, category: &quot;Nghệ thuật&quot; },
            { combination: &quot;Toán, Văn, Tiếng Pháp (D03)&quot;, correctCareer: &quot;Sư phạm Tiếng Pháp&quot;, category: &quot;Giáo dục&quot; },
            { combination: &quot;Toán, Lý, Tiếng Pháp (A05)&quot;, correctCareer: &quot;Kỹ thuật Hàng không&quot;, category: &quot;Kỹ thuật&quot; },
            { combination: &quot;Toán, Hóa, Anh (D07)&quot;, correctCareer: &quot;Kỹ thuật Y sinh&quot;, category: &quot;Y tế & Sức khỏe&quot; },
            { combination: &quot;Văn, Sử, Tiếng Trung (D04)&quot;, correctCareer: &quot;Đông phương học&quot;, category: &quot;Xã hội&quot; },
            { combination: &quot;Toán, Năng khiếu TDTT (T00)&quot;, correctCareer: &quot;Giáo dục Thể chất&quot;, category: &quot;Giáo dục&quot; },
            { combination: &quot;Toán, Văn, Năng khiếu (H01)&quot;, correctCareer: &quot;Thiết kế Thời trang&quot;, category: &quot;Nghệ thuật&quot; },
            { combination: &quot;Toán, Lý, Hóa (A00)&quot;, correctCareer: &quot;Kỹ thuật Ô tô&quot;, category: &quot;Kỹ thuật&quot; },
            { combination: &quot;Toán, Văn, Anh (D01)&quot;, correctCareer: &quot;Quản trị Khách sạn&quot;, category: &quot;Dịch vụ&quot; },
            { combination: &quot;Toán, Hóa, Sinh (B00)&quot;, correctCareer: &quot;Nông nghiệp Công nghệ cao&quot;, category: &quot;Nông nghiệp&quot; },
            { combination: &quot;Toán, Lý, Anh (A01)&quot;, correctCareer: &quot;Robot và Trí tuệ Nhân tạo&quot;, category: &quot;Kỹ thuật&quot; },
            { combination: &quot;Văn, Sử, Địa (C00)&quot;, correctCareer: &quot;Quản lý Văn hóa&quot;, category: &quot;Xã hội&quot; },
            { combination: &quot;Toán, Sinh, Hóa (B00)&quot;, correctCareer: &quot;Điều dưỡng&quot;, category: &quot;Y tế & Sức khỏe&quot; },
        ];

        let score = 0, currentQuestionIndex = 0, streak = 0;
        let quizQuestions = [], categoryScores = {}, userAnswers = [];
        let timer, timerInterval, startTime, totalTimeFormatted;
        const TIME_LIMIT = 15; // 15 seconds per question

        const elements = {
            app: document.getElementById('app'),
            startScreen: document.getElementById('start-screen'),
            gameWrapper: document.getElementById('game-wrapper'),
            gameArea: document.getElementById('game-area'),
            questionText: document.getElementById('question-text'),
            optionsContainer: document.getElementById('options-container'),
            feedbackMessage: document.getElementById('feedback-message'),
            nextButton: document.getElementById('next-button'),
            scoreDisplay: document.getElementById('score-display'),
            streakCounter: document.getElementById('streak-counter'),
            questionCounter: document.getElementById('question-counter'),
            timerBarFill: document.getElementById('timer-bar-fill'),
            resultsModal: document.getElementById('results-modal'),
            finalScore: document.getElementById('final-score'),
            suggestionText: document.getElementById('suggestion-text')
        };

        const sounds = {
            correct: new Tone.Synth({ oscillator: { type: &quot;sine&quot; }, envelope: { attack: 0.01, decay: 0.2, sustain: 0, release: 0.2 } }).toDestination(),
            incorrect: new Tone.Synth({ oscillator: { type: &quot;square&quot; }, envelope: { attack: 0.01, decay: 0.2, sustain: 0, release: 0.2 } }).toDestination(),
        };

        function shuffleArray(array) {
            for (let i = array.length - 1; i > 0; i--) {
                const j = Math.floor(Math.random() * (i + 1));
                [array[i], array[j]] = [array[j], array[i]];
            }
            return array;
        }

        function startGame() {
            elements.startScreen.classList.add('hidden');
            elements.gameWrapper.classList.remove('hidden');

            startTime = Date.now(); // Ghi lại thời gian bắt đầu
            score = 0;
            streak = 0;
            currentQuestionIndex = 0;
            categoryScores = {};
            userAnswers = [];
            elements.resultsModal.classList.add('hidden');

            quizQuestions = shuffleArray([...SUBJECT_CAREER_MAP]);

            updateStats();
            loadQuestion();
            document.body.addEventListener('click', () => Tone.start(), { once: true });
        }

        function updateStats() {
            elements.scoreDisplay.textContent = score;
            elements.streakCounter.textContent = streak;
            elements.questionCounter.textContent = `${currentQuestionIndex + 1}/${quizQuestions.length}`;
        }

        function startTimer() {
            clearInterval(timerInterval);
            let timeLeft = TIME_LIMIT;
            elements.timerBarFill.style.transition = 'none';
            elements.timerBarFill.style.width = '100%';

            void elements.timerBarFill.offsetWidth;

            elements.timerBarFill.style.transition = `width ${TIME_LIMIT}s linear`;
            elements.timerBarFill.style.width = '0%';

            timerInterval = setInterval(() => {
                timeLeft--;
                if (timeLeft < 0) {
                    clearInterval(timerInterval);
                    handleTimeOut();
                }
            }, 1000);
        }

        function handleTimeOut() {
            streak = 0;
            sounds.incorrect.triggerAttackRelease(&quot;C3&quot;, &quot;0.2s&quot;);
            const currentData = quizQuestions[currentQuestionIndex];
            userAnswers.push({
                question: currentData.combination,
                userAnswer: &quot;(Hết giờ)&quot;,
                correctAnswer: currentData.correctCareer,
                isCorrect: false
            });
            revealAnswer(null);
        }

        function loadQuestion() {
            elements.gameArea.classList.remove('fade-in');
            void elements.gameArea.offsetWidth;
            elements.gameArea.classList.add('fade-in');

            const currentData = quizQuestions[currentQuestionIndex];
            elements.questionText.textContent = currentData.combination;
            elements.optionsContainer.innerHTML = '';
            elements.feedbackMessage.classList.add('hidden');
            elements.nextButton.classList.add('opacity-0', 'pointer-events-none');

            // Lấy 3 đáp án sai ngẫu nhiên
            const wrongOptions = shuffleArray(
                SUBJECT_CAREER_MAP
                .filter(q => q.correctCareer !== currentData.correctCareer) // Lọc ra các câu hỏi có đáp án khác
                .map(q => q.correctCareer) // Chỉ lấy tên ngành nghề
                .filter((value, index, self) => self.indexOf(value) === index) // Lấy các giá trị duy nhất
            ).slice(0, 3); // Lấy 3 cái đầu tiên

            const options = [currentData.correctCareer, ...wrongOptions];

            shuffleArray(options).forEach(optionText => {
                const button = document.createElement('button');
                button.textContent = optionText;
                button.className = &quot;option-button w-full px-4 py-4 text-left bg-white text-gray-700 font-semibold rounded-xl border-2 border-gray-200 shadow-md&quot;;
                button.onclick = () => selectAnswer(button, optionText === currentData.correctCareer);
                elements.optionsContainer.appendChild(button);
            });
            startTimer();
        }

        function selectAnswer(selectedButton, isCorrect) {
            clearInterval(timerInterval);
            const currentData = quizQuestions[currentQuestionIndex];
            userAnswers.push({
                question: currentData.combination,
                userAnswer: selectedButton.textContent,
                correctAnswer: currentData.correctCareer,
                isCorrect: isCorrect
            });

            if (isCorrect) {
                score += 10 + streak * 2;
                streak++;
                sounds.correct.triggerAttackRelease(&quot;C5&quot;, &quot;0.2s&quot;);
                categoryScores[currentData.category] = (categoryScores[currentData.category] || 0) + 1;
            } else {
                streak = 0;
                sounds.incorrect.triggerAttackRelease(&quot;C3&quot;, &quot;0.2s&quot;);
            }
            revealAnswer(selectedButton);
            updateStats();
        }

        function revealAnswer(selectedButton) {
            const currentData = quizQuestions[currentQuestionIndex];
            Array.from(elements.optionsContainer.children).forEach(btn => {
                btn.disabled = true;
                if (btn.textContent === currentData.correctCareer) {
                    btn.classList.add('correct');
                } else {
                    btn.classList.add('opacity-50');
                }
            });
            if (selectedButton && selectedButton.textContent !== currentData.correctCareer) {
                selectedButton.classList.add('incorrect');
            }
            elements.nextButton.classList.remove('opacity-0', 'pointer-events-none');
        }

        elements.nextButton.addEventListener('click', () => {
            currentQuestionIndex++;
            if (currentQuestionIndex < quizQuestions.length) {
                loadQuestion();
                updateStats();
            } else {
                showResults();
            }
        });

        function showResults() {
            elements.finalScore.textContent = `${score} điểm`;

            const endTime = Date.now();
            const durationInSeconds = Math.round((endTime - startTime) / 1000);
            const minutes = Math.floor(durationInSeconds / 60);
            const seconds = durationInSeconds % 60;
            totalTimeFormatted = `${minutes} phút ${seconds} giây`;
            document.getElementById('total-time').textContent = totalTimeFormatted;

            const sortedCategories = Object.keys(categoryScores).sort((a,b) => categoryScores[b] - categoryScores[a]);
            if(sortedCategories.length > 0) {
                 elements.suggestionText.textContent = `Bạn có thiên hướng mạnh về các nhóm ngành: ${sortedCategories.slice(0,2).join(', ')}. Hãy tìm hiểu thêm về các lĩnh vực này nhé!`;
            } else {
                elements.suggestionText.textContent = `Bạn có kiến thức đa dạng! Hãy tiếp tục khám phá để tìm ra đam mê thật sự của mình.`;
            }
            elements.resultsModal.classList.remove('hidden');
        }

        function resetToStartScreen() {
            elements.resultsModal.classList.add('hidden');
            elements.gameWrapper.classList.add('hidden');
            elements.startScreen.classList.remove('hidden');
        }

        function showTab(tabId) {
            document.getElementById('game-tab-content').classList.add('hidden');

            document.getElementById('game-tab-button').classList.remove('active-tab');

            document.getElementById(tabId + '-tab-content').classList.remove('hidden');
            document.getElementById(tabId + '-tab-button').classList.add('active-tab');

            // Ẩn modal kết quả nếu đang mở khi chuyển tab
        }

        document.addEventListener('DOMContentLoaded', () => {
            showTab('game');
        });
    </script>
</body>
</html>
" class="w-full h-full border-0 rounded-xl shadow-lg min-h-[600px]"></iframe>
            </div>
        </section>

        <!-- Scholarship Page (ĐÃ CẬP NHẬT TỪ FILE) -->
        <section id="scholarship-page" class="page-content">
            <!-- Phần Hero (Giới thiệu & Tìm kiếm) -->
            <header class="bg-white shadow-sm mb-8">
                <div class="container mx-auto px-4 sm:px-6 lg:px-8 py-12 text-center">
                    <h1 class="text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl lg:text-5xl">
                        Tìm kiếm Cơ hội, Chắp cánh Ước mơ
                    </h1>
                    <p class="mt-4 text-lg text-gray-600 max-w-2xl mx-auto">
                        Nền tảng tập trung học bổng uy tín cho học sinh, sinh viên Việt Nam.
                    </p>
                    
                    <!-- Thanh tìm kiếm -->
                    <div class="mt-8 max-w-lg mx-auto flex">
                        <input id="scholarship-search-input" type="text" placeholder="Nhập tên học bổng, ngành học, trường..." class="flex-1 min-w-0 w-full px-4 py-3 rounded-l-md border-gray-300 focus:ring-blue-500 focus:border-blue-500 shadow-sm text-sm">
                        <button type="button" onclick="filterScholarships()" class="inline-flex items-center px-6 py-3 border border-transparent text-sm font-medium rounded-r-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                            <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd" />
                            </svg>
                        </button>
                    </div>
                </div>
            </header>
        
            <!-- Phần Nội dung chính -->
            <main class="container mx-auto px-4 sm:px-6 lg:px-8 py-8">
                
                <!-- Bộ lọc -->
                <div class="bg-white p-4 rounded-lg shadow-sm mb-6">
                    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4">
                        <div>
                            <label for="filter-level" class="block text-sm font-medium text-gray-700">Cấp học</label>
                            <select id="filter-level" name="cap-hoc" class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md">
                                <option value="">Tất cả</option>
                                <option value="Cấp 3">Cấp 3</option>
                                <option value="Đại học">Đại học</option>
                                <option value="Sau Đại học">Sau Đại học</option>
                            </select>
                        </div>
                        <div>
                            <label for="filter-location" class="block text-sm font-medium text-gray-700">Địa điểm</label>
                            <select id="filter-location" name="dia-diem" class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md">
                                <option value="">Tất cả</option>
                                <option value="Trong nước">Trong nước</option>
                                <option value="Du học">Du học</option>
                                <option value="Hà Nội">Hà Nội</option>
                                <option value="TP. Hồ Chí Minh">TP. Hồ Chí Minh</option>
                            </select>
                        </div>
                        <div>
                            <label for="filter-field" class="block text-sm font-medium text-gray-700">Ngành học</label>
                            <select id="filter-field" name="nganh-hoc" class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md">
                                <option value="">Tất cả</option>
                                <option value="Kinh tế">Kinh tế</option>
                                <option value="Kỹ thuật">Kỹ thuật</option>
                                <option value="Khoa học Xã hội">Khoa học Xã hội</option>
                                <option value="Nghệ thuật">Nghệ thuật</option>
                                <option value="Y Dược">Y Dược</option>
                                <option value="Nông nghiệp">Nông nghiệp</option>
                            </select>
                        </div>
                        <div class="self-end">
                            <button onclick="filterScholarships()" class="w-full bg-gray-200 hover:bg-gray-300 text-gray-800 font-medium py-2 px-4 rounded-md">
                                Lọc kết quả
                            </button>
                        </div>
                    </div>
                </div>
        
                <!-- Khu vực Tab -->
                <div>
                    <div class="border-b border-gray-200">
                        <nav class="-mb-px flex space-x-8" aria-label="Tabs">
                            <button class="scholarship-tab-button tab-button tab-active" data-tab="tab-xuat-sac">
                                Học bổng Xuất sắc
                            </button>
                            <button class="scholarship-tab-button tab-button" data-tab="tab-kho-khan">
                                Học bổng Khó khăn
                            </button>
                            <button class="scholarship-tab-button tab-button" data-tab="tab-sap-het-han">
                                Sắp hết hạn
                            </button>
                        </nav>
                    </div>
        
                    <!-- Nội dung các Tab -->
                    <div class="mt-6">
                        <div id="scholarship-results-container" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                            <!-- Kết quả học bổng sẽ được hiển thị ở đây -->
                            <p id="no-results-message" class="text-gray-500 italic col-span-full text-center hidden">Không tìm thấy học bổng phù hợp.</p>
                        </div>
                    </div>
                </div>
        
            </main>
        </section>

        <!-- Trang Thi Thử (ĐÃ BỊ ẨN/THAY THẾ BẰNG MINIGAME) -->
        <!-- Nội dung này sẽ không được hiển thị do logic JS -->
        <section id="test-hub-page" class="page-content" style="display: none;">
            <h1 class="text-4xl font-bold text-gray-800 mb-8 text-center">Gợi Ý Ngành Học Dựa Trên Điểm Thi (Tham Khảo)</h1>
            <div class="bg-white p-8 rounded-3xl card-shadow">
                <p class="text-lg text-gray-700 mb-8 text-center max-w-3xl mx-auto">Nhập điểm thi Tốt nghiệp THPT dự kiến của bạn vào các tổ hợp môn dưới đây để nhận gợi ý các ngành/trường phù hợp. Dữ liệu dựa trên điểm chuẩn tham khảo.</p>

                <!-- Input Scores -->
                <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-5 gap-6 mb-8">
                    <div>
                        <label for="score-A00" class="block text-sm font-semibold text-gray-700 mb-1">A00 (Toán, Lý, Hóa)</label>
                        <input type="number" id="score-A00" min="0" max="30" step="0.05" class="input-score" placeholder="Nhập điểm">
                    </div>
                    <div>
                        <label for="score-A01" class="block text-sm font-semibold text-gray-700 mb-1">A01 (Toán, Lý, Anh)</label>
                        <input type="number" id="score-A01" min="0" max="30" step="0.05" class="input-score" placeholder="Nhập điểm">
                    </div>
                    <div>
                        <label for="score-B00" class="block text-sm font-semibold text-gray-700 mb-1">B00 (Toán, Hóa, Sinh)</label>
                        <input type="number" id="score-B00" min="0" max="30" step="0.05" class="input-score" placeholder="Nhập điểm">
                    </div>
                    <div>
                        <label for="score-C00" class="block text-sm font-semibold text-gray-700 mb-1">C00 (Văn, Sử, Địa)</label>
                        <input type="number" id="score-C00" min="0" max="30" step="0.05" class="input-score" placeholder="Nhập điểm">
                    </div>
                    <div>
                        <label for="score-D01" class="block text-sm font-semibold text-gray-700 mb-1">D01 (Toán, Văn, Anh)</label>
                        <input type="number" id="score-D01" min="0" max="30" step="0.05" class="input-score" placeholder="Nhập điểm">
                    </div>
                </div>

                <!-- Action Buttons -->
                <div class="flex justify-center space-x-4 mb-10">
                    <button class="btn-test-hub btn-indigo px-8" onclick="calculateSuggestions()">
                        Tính toán Gợi ý
                    </button>
                    <button class="btn-test-hub bg-gray-600 hover:bg-gray-700 px-6" onclick="clearScores()">
                        Xóa điểm
                    </button>
                </div>

                <!-- Suggestions Table -->
                <h3 class="text-2xl font-bold text-gray-800 mb-4 text-center">Kết quả Gợi ý</h3>
                <div class="overflow-x-auto rounded-xl border border-gray-200 bg-gray-50">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-100">
                            <tr>
                                <th scope="col" class="py-3 px-4 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">Ngành / Trường Gợi ý</th>
                                <th scope="col" class="py-3 px-4 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">Tổ hợp Xét tuyển</th>
                                <th scope="col" class="py-3 px-4 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">Điểm chuẩn TK</th>
                                <th scope="col" class="py-3 px-4 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">Điểm của bạn</th>
                                <th scope="col" class="py-3 px-4 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">Trạng thái</th>
                            </tr>
                        </thead>
                        <tbody id="suggestions-tbody" class="bg-white divide-y divide-gray-200">
                            <tr>
                                <td colspan="5" class="py-4 px-4 text-center text-gray-500 italic">
                                    Nhập điểm của bạn và nhấn "Tính toán" để xem gợi ý.
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </section>

        <!-- Trang API Test (MỚI) -->
        <section id="api-test-page" class="page-content">
            <h1 class="text-4xl font-bold text-center mb-8 text-gray-900">Kiểm Tra Kết Nối Gemini API</h1>
            <div class="bg-white p-8 rounded-3xl shadow-xl max-w-2xl mx-auto">
                <p class="text-gray-600 mb-6 text-center">Nhấn nút bên dưới để gửi một yêu cầu thử nghiệm đến Gemini API và xem kết quả.</p>
                <button id="api-test-btn" onclick="testGeminiAPI()" class="w-full bg-purple-600 text-white font-bold py-3 px-8 rounded-full shadow-lg hover:bg-purple-700 transition duration-300 transform hover:scale-105 disabled:opacity-50">
                    Bắt đầu Kiểm tra
                </button>
                <textarea id="api-test-result" rows="8" class="mt-6 w-full p-4 border border-gray-300 rounded-xl bg-gray-50 focus:outline-none focus:ring-2 focus:ring-purple-500" readonly placeholder="Kết quả kiểm tra sẽ hiển thị ở đây..."></textarea>
                <p id="api-test-status" class="text-sm font-medium text-center text-gray-500 mt-4"></p>
            </div>
        </section>

    </main>

    <!-- Footer -->
    <footer class="bg-gray-800 text-white py-10 mt-12">
        <div class="container mx-auto px-6">
            <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
                <div>
                    <h5 class="text-xl font-bold mb-4"><span class="text-indigo-400">Hướng</span>Nghiệp</h5>
                    <p class="text-gray-400 text-sm">Hệ sinh thái toàn diện giúp học sinh khám phá bản thân, lựa chọn ngành nghề và định hướng tương lai.</p>
                </div>
                <div>
                    <h5 class="text-lg font-semibold mb-4">Liên kết nhanh</h5>
                    <ul class="space-y-2 text-sm">
                        <li><a href="#" class="text-gray-400 hover:text-white transition" onclick="showPage('home')">Trang chủ</a></li>
                        <li><a href="#" class="text-gray-400 hover:text-white transition" onclick="showPage('quiz-hub')">Mật mã cá nhân</a></li>
                        <li><a href="#" class="text-gray-400 hover:text-white transition" onclick="showPage('search')">Tra cứu AI</a></li>
                        <li><a href="#" class="text-gray-400 hover:text-white transition" onclick="showPage('admissions')">Tuyển sinh</a></li>
                    </ul>
                </div>
                <div>
                    <h5 class="text-lg font-semibold mb-4">Kết nối với chúng tôi</h5>
                    <div class="flex space-x-4">
                        <a href="https://www.facebook.com/profile.php?id=61582417071028" target="_blank" class="text-gray-400 hover:text-white transition text-2xl">
                           <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" fill="currentColor" class="w-6 h-6"><path d="M504 256C504 119 393 8 256 8S8 119 8 256c0 123.78 90.69 226.38 209.25 245V327.69h-63V256h63v-54.64c0-62.15 37-96.48 93.67-96.48 27.14 0 55.52 4.84 55.52 4.84v61h-31.28c-30.8 0-40.42 19.12-40.42 38.73V256h68.78l-11 71.69h-57.78V489C413.31 482.38 504 379.78 504 256z"/></svg>
                        </a>
                        <a href="http://www.youtube.com/@EDUPATH-f4e" target="_blank" class="text-gray-400 hover:text-white transition text-2xl">
                           <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512" fill="currentColor" class="w-6 h-6"><path d="M549.655 124.083c-6.281-23.65-24.787-42.276-48.284-48.597C458.781 64 288 64 288 64S117.22 64 74.629 75.486c-23.497 6.322-42.003 24.947-48.284 48.597-11.412 42.867-11.412 132.305-11.412 132.305s0 89.438 11.412 132.305c6.281 23.65 24.787 41.517 48.284 47.838C117.22 448 288 448 288 448s170.781 0 213.371-11.486c23.497-6.321 42.003-24.188 48.284-47.838 11.412-42.867 11.412-132.305 11.412-132.305s0-89.438-11.412-132.305zM231.5 352.5l143-72-143-72v144z"/></svg>
                        </a>
                         <a href="https://tiktok.com/@edupath.tng.lai.c" target="_blank" class="text-gray-400 hover:text-white transition text-2xl">
                             <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" class="w-6 h-6"><path d="M448,209.91a210.06,210.06,0,0,1-122.77-39.25V349.38A162.55,162.55,0,1,1,185,188.31V278.2h213.13V209.91ZM185,324.42A76.25,76.25,0,1,0,108.75,248.17,76.15,76.15,0,0,0,185,324.42Z"/></svg>
                        </a>
                    </div>
                </div>
            </div>
            <div class="border-t border-gray-700 mt-8 pt-8 text-center">
                <p class="text-gray-500 text-sm">
                    © 2024 Dự án Hệ sinh thái Định hướng Nghề nghiệp. Bảo lưu mọi quyền.
                </p>
            </div>
        </div>
    </footer>

    <!-- Modal Structure (Dùng chung cho các câu chuyện) -->
    <div id="storyModal" class="modal">
        <div class="modal-content">
            <span class="close-btn">&times;</span>
            <h2 id="modal-story-title" class="text-3xl font-bold text-gray-800 mb-6"></h2>
            <div id="modal-story-body" class="text-gray-700 leading-relaxed space-y-4">
                <!-- Nội dung câu chuyện sẽ được chèn vào đây -->
            </div>
        </div>
    </div>

    <!-- Main JavaScript -->
    <script>
        // --- CÂU CHUYỆN TRUYỀN CẢM HỨNG (MODAL CONTENT - Moved outside DOMContentLoaded) ---
        const storyModals = {
             'chau': {
                 title: "Nguyễn Huyền Châu: Chuyện trao đi những cơ hội",
                 content: `
                     <p class="mb-4">Nguyễn Huyền Châu (sinh năm 1993) thường được nhắc tới như cô gái người Việt dưới 30 tuổi đầu tiên được mời tham dự Diễn đàn Kinh tế thế giới Davos (Thụy Sĩ) năm 2023. Đây là nơi quy tụ những nhà lãnh đạo toàn cầu, các tỷ phú và những người có tầm ảnh hưởng lớn.</p>
                     <p class="mb-4">Điều gì đã đưa một cô gái trẻ đến với diễn đàn danh giá này? Đó không phải là gia thế "khủng" hay tài sản kếch xù. Hành trình của Châu bắt đầu từ năm 19 tuổi, khi cô nhận ra mình có thể làm những gì mình thích, "cứ thử, sai, và làm lại".</p>
                     <p class="mb-4">Năm 2013, cô giành học bổng toàn phần của Chính phủ Nhật Bản (MEXT). Tại Nhật, cô không chỉ học tập mà còn tích cực tham gia các hoạt động ngoại khóa, tổ chức sự kiện kết nối sinh viên Việt Nam và quốc tế. Sau khi tốt nghiệp, cô làm việc tại một tập đoàn lớn của Nhật, nhưng rồi nhận ra mình muốn tạo ra tác động xã hội lớn hơn.</p>
                     <p class="mb-4">Cô trở về Việt Nam, tham gia và sau đó điều hành một tổ chức phi lợi nhuận về giáo dục. Cô tiếp tục học Thạc sĩ Chính sách công tại Đại học Oxford (Anh) với học bổng Chevening.</p>
                     <p class="mb-4">Sau đó, cô đồng sáng lập và điều hành các doanh nghiệp xã hội, tạo ra tác động tích cực cho hàng ngàn người. Cô chia sẻ: "Tôi luôn tin rằng cơ hội không tự nhiên đến, mà do mình tạo ra. Và khi mình có cơ hội, mình nên chia sẻ nó với người khác". Đó cũng là lý do cô được chọn đến Davos, không phải vì cô giàu có, mà vì những giá trị cô tạo ra cho cộng đồng.</p>
                     <p class="italic">"Hành trình này bắt đầu từ khi cô 19 tuổi, biết rằng: mình hoàn toàn có thể làm những gì mình thích, cứ thử, sai, và làm lại”.</p>
                     <p class="mt-6 p-4 bg-blue-50 border-l-4 border-blue-400 rounded-r-lg">
                         <strong>Ý nghĩa rút ra:</strong> Câu chuyện của Huyền Châu là minh chứng cho việc dám ước mơ, dám hành động và không ngại thất bại. Thành công không chỉ là đạt được mục tiêu cá nhân, mà còn là việc tạo ra giá trị và cơ hội cho cộng đồng. Hãy cứ thử, sai, và làm lại.
                     </p>
                 `
             },
             'vu': {
                 title: "Đặng Lê Nguyên Vũ: Câu chuyện vua cafe",
                 content: `
                     <p class="mb-4">Đặng Lê Nguyên Vũ (sinh năm 1971) là người sáng lập, chủ tịch kiêm Tổng Giám đốc Tập đoàn Trung Nguyên, thương hiệu cà phê hàng đầu Việt Nam.</p>
                     <p class="mb-4">Ít ai biết rằng, ông từng là sinh viên năm 3 khoa Y, Đại học Tây Nguyên. Nhưng khát vọng làm giàu và đưa hạt cà phê quê hương vươn tầm thế giới đã thôi thúc ông từ bỏ con đường Y khoa để khởi nghiệp.</p>
                     <p class="mb-4">Năm 1996, ông cùng ba người bạn mở một hãng cà phê nhỏ ở Buôn Ma Thuột với số vốn chỉ là chiếc xe đạp cọc cạch và niềm tin mãnh liệt. Những ngày đầu vô cùng khó khăn, ông phải tự mình làm mọi việc, từ rang xay, đóng gói đến giao hàng.</p>
                     <p class="mb-4">Năm 1998, Trung Nguyên mở quán cà phê đầu tiên tại TP.HCM, tạo nên một "hiện tượng" với mô hình quán độc đáo và thông điệp "Khơi nguồn sáng tạo". Từ đó, thương hiệu Trung Nguyên bắt đầu lan tỏa mạnh mẽ.</p>
                     <p class="mb-4">Ông luôn nung nấu một "khát vọng Trung Nguyên" - nâng tầm hạt cà phê Việt Nam trên bản đồ thế giới. Ông không chỉ bán cà phê, ông bán một "văn hóa cà phê". Vượt qua vô vàn thất bại và cạnh tranh, Trung Nguyên đã trở thành thương hiệu cà phê số 1 Việt Nam và vươn ra quốc tế.</p>
                     <p class="italic">33 tuổi, ông đã tạo ra một đế chế cà phê danh tiếng, dám từ bỏ con đường an toàn (sinh viên Y khoa) để theo đuổi đam mê cháy bỏng.</p>
                     <p class="mt-6 p-4 bg-green-50 border-l-4 border-green-400 rounded-r-lg">
                         <strong>Ý nghĩa rút ra:</strong> Đam mê là ngọn đuốc dẫn đường. Ông Đặng Lê Nguyên Vũ đã chứng minh rằng việc dám từ bỏ con đường an toàn để theo đuổi đam mê cháy bỏng, kết hợp với sự kiên trì và tầm nhìn lớn, có thể biến một sản phẩm địa phương thành thương hiệu toàn cầu. Đừng sợ đi ngược số đông nếu bạn tin vào con đường của mình.
                     </p>
                 `
             },
             'sanders': {
                 title: "Harland Sanders: Huyền thoại KFC ở tuổi 66",
                 content: `
                     <p class="mb-4">Đại tá Harland Sanders (1890-1980), người sáng lập thương hiệu gà rán KFC (Kentucky Fried Chicken), là một biểu tượng cho sự kiên trì và khởi nghiệp muộn màng.</p>
                     <p class="mb-4">Ông có một cuộc đời đầy gian truân. Bỏ học từ sớm, ông đã làm đủ thứ nghề, từ lính cứu hỏa, lái tàu hơi nước, bán bảo hiểm đến nông dân... và thường xuyên thất bại hoặc bị sa thải.</p>
                     <p class="mb-4">Năm 40 tuổi, ông bắt đầu nấu ăn và bán gà rán cho khách dừng chân tại một trạm xăng ở Corbin, Kentucky. Món gà của ông dần trở nên nổi tiếng. Tuy nhiên, việc kinh doanh gặp nhiều biến cố, bao gồm cả việc nhà hàng bị cháy rụi và sau đó là sự sụt giảm khách hàng do đường cao tốc mới được xây dựng.</p>
                     <p class="mb-4">Ở tuổi 65, với số tiền trợ cấp xã hội ít ỏi, ông quyết định không bỏ cuộc. Ông tin tưởng vào công thức gà rán 11 loại gia vị bí mật của mình và bắt đầu hành trình đi khắp nước Mỹ để bán công thức này cho các nhà hàng khác theo hình thức nhượng quyền.</p>
                     <p class="mb-4">Ông đã bị từ chối 1009 lần. Chỉ đến lần thứ 1010, ông mới có được hợp đồng đầu tiên. Từ đó, đế chế KFC ra đời. Khi ông bán lại công ty, ông đã 75 tuổi và trở thành triệu phú.</p>
                     <p class="italic">Trải qua một cuộc đời cực nhọc, ở tuổi 66, Harland Sanders quyết tâm tạo ra công thức gà rán của riêng mình... thất bại chỉ là tạm thời nếu bạn không bao giờ từ bỏ.</p>
                     <p class="mt-6 p-4 bg-red-50 border-l-4 border-red-400 rounded-r-lg">
                         <strong>Ý nghĩa rút ra:</strong> Không bao giờ là quá trễ để bắt đầu. Đại tá Sanders là biểu tượng cho sự kiên trì bền bỉ, chứng minh rằng tuổi tác không phải là rào cản. Bị từ chối 1009 lần, ông vẫn tin tưởng vào công thức của mình. Thất bại chỉ là tạm thời nếu bạn thực sự tin vào giá trị mình tạo ra và không bao giờ từ bỏ.
                     </p>
                 `
             }
         };

         // --- CÂU CHUYỆN TRUYỀN CẢM HỨNG (MODAL LOGIC - Moved outside DOMContentLoaded) ---
         // Make showStoryModal globally accessible
         window.showStoryModal = function(storyId) {
             const story = storyModals[storyId];
             const modal = document.getElementById('storyModal'); // Get modal here
             if (story && modal) {
                 document.getElementById('modal-story-title').textContent = story.title;
                 document.getElementById('modal-story-body').innerHTML = story.content;
                 modal.style.display = 'block';
             }
         }
         
        // Hàm đóng Modal câu chuyện
        function closeStoryModal() {
            const modal = document.getElementById('storyModal');
            if (modal) {
                modal.style.display = 'none';
            }
        }
        
        // --- LOGIC TAB MINIGAME ---
        function showGameTab(tabId, clickedButton) {
            // Ẩn tất cả nội dung tab
            document.getElementById('game1-content').style.display = 'none';
            document.getElementById('game2-content').style.display = 'none';
            
            // Hủy kích hoạt tất cả các nút tab
            const tabButtons = document.querySelectorAll('.game-tab-btn');
            tabButtons.forEach(btn => btn.classList.remove('active'));
            
            // Hiển thị nội dung tab được chọn
            document.getElementById(tabId + '-content').style.display = 'block';
            
            // Kích hoạt nút được nhấp
            if (clickedButton) {
                clickedButton.classList.add('active');
            } else {
                // Mặc định kích hoạt tab đầu tiên nếu không có nút nào được cung cấp
                tabButtons[0].classList.add('active');
            }
        }

        // --- CUSTOM ALERT MODAL ---
        function showCustomModal(title, message) {
            // (Modal này cần được thêm vào HTML, nhưng logic JS ở đây)
            // Giả sử bạn có một modal với ID 'customAlertModal'
            const modal = document.getElementById('customAlertModal');
            if (modal) {
                document.getElementById('customAlertTitle').textContent = title;
                document.getElementById('customAlertMessage').innerHTML = message;
                modal.style.display = 'block';
            } else {
                // Fallback nếu modal không tồn tại (không khuyến khích)
                console.log("Modal Info:", title, message);
            }
        }

        // --- NAVIGATION ---
        function toggleMobileMenu() {
            document.getElementById('mobile-menu').classList.toggle('hidden');
        }

        function showPage(pageId) {
            document.querySelectorAll('.page-content').forEach(page => page.style.display = 'none');
            const pageToShow = document.getElementById(pageId + '-page');
            if (pageToShow) {
                pageToShow.style.display = 'block';
            } else {
                // Trang mặc định nếu không tìm thấy
                document.getElementById('home-page').style.display = 'block';
            }
            
            // Khởi tạo hoặc cập nhật nội dung khi hiển thị
            if (pageId === 'quiz-disc') initializeQuiz('disc');
            if (pageId === 'quiz-holland') initializeQuiz('holland');
            if (pageId === 'quiz-mbti') initializeQuiz('mbti');
            if (pageId === 'search' && !isSearchChatReady) setupChatbot('search');
            if (pageId === 'advice' && !isAdviceChatReady) setupChatbot('advice');
            if (pageId === 'admissions') showAdmissionsTab('tab-thpt'); // Hiển thị tab đầu tiên của Tuyển sinh
            if (pageId === 'api-test') testGeminiAPI(); // Tự động chạy test khi vào trang
            if (pageId === 'minigame') showGameTab('game1', document.querySelector('.game-tab-btn')); // Kích hoạt tab đầu tiên
            if (pageId === 'scholarship') {
                 setupScholarshipTabs(); // Thiết lập tab học bổng
                 filterScholarships(); // Hiển thị tất cả ban đầu
            }

            // Đóng menu mobile sau khi chọn
            const mobileMenu = document.getElementById('mobile-menu');
            if (mobileMenu && !mobileMenu.classList.contains('hidden')) {
                mobileMenu.classList.add('hidden');
            }
            window.scrollTo(0, 0); // Cuộn lên đầu trang
        }

        // --- API & CHATBOT ---
         const apiKey = "AIzaSyDmA3KF2x1tM_EgVjfNchjTODgmPf9v5yI"; // Canvas sẽ tự động cung cấp API Key
        const GEMINI_API_URL = "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent"; 
        
        let isSearchChatReady = false;
        let isAdviceChatReady = false;
        let searchChatHistory = [{ role: "model", parts: [{ text: "Chào bạn! Tôi là AI Hướng Nghiệp. Hãy nhập ngành nghề (ví dụ: 'Công nghệ Thông tin') để tôi tra cứu thông tin mới nhất và trích dẫn nguồn cho bạn." }] }];
        let adviceChatHistory = [{ role: "model", parts: [{ text: "Chào bạn. Tôi là AI Tư Vấn. Hãy chia sẻ bất kỳ khó khăn hay băn khoăn nào bạn đang gặp phải. Tôi sẽ lắng nghe và đưa ra lời khuyên chân thành." }] }];

        // Hàm fetch với xử lý lỗi 429 (quá tải)
        async function exponentialBackoffFetch(url, options, maxRetries = 5) {
            for (let i = 0; i < maxRetries; i++) {
                try {
                    const response = await fetch(url + `?key=${apiKey}`, options); // Thêm key vào URL
                    if (response.status === 429 && i < maxRetries - 1) {
                        const delay = Math.pow(2, i) * 1000 + Math.random() * 1000;
                        // console.log(`Rate limited. Retrying after ${delay}ms...`);
                        await new Promise(resolve => setTimeout(resolve, delay));
                        continue; // Thử lại
                    }
                    if (!response.ok) {
                        const errorBody = await response.text();
                         console.error("API Error Response:", errorBody);
                         throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    return response;
                } catch (error) {
                    // console.error(`Attempt ${i+1} failed:`, error);
                    if (i === maxRetries - 1) throw error; // Ném lỗi sau lần thử cuối
                    const delay = Math.pow(2, i) * 1000 + Math.random() * 1000;
                    await new Promise(resolve => setTimeout(resolve, delay));
                }
            }
        }

        function setupChatbot(mode) {
            const isSearch = mode === 'search';
            if ((isSearch && isSearchChatReady) || (!isSearch && isAdviceChatReady)) return;

            const historyElement = isSearch ? document.getElementById('chat-history') : document.getElementById('advice-chat-history');
            const inputElement = isSearch ? document.getElementById('search-user-input') : document.getElementById('advice-user-input');
            const sendButton = isSearch ? document.getElementById('search-send-btn') : document.getElementById('advice-send-btn');
            const chatHistory = isSearch ? searchChatHistory : adviceChatHistory;
            
            historyElement.innerHTML = '';
            chatHistory.forEach(msg => appendMessage(historyElement, msg.parts[0].text, msg.role));
            historyElement.scrollTop = historyElement.scrollHeight;

            inputElement.disabled = false;
            sendButton.disabled = false;

            const sendMessageHandler = () => {
                const userInput = inputElement.value.trim();
                if (userInput) sendMessageToGemini(userInput, mode);
            };

            // Gỡ bỏ trình nghe cũ (nếu có) để tránh gọi nhiều lần
            sendButton.onclick = null;
            inputElement.onkeypress = null;

            sendButton.addEventListener('click', sendMessageHandler);
            inputElement.addEventListener('keypress', (e) => {
                if (e.key === 'Enter') sendMessageHandler();
            });

            if (isSearch) isSearchChatReady = true;
            else isAdviceChatReady = true;
        }

        function appendMessage(historyElement, text, sender, sources = []) {
            const isUser = sender === 'user';
            const messageDiv = document.createElement('div');
            messageDiv.className = `flex ${isUser ? 'justify-end' : 'justify-start'}`;

            let sourcesHtml = '';
            if (!isUser && sources.length > 0) {
                const displayedSources = sources.slice(0, 3); // Giới hạn 3 nguồn
                sourcesHtml = `
                    <div class="mt-2 text-xs text-gray-500 border-t border-gray-300 pt-2">
                        <p class="font-semibold mb-1">Nguồn trích dẫn:</p>
                        <ul class="space-y-1">
                            ${displayedSources.map((src, i) => `<li><a href="${src.uri}" target="_blank" class="text-blue-600 hover:underline truncate block max-w-full">${i + 1}. ${src.title || src.uri}</a></li>`).join('')}
                        </ul>
                    </div>`;
            }
            
            // Định dạng markdown cơ bản
            const formattedText = text
                .replace(/\n/g, '<br>')
                .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>');

            messageDiv.innerHTML = `
                <div class="message-bubble ${isUser ? 'user-message' : 'ai-message'} shadow-md">
                    ${formattedText}
                    ${sourcesHtml}
                </div>`;
            historyElement.appendChild(messageDiv);
        }

        function appendTypingIndicator(historyElement) {
            removeTypingIndicator(); // Đảm bảo không trùng lặp
            const indicatorDiv = document.createElement('div');
            indicatorDiv.id = 'typing-indicator';
            indicatorDiv.className = 'flex justify-start';
            indicatorDiv.innerHTML = `
                <div class="message-bubble ai-message shadow-md typing-indicator">
                    <span></span><span></span><span></span>
                </div>`;
            historyElement.appendChild(indicatorDiv);
            historyElement.scrollTop = historyElement.scrollHeight;
        }

        function removeTypingIndicator() {
            const indicator = document.getElementById('typing-indicator');
            if (indicator) indicator.remove();
        }

        async function sendMessageToGemini(userInput, mode) {
            const isSearch = mode === 'search';
            const chatHistory = isSearch ? searchChatHistory : adviceChatHistory;
            const historyElement = isSearch ? document.getElementById('chat-history') : document.getElementById('advice-chat-history');
            const inputElement = isSearch ? document.getElementById('search-user-input') : document.getElementById('advice-user-input');
            const sendButton = isSearch ? document.getElementById('search-send-btn') : document.getElementById('advice-send-btn');

            // Vô hiệu hóa input và hiển thị loading
            inputElement.disabled = true;
            sendButton.disabled = true;
            sendButton.innerHTML = `<svg class="animate-spin h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg>`;

            // Thêm tin nhắn của người dùng
            chatHistory.push({ role: "user", parts: [{ text: userInput }] });
            appendMessage(historyElement, userInput, 'user');
            appendTypingIndicator(historyElement);
            historyElement.scrollTop = historyElement.scrollHeight;

            // Chuẩn bị payload
            const systemPrompt = isSearch 
                ? "Bạn là một chuyên gia hướng nghiệp. Hãy sử dụng Google Search để tìm kiếm thông tin về ngành nghề của người dùng. Trả lời chi tiết, chính xác bằng tiếng Việt và trích dẫn tất cả các nguồn."
                : "Bạn là một người lắng nghe chân thành, thấu cảm. Hãy đưa ra lời khuyên chân thành, khích lệ và không phán xét bằng tiếng Việt, tập trung giúp người dùng giải quyết băn khoăn về sự nghiệp hoặc cuộc sống.";

            const payload = {
                contents: chatHistory,
                systemInstruction: { parts: [{ text: systemPrompt }] },
            };
            if (isSearch) {
                payload.tools = [{ "google_search": {} }];
            }

            // const apiUrl = `${GEMINI_API_URL}?key=${apiKey}`; // API Key is handled by Canvas

            let aiResponseText = "Xin lỗi, đã xảy ra lỗi. Vui lòng thử lại.";
            let sources = [];

            // Gọi API
            try {
                const response = await exponentialBackoffFetch(GEMINI_API_URL, { // Pass URL without key
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(payload)
                });
                const result = await response.json();
                const candidate = result.candidates?.[0];

                if (candidate?.content?.parts?.[0]?.text) {
                    aiResponseText = candidate.content.parts[0].text;
                    const groundingMetadata = candidate.groundingMetadata;
                    if (groundingMetadata?.groundingAttributions) {
                        sources = groundingMetadata.groundingAttributions
                            .map(attr => ({ uri: attr.web?.uri, title: attr.web?.title }))
                            .filter(src => src.uri && src.title);
                    }
                    chatHistory.push({ role: "model", parts: [{ text: aiResponseText }] });
                } else if (result.error) {
                    aiResponseText = `Đã xảy ra lỗi: ${result.error.message}`;
                    console.error("Gemini API Error:", result.error);
                } else {
                     aiResponseText = "Không nhận được phản hồi hợp lệ từ AI.";
                     console.error("Invalid API Response:", result);
                }
            } catch (error) {
                console.error("API Call failed:", error);
                aiResponseText = "Đã xảy ra lỗi kết nối. Vui lòng kiểm tra lại kết nối mạng hoặc thử lại sau.";
            } finally {
                // Khôi phục UI
                removeTypingIndicator();
                appendMessage(historyElement, aiResponseText, 'ai', sources);
                historyElement.scrollTop = historyElement.scrollHeight;
                
                inputElement.disabled = false;
                sendButton.disabled = false;
                sendButton.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-6 h-6"><path d="M3.478 2.405a.75.75 0 00-.926.94l2.432 7.917H3.75a.75.75 0 00-.75.75v6.75a.75.75 0 001.085.67L17.25 4.75l-13.772-2.345Z" /></svg>`;
                inputElement.value = '';
                inputElement.focus();
            }
        }
        
        // --- API TEST PAGE LOGIC ---
        async function testGeminiAPI() {
            const btn = document.getElementById('api-test-btn');
            const resultEl = document.getElementById('api-test-result');
            const statusEl = document.getElementById('api-test-status');
            
            if (!btn || !resultEl || !statusEl || btn.disabled) return; // Kiểm tra element tồn tại
            
            btn.disabled = true;
            btn.textContent = 'Đang kiểm tra...';
            resultEl.value = '';
            statusEl.textContent = 'Đang gửi yêu cầu đến Gemini...';
            
            const testPrompt = "Viết một câu chào bằng tiếng Việt.";
            
            const payload = {
                contents: [{ role: "user", parts: [{ text: testPrompt }] }]
            };
            // const apiUrl = `${GEMINI_API_URL}?key=${apiKey}`; // Key handled by Canvas

            try {
                const response = await exponentialBackoffFetch(GEMINI_API_URL, { // Pass URL without key
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(payload)
                });
                const result = await response.json();
                
                if (result.candidates?.[0]?.content?.parts?.[0]?.text) {
                    resultEl.value = `YÊU CẦU: ${testPrompt}\n\nKẾT QUẢ:\n${result.candidates[0].content.parts[0].text}`;
                    statusEl.textContent = 'Kiểm tra thành công!';
                    statusEl.classList.remove('text-red-500');
                    statusEl.classList.add('text-green-500');
                } else if (result.error) {
                    throw new Error(result.error.message);
                } else {
                    throw new Error('Phản hồi API không hợp lệ.');
                }
            } catch (error) {
                console.error("API Test failed:", error);
                resultEl.value = `LỖI: ${error.message}\n\nVui lòng kiểm tra Console (F12) để biết chi tiết.`;
                statusEl.textContent = 'Kiểm tra thất bại. Vui lòng thử lại.';
                statusEl.classList.remove('text-green-500');
                statusEl.classList.add('text-red-500');
            } finally {
                btn.disabled = false;
                btn.textContent = 'Bắt đầu Kiểm tra lại';
            }
        }

        // --- ADMISSIONS PAGE LOGIC ---
        function showAdmissionsTab(tabId) {
            const tabButtons = document.querySelectorAll('#admissions-page .admissions-tab-button');
            const tabPanels = document.querySelectorAll('#admissions-page .admissions-tab-panel');

            // 1. Tắt active tất cả các nút tab và ẩn panel
            tabButtons.forEach(btn => {
                btn.classList.remove('tab-active', 'text-blue-600');
                btn.classList.add('text-gray-600');
            });
            tabPanels.forEach(panel => {
                panel.classList.add('hidden');
            });

            // 2. Tìm và bật active nút + hiển thị panel tương ứng
            const activeButton = document.querySelector(`#admissions-page .admissions-tab-button[data-tab="${tabId}"]`);
            const activePanel = document.getElementById(tabId);

            if (activeButton) {
                activeButton.classList.add('tab-active', 'text-blue-600');
                activeButton.classList.remove('text-gray-600');
            }
            if (activePanel) {
                activePanel.classList.remove('hidden');
            }
        }
        
        // Gắn sự kiện click cho các nút tab tuyển sinh
        document.addEventListener('DOMContentLoaded', function () {
            const admissionsTabButtons = document.querySelectorAll('#admissions-page .admissions-tab-button');
            admissionsTabButtons.forEach(button => {
                button.addEventListener('click', () => {
                    const targetTab = button.getAttribute('data-tab');
                    showAdmissionsTab(targetTab);
                });
            });
        });

        // --- SCHOLARSHIP PAGE LOGIC ---
        const allScholarshipsData = [
            // Xuất sắc
            { id: 1, type: 'xuat-sac', category: 'Học thuật', level: 'Đại học', location: 'Trong nước', field: 'Kỹ thuật', title: "Học bổng Toàn phần Đại học FPT", sponsor: "Tập đoàn FPT", value: "100% học phí", deadline: "2025-11-30", link: "#", isExpiringSoon: false },
            { id: 2, type: 'xuat-sac', category: 'Du học', level: 'Đại học', location: 'Du học', field: 'Kinh tế', title: "Học bổng Chính phủ Hàn Quốc (GKS)", sponsor: "Chính phủ Hàn Quốc", value: "Toàn phần + Vé máy bay + Sinh hoạt phí", deadline: "2025-12-15", link: "#", isExpiringSoon: false },
            { id: 3, type: 'xuat-sac', category: 'Tài năng', level: 'Cấp 3', location: 'Trong nước', field: 'Nghệ thuật', title: "Học bổng Âm nhạc Trẻ 2025", sponsor: "Quỹ Giai Điệu Việt", value: "50.000.000 VNĐ", deadline: "2025-11-25", link: "#", isExpiringSoon: false },
            // Khó khăn
            { id: 4, type: 'kho-khan', category: 'Vượt khó', level: 'Đại học', location: 'Trong nước', field: '', title: "Học bổng \"Tiếp sức đến trường\"", sponsor: "Báo Tuổi Trẻ", value: "15.000.000 VNĐ + quà tặng", deadline: "2025-12-01", link: "#", isExpiringSoon: false },
            { id: 5, type: 'kho-khan', category: 'Hỗ trợ', level: 'Đại học', location: 'Trong nước', field: '', title: "Học bổng \"Chắp cánh ước mơ\"", sponsor: "Quỹ Vừ A Dính", value: "Hỗ trợ sinh hoạt phí hàng tháng", deadline: "2025-12-10", link: "#", isExpiringSoon: false },
            // Sắp hết hạn (ví dụ)
            { id: 6, type: 'xuat-sac', category: 'Tài năng', level: 'Đại học', location: 'Trong nước', field: 'Kinh tế', title: "Học bổng Tài năng Trẻ VinUniversity", sponsor: "VinUniversity", value: "75% - 100% học phí", deadline: "2025-10-28", link: "#", isExpiringSoon: true }, // Ngày gần hiện tại
        ];

        function createScholarshipCard(scholarship) {
            const today = new Date();
            const deadlineDate = new Date(scholarship.deadline);
            const diffTime = deadlineDate - today;
            const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
            let deadlineText = `Hạn nộp: ${deadlineDate.toLocaleDateString('vi-VN')}`;
            let isUrgent = false;

            if (diffDays >= 0 && diffDays <= 7) { // Còn 7 ngày hoặc ít hơn
                deadlineText += ` (Còn ${diffDays} ngày)`;
                isUrgent = true;
                scholarship.isExpiringSoon = true; // Cập nhật trạng thái sắp hết hạn
            } else if (diffDays < 0) {
                 deadlineText += ` (Đã hết hạn)`;
                 // Có thể không hiển thị thẻ hết hạn, tùy logic filter
            }
            
            const categoryColors = {
                'Học thuật': 'bg-green-100 text-green-800',
                'Du học': 'bg-purple-100 text-purple-800',
                'Tài năng': 'bg-yellow-100 text-yellow-800',
                'Vượt khó': 'bg-blue-100 text-blue-800',
                'Hỗ trợ': 'bg-blue-100 text-blue-800',
                'Gấp': 'bg-red-100 text-red-800' // Cho tab sắp hết hạn
            };
            const categoryClass = categoryColors[scholarship.category] || 'bg-gray-100 text-gray-800';
            const borderClass = isUrgent ? 'border-2 border-red-500' : '';

            return `
                <div class="bg-white rounded-lg shadow-lg overflow-hidden transition-transform transform hover:-translate-y-1 ${borderClass}">
                    <div class="p-5">
                        <span class="inline-block ${categoryClass} text-xs px-2 rounded-full uppercase font-semibold tracking-wide">
                            ${scholarship.category}
                        </span>
                        <h3 class="mt-2 text-xl font-semibold text-gray-900">${scholarship.title}</h3>
                        <p class="mt-1 text-sm text-gray-600">Nhà tài trợ: ${scholarship.sponsor}</p>
                        <div class="mt-3">
                            <p class="text-gray-700"><span class="font-medium">Giá trị:</span> ${scholarship.value}</p>
                            <p class="${isUrgent ? 'text-red-600' : 'text-gray-700'} font-medium">${deadlineText}</p>
                        </div>
                    </div>
                    <div class="px-5 pb-5 bg-gray-50">
                        <a href="${scholarship.link}" target="_blank" class="block w-full text-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700">
                            Xem chi tiết
                        </a>
                    </div>
                </div>
            `;
        }

        function displayScholarships(scholarships) {
            const container = document.getElementById('scholarship-results-container');
            const noResultsMsg = document.getElementById('no-results-message');
            if (!container || !noResultsMsg) return;

            container.innerHTML = ''; // Xóa kết quả cũ
            if (scholarships.length === 0) {
                noResultsMsg.classList.remove('hidden');
            } else {
                noResultsMsg.classList.add('hidden');
                scholarships.forEach(scholarship => {
                    // Chỉ hiển thị học bổng chưa hết hạn
                    const deadlineDate = new Date(scholarship.deadline);
                    if (deadlineDate >= new Date()) {
                       container.innerHTML += createScholarshipCard(scholarship);
                    }
                });
            }
        }
        
        function getActiveScholarshipTab() {
            const activeButton = document.querySelector('#scholarship-page .scholarship-tab-button.tab-active');
            return activeButton ? activeButton.getAttribute('data-tab') : 'tab-xuat-sac'; // Mặc định là xuất sắc
        }


        function filterScholarships() {
            const searchTerm = document.getElementById('scholarship-search-input')?.value.toLowerCase() || '';
            const level = document.getElementById('filter-level')?.value || '';
            const location = document.getElementById('filter-location')?.value || '';
            const field = document.getElementById('filter-field')?.value || '';
            const activeTab = getActiveScholarshipTab(); // Lấy tab đang active

            let filtered = allScholarshipsData.filter(s => {
                const titleMatch = s.title.toLowerCase().includes(searchTerm);
                const sponsorMatch = s.sponsor.toLowerCase().includes(searchTerm);
                const levelMatch = !level || s.level === level;
                const locationMatch = !location || s.location === location || (location === "Trong nước" && s.location !== "Du học") || (location === "Du học" && s.location === "Du học");
                const fieldMatch = !field || s.field === field;
                
                 // Lọc theo tab
                let tabMatch = false;
                if (activeTab === 'tab-xuat-sac') tabMatch = s.type === 'xuat-sac';
                else if (activeTab === 'tab-kho-khan') tabMatch = s.type === 'kho-khan';
                else if (activeTab === 'tab-sap-het-han') {
                    // Kiểm tra ngày hết hạn
                    const today = new Date();
                    const deadlineDate = new Date(s.deadline);
                    const diffTime = deadlineDate - today;
                    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
                    tabMatch = diffDays >= 0 && diffDays <= 7; // Còn hạn và trong vòng 7 ngày
                }


                return (titleMatch || sponsorMatch) && levelMatch && locationMatch && fieldMatch && tabMatch;
            });

            displayScholarships(filtered);
        }

        // Hàm thiết lập sự kiện cho các tab học bổng
        function setupScholarshipTabs() {
            const tabButtons = document.querySelectorAll('#scholarship-page .scholarship-tab-button');
            
            tabButtons.forEach(button => {
                // Gỡ bỏ listener cũ nếu có để tránh trùng lặp
                button.replaceWith(button.cloneNode(true)); 
            });
            
            // Gắn listener mới
            const newTabButtons = document.querySelectorAll('#scholarship-page .scholarship-tab-button');
            newTabButtons.forEach(button => {
                 button.addEventListener('click', () => {
                    // Bỏ active ở tất cả các nút
                    newTabButtons.forEach(btn => {
                        btn.classList.remove('tab-active');
                        // Thêm lại các class cơ bản nếu cần (dựa trên CSS gốc của tab học bổng)
                         btn.classList.add('border-transparent', 'text-gray-500', 'hover:text-gray-700', 'hover:border-gray-300', 'py-4', 'px-1', 'border-b-2', 'font-medium', 'text-sm');
                    });
                    
                    // Thêm active cho nút được click
                    button.classList.add('tab-active');
                    // Bỏ các class cơ bản
                    button.classList.remove('border-transparent', 'text-gray-500', 'hover:text-gray-700', 'hover:border-gray-300');

                    // Lọc lại học bổng theo tab mới
                    filterScholarships();
                 });
             });
        }
        
        // --- LOGIC TRANG TEST HUB (HIỆN ĐÃ BỊ THAY THẾ) ---
        // (Giữ lại logic JS phòng trường hợp cần dùng)
        const benchmarkData = {
            A00: [
                { range: [15, 20], name: "Kỹ thuật Môi trường, Kỹ thuật Trắc địa (ĐH Tài nguyên Môi trường)", benchmark: 19.5 },
                { range: [20, 24], name: "Kỹ thuật Ô tô, Kỹ thuật Cơ khí (ĐH Giao thông Vận tải)", benchmark: 23.5 },
                { range: [24, 27], name: "Kỹ thuật Điện, Kỹ thuật Điều khiển (ĐH Bách Khoa HN)", benchmark: 26.5 },
                { range: [27, 30], name: "Khoa học Máy tính, CNTT (Top đầu ĐH Bách Khoa HN)", benchmark: 28.5 }
            ],
            A01: [
                { range: [18, 22], name: "Quản trị Dịch vụ Du lịch (ĐH Mở)", benchmark: 21.5 },
                { range: [22, 25], name: "Hệ thống Thông tin Quản lý (ĐH Thương mại)", benchmark: 24.5 },
                { range: [25, 27], name: "Logistics, Quản trị Kinh doanh (ĐH Kinh tế Quốc dân)", benchmark: 26.8 },
                { range: [27, 30], name: "Công nghệ Thông tin (Global ICT - ĐH Bách Khoa HN)", benchmark: 28.0 }
            ],
            B00: [
                { range: [16, 20], name: "Công nghệ Sinh học, Nông nghiệp (Học viện Nông nghiệp)", benchmark: 19.0 },
                { range: [20, 23], name: "Công nghệ Thực phẩm, Dược học (ĐH Công nghiệp HN)", benchmark: 22.5 },
                { range: [23, 26], name: "Kỹ thuật Y sinh, Y tế Công cộng (ĐH Bách Khoa HN, ĐH Y HN)", benchmark: 25.5 },
                { range: [26, 30], name: "Y Đa khoa, Răng-Hàm-Mặt (ĐH Y Hà Nội)", benchmark: 28.2 }
            ],
            C00: [
                { range: [17, 21], name: "Quản lý Văn hóa, Thông tin-Thư viện (ĐH Văn hóa HN)", benchmark: 20.0 },
                { range: [21, 24], name: "Du lịch, Việt Nam học (ĐH KHXH&NV - ĐHQGHN)", benchmark: 23.5 },
                { range: [24, 27], name: "Báo chí, Quan hệ Công chúng (ĐH KHXH&NV - ĐHQGHN)", benchmark: 26.5 },
                { range: [27, 30], name: "Đông phương học, Báo chí (Top đầu HV Báo chí & Tuyên truyền)", benchmark: 28.8 }
            ],
            D01: [
                { range: [19, 23], name: "Ngôn ngữ Anh (ĐH Hà Nội - hệ tự chủ)", benchmark: 22.0 },
                { range: [23, 26], name: "Kinh doanh Quốc tế, Marketing (ĐH Thương mại)", benchmark: 25.5 },
                { range: [26, 28], name: "Kinh tế Đối ngoại, Tài chính-Ngân hàng (ĐH Ngoại thương)", benchmark: 27.5 },
                { range: [28, 30], name: "Ngôn ngữ Hàn Quốc, Đông phương học (ĐH KHXH&NV)", benchmark: 29.0 }
            ]
        };

        function calculateSuggestions() {
            const scores = {
                A00: parseFloat(document.getElementById('score-A00').value) || 0,
                A01: parseFloat(document.getElementById('score-A01').value) || 0,
                B00: parseFloat(document.getElementById('score-B00').value) || 0,
                C00: parseFloat(document.getElementById('score-C00').value) || 0,
                D01: parseFloat(document.getElementById('score-D01').value) || 0,
            };

            const tbody = document.getElementById('suggestions-tbody');
            tbody.innerHTML = ''; // Xóa kết quả cũ
            let suggestionsFound = false;

            for (const combo in scores) {
                const score = scores[combo];
                if (score > 0 && benchmarkData[combo]) {
                    const suggestions = benchmarkData[combo].filter(item => score >= (item.benchmark - 2) && score <= (item.benchmark + 3)); // Lọc trong một khoảng

                    if(suggestions.length === 0 && score > 15) {
                        // Nếu không có gợi ý nào, tìm gợi ý gần nhất
                        const closest = benchmarkData[combo].reduce((prev, curr) =>
                            (Math.abs(curr.benchmark - score) < Math.abs(prev.benchmark - score) ? curr : prev)
                        );
                        suggestions.push(closest);
                    }

                    suggestions.forEach(item => {
                        suggestionsFound = true;
                        const status = score >= item.benchmark ? 'An toàn' : (score >= item.benchmark - 1.5 ? 'Có cơ hội' : 'Thử sức');
                        const statusClass = score >= item.benchmark ? 'text-green-600' : (score >= item.benchmark - 1.5 ? 'text-yellow-600' : 'text-red-600');

                        const row = `
                            <tr>
                                <td class="py-3 px-4 text-sm font-medium text-gray-900">${item.name}</td>
                                <td class="py-3 px-4 text-sm text-gray-600">${combo}</td>
                                <td class="py-3 px-4 text-sm text-gray-600">${item.benchmark.toFixed(2)}</td>
                                <td class="py-3 px-4 text-sm text-gray-600 font-bold">${score.toFixed(2)}</td>
                                <td class="py-3 px-4 text-sm font-bold ${statusClass}">${status}</td>
                            </tr>
                        `;
                        tbody.innerHTML += row;
                    });
                }
            }

            if (!suggestionsFound) {
                tbody.innerHTML = `<tr><td colspan="5" class="py-4 px-4 text-center text-gray-500 italic">Không tìm thấy gợi ý phù hợp. Vui lòng kiểm tra lại điểm số đã nhập.</td></tr>`;
            }
        }

        function clearScores() {
            document.getElementById('score-A00').value = '';
            document.getElementById('score-A01').value = '';
            document.getElementById('score-B00').value = '';
            document.getElementById('score-C00').value = '';
            document.getElementById('score-D01').value = '';
            const tbody = document.getElementById('suggestions-tbody');
            tbody.innerHTML = `<tr><td colspan="5" class="py-4 px-4 text-center text-gray-500 italic">Nhập điểm của bạn và nhấn "Tính toán" để xem gợi ý.</td></tr>`;
        }

        // --- QUIZ ENGINES (DISC, HOLLAND, MBTI) ---
        // (Toàn bộ code cho 3 engine trắc nghiệm được đặt ở đây)

        // --- 1. DISC Quiz Engine ---
        const DISCEngine = (function() {
             const fullQuestionsList = [
                {
                    text: "Khi làm việc nhóm, điều gì mô tả bạn tốt nhất?",
                    options: [
                        { trait: 'D', text: "Tôi thích **lãnh đạo** và kiểm soát kết quả." },
                        { trait: 'I', text: "Tôi mang lại sự **nhiệt tình** và tập trung vào các ý tưởng mới." },
                        { trait: 'S', text: "Tôi đảm bảo sự **ổn định** và hỗ trợ đồng đội." },
                        { trait: 'C', text: "Tôi chú trọng **chất lượng**, quy trình và chi tiết." }
                    ]
                },
                {
                    text: "Trong tình huống xung đột hoặc áp lực cao, phản ứng của bạn là gì?",
                    options: [
                        { trait: 'D', text: "Đối đầu trực tiếp vấn đề để tìm **giải pháp nhanh**." },
                        { trait: 'I', text: "Sử dụng sự hài hước và hòa giải để **giảm căng thẳng**." },
                        { trait: 'S', text: "Duy trì sự **bình tĩnh**, lắng nghe để tránh xung đột." },
                        { trait: 'C', text: "Phân tích nguyên nhân và tìm ra **dữ liệu** bị sai." }
                    ]
                },
                {
                    text: "Mục tiêu quan trọng nhất của bạn trong công việc là gì?",
                    options: [
                        { trait: 'D', text: "Đạt được **kết quả**, vượt qua các thách thức." },
                        { trait: 'I', text: "Được **công nhận**, có tầm ảnh hưởng xã hội." },
                        { trait: 'S', text: "Có sự **ổn định**, an toàn và môi trường hài hòa." },
                        { trait: 'C', text: "Sự **chính xác**, kiến thức chuyên sâu và tiêu chuẩn cao." }
                    ]
                },
                {
                    text: "Người khác thường nhận xét về tốc độ và nhịp độ làm việc của bạn như thế nào?",
                    options: [
                        { trait: 'D', text: "**Nhanh**, quyết đoán và luôn hướng đến hành động." },
                        { trait: 'I', text: "**Nhanh**, bốc đồng và thích làm nhiều việc cùng lúc." },
                        { trait: 'S', text: "**Chậm rãi**, đều đặn và có phương pháp." },
                        { trait: 'C', text: "**Cẩn thận**, tỉ mỉ và cần thời gian để kiểm tra." }
                    ]
                },
                {
                    text: "Điều gì khiến bạn lo lắng hoặc sợ hãi nhất?",
                    options: [
                        { trait: 'D', text: "Bị **lợi dụng** hoặc mất quyền kiểm soát." },
                        { trait: 'I', text: "Bị **từ chối** hoặc bị mất đi tầm ảnh hưởng." },
                        { trait: 'S', text: "Những **thay đổi đột ngột** và sự thiếu ổn định." },
                        { trait: 'C', text: "Bị chỉ trích về **lỗi sai** hoặc thiếu chính xác." }
                    ]
                },
                {
                    text: "Bạn ra quyết định dựa trên điều gì?",
                    options: [
                        { trait: 'D', text: "**Dữ liệu**, logic và ý chí của bản thân." },
                        { trait: 'I', text: "**Cảm xúc**, trực giác và sự đồng thuận của mọi người." },
                        { trait: 'S', text: "**Kinh nghiệm**, cảm giác và sự an toàn." },
                        { trait: 'C', text: "**Phân tích** chi tiết và sự kiện khách quan." }
                    ]
                },
                {
                    text: "Phong cách giao tiếp của bạn là gì?",
                    options: [
                        { trait: 'D', text: "**Trực tiếp**, ngắn gọn, tập trung vào mục tiêu." },
                        { trait: 'I', text: "**Thân thiện**, cởi mở, thích kể chuyện và giao lưu." },
                        { trait: 'S', text: "**Nhẹ nhàng**, lắng nghe, tránh đối đầu." },
                        { trait: 'C', text: "**Cụ thể**, trang trọng, hỏi nhiều chi tiết." }
                    ]
                },
                {
                    text: "Mức độ chấp nhận rủi ro của bạn?",
                    options: [
                        { trait: 'D', text: "Sẵn sàng chấp nhận **rủi ro lớn** để thắng lớn." },
                        { trait: 'I', text: "Chấp nhận rủi ro khi có **sự ủng hộ** xã hội." },
                        { trait: 'S', text: "**Tránh rủi ro**, ưu tiên sự an toàn." },
                        { trait: 'C', text: "Chỉ chấp nhận rủi ro đã được **tính toán kỹ**." }
                    ]
                },
                {
                    text: "Phản ứng của bạn với sự thay đổi?",
                    options: [
                        { trait: 'D', text: "Chủ động **tạo ra sự thay đổi** và dẫn đầu." },
                        { trait: 'I', text: "Thích nghi nhanh, **nhiệt tình** thử cái mới." },
                        { trait: 'S', text: "**Khó chấp nhận**, cần thời gian làm quen." },
                        { trait: 'C', text: "**Nghiên cứu kỹ**, yêu cầu kế hoạch chi tiết." }
                    ]
                },
                {
                    text: "Vai trò ưa thích của bạn trong một nhóm?",
                    options: [
                        { trait: 'D', text: "Là người **đưa ra quyết định** cuối cùng." },
                        { trait: 'I', text: "Người **động viên** và kết nối mọi người." },
                        { trait: 'S', text: "Người **đảm bảo tính nhất quán** và ổn định." },
                        { trait: 'C', text: "Người **kiểm tra lỗi** và đảm bảo tiêu chuẩn." }
                    ]
                },
                {
                    text: "Tôi tập trung vào điều gì nhất?",
                    options: [
                        { trait: 'D', text: "Các **thử thách** và giải pháp mới." },
                        { trait: 'I', text: "Mối **quan hệ** và bầu không khí." },
                        { trait: 'S', text: "Duy trì **hiện trạng** và chất lượng công việc." },
                        { trait: 'C', text: "Sự **chính xác** và dữ liệu cụ thể." }
                    ]
                },
                {
                    text: "Thái độ của bạn khi mắc lỗi?",
                    options: [
                        { trait: 'D', text: "Sửa chữa nhanh, **rút kinh nghiệm** và tiếp tục." },
                        { trait: 'I', text: "Dễ dàng **bỏ qua**, tập trung vào việc mới." },
                        { trait: 'S', text: "**Lo lắng**, sợ bị người khác đánh giá." },
                        { trait: 'C', text: "**Khó chịu**, tự trách vì thiếu sự chuẩn bị." }
                    ]
                },
                {
                    text: "Mọi người thường thấy bạn là người như thế nào?",
                    options: [
                        { trait: 'D', text: "Mạnh mẽ, **tự tin**." },
                        { trait: 'I', text: "Vui vẻ, **năng động**." },
                        { trait: 'S', text: "Thân thiện, **kiên định**." },
                        { trait: 'C', text: "Tỉ mỉ, có **phương pháp**." }
                    ]
                },
                {
                    text: "Điều bạn cần nhất khi giao tiếp là gì?",
                    options: [
                        { trait: 'D', text: "Sự **hiệu quả** và thời gian ngắn." },
                        { trait: 'I', text: "Sự **cởi mở** và tán thưởng." },
                        { trait: 'S', text: "Sự **nhất quán** và đồng thuận." },
                        { trait: 'C', text: "Sự **logic** và bằng chứng." }
                    ]
                },
                {
                    text: "Trong các sự kiện xã hội, tôi thường...",
                    options: [
                        { trait: 'D', text: "Trực tiếp tiếp cận những người **quan trọng**." },
                        { trait: 'I', text: "Nhanh chóng trở thành **trung tâm** của sự chú ý." },
                        { trait: 'S', text: "Tương tác chủ yếu với những người tôi **quen**." },
                        { trait: 'C', text: "**Quan sát** và lắng nghe trước khi nói." }
                    ]
                },
                {
                    text: "Tôi quản lý thời gian bằng cách...",
                    options: [
                        { trait: 'D', text: "Tập trung vào việc **hoàn thành mục tiêu**." },
                        { trait: 'I', text: "**Linh hoạt**, thích ứng với cơ hội bất ngờ." },
                        { trait: 'S', text: "Theo một **lịch trình đều đặn**, không thay đổi." },
                        { trait: 'C', text: "Lập **kế hoạch chi tiết** và tuân thủ chặt chẽ." }
                    ]
                },
                {
                    text: "Khi cần chỉ trích người khác, tôi...",
                    options: [
                        { trait: 'D', text: "Thẳng thắn và **trực tiếp** vào vấn đề." },
                        { trait: 'I', text: "**Nhẹ nhàng**, cố gắng động viên để tránh làm tổn thương." },
                        { trait: 'S', text: "Rất **khó để chỉ trích**, sợ làm mất lòng." },
                        { trait: 'C', text: "Cung cấp **bằng chứng cụ thể** và chi tiết để họ sửa." }
                    ]
                },
                {
                    text: "Môi trường làm việc lý tưởng của bạn là?",
                    options: [
                        { trait: 'D', text: "**Cạnh tranh**, có nhiều quyền tự chủ." },
                        { trait: 'I', text: "Mở, **vui vẻ**, có nhiều tương tác xã hội." },
                        { trait: 'S', text: "**Yên tĩnh**, hợp tác, ít áp lực thay đổi." },
                        { trait: 'C', text: "Có **cấu trúc**, có tiêu chuẩn rõ ràng." }
                    ]
                },
                {
                    text: "Khi bắt đầu một dự án mới, tôi...",
                    options: [
                        { trait: 'D', text: "Muốn **bắt đầu ngay** lập tức, không cần quá nhiều thông tin." },
                        { trait: 'I', text: "Tạo một cuộc họp để cùng nhau **lên ý tưởng** và khuấy động không khí." },
                        { trait: 'S', text: "Tìm hiểu xem **người khác** đã làm gì trước đây và tham khảo." },
                        { trait: 'C', text: "Đảm bảo tôi có **tất cả các chi tiết** trước khi bắt đầu." }
                    ]
                },
                {
                    text: "Điều gì làm bạn cảm thấy được trân trọng?",
                    options: [
                        { trait: 'D', text: "Được công nhận về **thành tích** và quyền lực." },
                        { trait: 'I', text: "Được **khen ngợi công khai** trước đám đông." },
                        { trait: 'S', text: "Được **cảm ơn riêng tư** vì sự hỗ trợ của tôi." },
                        { trait: 'C', text: "Được khen ngợi về **độ chính xác** và logic." }
                    ]
                },
                {
                    text: "Khi xây dựng mối quan hệ, tôi...",
                    options: [
                        { trait: 'D', text: "Tập trung vào những **lợi ích** chung có thể đạt được." },
                        { trait: 'I', text: "Dành thời gian **giao lưu** và tạo kết nối cá nhân." },
                        { trait: 'S', text: "Xây dựng lòng tin bằng sự **trung thành** và hỗ trợ." },
                        { trait: 'C', text: "Dựa trên sự tôn trọng về **năng lực** và tiêu chuẩn." }
                    ]
                },
                {
                    text: "Trong các cuộc họp, tôi thích...",
                    options: [
                        { trait: 'D', text: "Đưa ra **ý kiến cuối cùng** và tóm tắt hành động." },
                        { trait: 'I', text: "Tham gia **tích cực**, khuấy động không khí." },
                        { trait: 'S', text: "Đảm bảo **mọi người đều được lắng nghe** và không ai bị bỏ sót." },
                        { trait: 'C', text: "Đặt **câu hỏi chi tiết** và yêu cầu bằng chứng." }
                    ]
                },
                {
                    text: "Tôi coi trọng không gian cá nhân để...",
                    options: [
                        { trait: 'D', text: "Đảm bảo tôi có thể **làm việc không bị gián đoạn**." },
                        { trait: 'I', text: "Chuẩn bị cho các **tương tác xã hội** và giao lưu tiếp theo." },
                        { trait: 'S', text: "Duy trì **sự cân bằng** và tránh áp lực." },
                        { trait: 'C', text: "**Tập trung** vào các vấn đề phức tạp và cần sự chính xác." }
                    ]
                },
                {
                    text: "Khi đàm phán, chiến lược của tôi là...",
                    options: [
                        { trait: 'D', text: "Cố gắng **thắng** và đạt được mục tiêu cá nhân." },
                        { trait: 'I', text: "Dùng sự hấp dẫn và **sức thuyết phục** để có kết quả tốt nhất." },
                        { trait: 'S', text: "Tìm kiếm một **thỏa hiệp** mà mọi người đều chấp nhận." },
                        { trait: 'C', text: "Đảm bảo các điều khoản đều **hợp lý** và chính xác theo dữ liệu." }
                    ]
                },
                {
                    text: "Mức độ kiên nhẫn của bạn?",
                    options: [
                        { trait: 'D', text: "**Thấp**, tôi muốn kết quả ngay lập tức." },
                        { trait: 'I', text: "**Trung bình**, miễn là có sự tương tác và hào hứng." },
                        { trait: 'S', text: "**Rất cao**, tôi có thể chờ đợi mọi việc tiến triển." },
                        { trait: 'C', text: "**Cao**, miễn là mọi thứ đang tiến triển theo logic." }
                    ]
                },
                {
                    text: "Khi giải quyết vấn đề, tôi...",
                    options: [
                        { trait: 'D', text: "Tìm kiếm **giải pháp tối ưu**, ngay cả khi nó không chính thống." },
                        { trait: 'I', text: "Tin tưởng vào khả năng **sáng tạo** của nhóm." },
                        { trait: 'S', text: "Sử dụng các **phương pháp đã được kiểm chứng**." },
                        { trait: 'C', text: "Thực hiện một **nghiên cứu kỹ lưỡng** trước khi hành động." }
                    ]
                },
                {
                    text: "Tôi nhìn nhận chi tiết như thế nào?",
                    options: [
                        { trait: 'D', text: "Cần thiết nhưng **không phải là ưu tiên hàng đầu**." },
                        { trait: 'I', text: "Dễ làm tôi **chán và mất tập trung**." },
                        { trait: 'S', text: "**Cần thiết** để đảm bảo sự ổn định." },
                        { trait: 'C', text: "**Rất quan trọng**, tôi thích sự tỉ mỉ." }
                    ]
                },
                {
                    text: "Trong một dự án, bạn muốn kiểm soát điều gì?",
                    options: [
                        { trait: 'D', text: "Kiểm soát **mục tiêu** và phương hướng chung." },
                        { trait: 'I', text: "Kiểm soát **tinh thần** và sự kết nối của đội." },
                        { trait: 'S', text: "Kiểm soát **nhịp độ** và sự ổn định của công việc." },
                        { trait: 'C', text: "Kiểm soát **chất lượng** và tính chính xác." }
                    ]
                },
                {
                    text: "Tôi thể hiện cảm xúc như thế nào?",
                    options: [
                        { trait: 'D', text: "**Kiểm soát tốt**, chỉ thể hiện khi cần thiết để đạt mục tiêu." },
                        { trait: 'I', text: "**Cởi mở** và bộc lộ một cách rõ ràng cho mọi người thấy." },
                        { trait: 'S', text: "**Giữ kín**, chỉ chia sẻ với người thân cận." },
                        { trait: 'C', text: "Giữ trong lòng, thích sự **khách quan** và logic." }
                    ]
                },
                {
                    text: "Bạn muốn người khác nhớ đến mình là người như thế nào?",
                    options: [
                        { trait: 'D', text: "Một **người chiến thắng** có năng lực." },
                        { trait: 'I', text: "Một **người bạn vui vẻ** và truyền cảm hứng." },
                        { trait: 'S', text: "Một **người đáng tin cậy** và trung thành." },
                        { trait: 'C', text: "Một **người chính xác** và thông minh." }
                    ]
                }
            ];

            const totalQuestions = fullQuestionsList.length;
            let currentQuestionIndex = 0;
            let scores = { D: 0, I: 0, S: 0, C: 0 };
            let userSelections = new Array(totalQuestions).fill(null);

            const resultDescriptions = {
                'D': {
                    name: 'THỐNG TRỊ (DOMINANCE)',
                    color: 'var(--tw-disc-d)',
                    icon: '⚡',
                    description: "Bạn là người **quyết đoán, thích thử thách và hướng đến kết quả**. Bạn không ngần ngại đối mặt với vấn đề và muốn mọi việc được thực hiện một cách nhanh chóng. Người khác có thể thấy bạn mạnh mẽ và tự tin, nhưng đôi khi có vẻ thiếu kiên nhẫn và thẳng thắn quá mức. Điểm mạnh của bạn là khả năng ra quyết định và sự chủ động."
                },
                'I': {
                    name: 'ẢNH HƯỞNG (INFLUENCE)',
                    color: 'var(--tw-disc-i)',
                    icon: '🌈',
                    description: "Bạn là người **hòa đồng, lạc quan và có sức thuyết phục**. Bạn yêu thích các hoạt động xã hội, thích truyền cảm hứng và tạo dựng mối quan hệ. Bạn là người giao tiếp tuyệt vời, nhưng đôi khi có thể bị coi là bốc đồng hoặc thiếu tập trung vào chi tiết. Điểm mạnh của bạn là khả năng xây dựng mạng lưới và tạo động lực."
                },
                'S': {
                    name: 'KIÊN ĐỊNH (STEADINESS)',
                    color: 'var(--tw-disc-s)',
                    icon: '🌱',
                    description: "Bạn là người **kiên nhẫn, đáng tin cậy và có tính hỗ trợ cao**. Bạn coi trọng sự ổn định, làm việc nhóm và tạo ra một môi trường hòa hợp. Bạn là một người lắng nghe tuyệt vời, nhưng có thể gặp khó khăn với sự thay đổi nhanh chóng và cần thời gian để điều chỉnh. Điểm mạnh của bạn là sự trung thành, hỗ trợ và tính nhất quán."
                },
                'C': {
                    name: 'TUÂN THỦ (CONSCIENTIOUSNESS)',
                    color: 'var(--tw-disc-c)',
                    icon: '🔬',
                    description: "Bạn là người **chính xác, logic và có óc phân tích**. Bạn đặt ra các tiêu chuẩn cao cho bản thân và người khác, luôn muốn có đủ thông tin và tuân thủ quy trình chất lượng. Bạn làm việc tỉ mỉ, nhưng có thể mất quá nhiều thời gian để ra quyết định vì muốn có sự hoàn hảo. Điểm mạnh của bạn là chất lượng, độ chính xác và khả năng phân tích."
                }
            };

             // Hàm chung để tạo SVG Icon
            function getTraitIcon(trait) {
                switch (trait) {
                    case 'D': return `<svg class="w-8 h-8 text-disc-d" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path></svg>`;
                    case 'I': return `<svg class="w-8 h-8 text-disc-i" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.292"></path></svg>`;
                    case 'S': return `<svg class="w-8 h-8 text-disc-s" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>`;
                    case 'C': return `<svg class="w-8 h-8 text-disc-c" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.664 5.176-1.374 9-6.073 9-11.664a12.02 12.02 0 00-.382-2.816z"></path></svg>`;
                    default: return '❓';
                }
            }

            function updateOverallProgress() {
                const overallProgressBar = document.getElementById('disc-overall-progress-bar');
                if (overallProgressBar) {
                    const completedQuestions = userSelections.filter(s => s !== null).length;
                    const progressPercent = (completedQuestions / totalQuestions) * 100;
                    overallProgressBar.style.width = `${progressPercent}%`;
                }
            }

            function renderQuestion() {
                updateOverallProgress();
                const quizArea = document.getElementById('disc-quiz-area');
                if (!quizArea) return; // Thoát nếu không tìm thấy

                if (currentQuestionIndex >= totalQuestions) {
                    showResults();
                    return;
                }

                const questionData = fullQuestionsList[currentQuestionIndex];
                const currentSelection = userSelections[currentQuestionIndex];

                let optionsHtml = questionData.options.map(option => {
                    const isSelected = currentSelection === option.trait;
                    const traitClass = option.trait.toLowerCase();
                    const borderClass = `border-disc-${traitClass}`; // Không cần dùng đến nếu dùng ring
                    const ringClass = `ring-disc-${traitClass}`;

                    // Cập nhật class Tailwind trực tiếp
                    let selectedClass = isSelected ? `ring-4 ring-opacity-50 ring-${traitClass}-500 border-${traitClass}-500 border-4` : `border-gray-200`;

                    // Điều chỉnh màu sắc ring và border dựa trên trait
                    if (isSelected) {
                        switch(option.trait) {
                            case 'D': selectedClass = `ring-4 ring-opacity-50 ring-red-500 border-red-500 border-4`; break;
                            case 'I': selectedClass = `ring-4 ring-opacity-50 ring-blue-500 border-blue-500 border-4`; break;
                            case 'S': selectedClass = `ring-4 ring-opacity-50 ring-green-500 border-green-500 border-4`; break;
                            case 'C': selectedClass = `ring-4 ring-opacity-50 ring-amber-500 border-amber-500 border-4`; break;
                        }
                    }
                    let hoverClass = `hover:border-indigo-400 hover:border-4`; // Giữ nguyên hover chung

                    return `
                        <div class="option-card p-4 bg-white rounded-xl border-2 ${selectedClass} ${hoverClass} shadow-md cursor-pointer transition-all duration-200"
                            onclick="DISCEngine.selectOption('${option.trait}')">
                            <div class="flex items-center space-x-4">
                                ${getTraitIcon(option.trait)}
                                <p class="text-gray-700 font-medium text-left">${option.text}</p>
                            </div>
                        </div>
                    `;
                }).join('');

                quizArea.innerHTML = `
                    <div class="bg-white p-6 md:p-8 border-l-4 border-red-500 rounded-lg shadow-xl mb-8">
                        <h3 class="text-xl md:text-2xl font-semibold text-gray-800">${questionData.text} <span class="text-sm font-normal text-gray-500 block mt-2">(Câu ${currentQuestionIndex + 1} / ${totalQuestions})</span></h3>
                    </div>
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4 md:gap-6">
                        ${optionsHtml}
                    </div>
                    <div class="flex justify-between mt-8">
                        <button onclick="DISCEngine.prevQuestion()" ${currentQuestionIndex === 0 ? 'disabled' : ''}
                                class="bg-gray-500 hover:bg-gray-600 text-white font-bold py-2 px-6 rounded-lg transition duration-300 ${currentQuestionIndex === 0 ? 'opacity-50 cursor-not-allowed' : 'shadow-md'}">
                            ← Quay lại
                        </button>
                        <button onclick="DISCEngine.nextQuestion()" ${currentSelection === null ? 'disabled' : ''}
                                class="bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-6 rounded-lg transition duration-300 ${currentSelection === null ? 'opacity-50 cursor-not-allowed' : 'shadow-lg transform hover:scale-105'}">
                            ${currentQuestionIndex === totalQuestions - 1 ? 'Xem Kết Quả' : 'Tiếp Theo →'}
                        </button>
                    </div>
                `;
            }

            function selectOption(trait) {
                const previousSelection = userSelections[currentQuestionIndex];

                if (previousSelection === null) {
                    scores[trait]++;
                } else if (previousSelection !== trait) {
                    scores[previousSelection]--;
                    scores[trait]++;
                }
                userSelections[currentQuestionIndex] = trait;
                renderQuestion(); // Re-render để cập nhật highlight
            }

            function nextQuestion() {
                if (userSelections[currentQuestionIndex] === null) return;
                currentQuestionIndex++;
                renderQuestion();
            }

            function prevQuestion() {
                if (currentQuestionIndex > 0) {
                    currentQuestionIndex--;
                    renderQuestion();
                }
            }

            function showResults() {
                document.getElementById('disc-overall-progress-bar').style.width = '100%';
                const quizArea = document.getElementById('disc-quiz-area');
                const resultArea = document.getElementById('disc-result-area');
                if (quizArea) quizArea.classList.add('hidden');
                if (resultArea) resultArea.classList.remove('hidden');

                let maxScore = -1;
                let mainTrait = '';

                for (const trait in scores) {
                    if (scores[trait] > maxScore) {
                        maxScore = scores[trait];
                        mainTrait = trait;
                    }
                     // Đảm bảo điểm không âm (có thể xảy ra nếu người dùng quay lại và đổi ý)
                    if (scores[trait] < 0) scores[trait] = 0;
                }

                // Xử lý trường hợp không có lựa chọn nào (điểm = 0)
                if (mainTrait === '') {
                     mainTrait = Object.keys(scores)[Math.floor(Math.random() * 4)]; // Chọn ngẫu nhiên nếu không có điểm
                }

                const profile = resultDescriptions[mainTrait];
                const maxPossibleScore = totalQuestions;

                const mainStyleDisplay = document.getElementById('disc-main-style-display');
                if (mainStyleDisplay) {
                    mainStyleDisplay.innerHTML = `
                        <span class="text-6xl mb-2 block">${profile.icon}</span>
                        <h3 class="text-4xl font-extrabold" style="color: ${profile.color};">
                            ${profile.name} (${mainTrait})
                        </h3>
                        <p class="text-lg text-gray-700 mt-1">Phong cách chính của bạn</p>
                    `;
                }

                 const resultDescriptionEl = document.getElementById('disc-result-description');
                 if (resultDescriptionEl) resultDescriptionEl.innerHTML = profile.description; // Dùng innerHTML vì có tag <strong>

                 const resultProfileEl = document.getElementById('disc-result-profile');
                 if (resultProfileEl) resultProfileEl.style.borderTopColor = profile.color;


                for (const trait in scores) {
                    const traitLower = trait.toLowerCase();
                    const scoreElement = document.getElementById(`disc-score-${traitLower}`);
                    const countElement = document.getElementById(`disc-score-count-${traitLower}`);
                    // Tính lại percentage dựa trên tổng điểm thực tế có thể có
                    const actualMaxScore = Object.values(scores).reduce((sum, score) => sum + score, 0);
                    // const percentage = actualMaxScore > 0 ? (scores[trait] / actualMaxScore) * 100 : 0; // Tỷ lệ tương đối
                    const percentage = (scores[trait] / maxPossibleScore) * 100; // Tỷ lệ tuyệt đối

                    if (scoreElement) {
                        // Thêm timeout để animation chạy
                        setTimeout(() => { scoreElement.style.width = `${percentage}%`; }, 100);
                    }

                    if (countElement) {
                        countElement.innerText = `${scores[trait]} / ${maxPossibleScore}`;
                    }
                }
            }

            function restartQuiz() {
                currentQuestionIndex = 0;
                scores = { D: 0, I: 0, S: 0, C: 0 };
                userSelections = new Array(totalQuestions).fill(null);

                const quizArea = document.getElementById('disc-quiz-area');
                const resultArea = document.getElementById('disc-result-area');
                const progressBar = document.getElementById('disc-overall-progress-bar');

                if (quizArea) quizArea.classList.remove('hidden');
                if (resultArea) resultArea.classList.add('hidden');
                if (progressBar) progressBar.style.width = '0%';

                ['d', 'i', 's', 'c'].forEach(trait => {
                    const scoreElement = document.getElementById(`disc-score-${trait}`);
                    const countElement = document.getElementById(`disc-score-count-${trait}`);
                    if (scoreElement) scoreElement.style.width = '0%';
                    if (countElement) countElement.innerText = `0 / ${totalQuestions}`;
                });

                renderQuestion();
            }

            return { initialize: renderQuestion, selectOption, nextQuestion, prevQuestion, restartQuiz };
        })();

        // --- 2. Holland Quiz Engine (RIASEC) - CẬP NHẬT ---
        const HollandEngine = (function() {
            // Bộ câu hỏi Holland mới (54 câu)
             const quizData = [
                 // Realistic - R (9 câu)
                 { question: "Tôi có tính tự lập", type: "R" },
                 { question: "Tôi suy nghĩ thực tế", type: "R" },
                 { question: "Tôi là người thích nghi với môi trường mới", type: "R" },
                 { question: "Tôi có thể vận hành, điều khiển các máy móc thiết bị", type: "R" },
                 { question: "Tôi làm các công việc thủ công như gấp giấy, đan, móc", type: "R" },
                 { question: "Tôi thích tiếp xúc với thiên nhiên, động vật, cây cỏ", type: "R" },
                 { question: "Tôi thích những công việc sử dụng tay chân hơn là trí óc", type: "R" },
                 { question: "Tôi thích những công việc thấy ngay kết quả", type: "R" },
                 { question: "Tôi thích làm việc ngoài trời hơn là trong phòng học, văn phòng", type: "R" },
                 // Investigative - I (9 câu)
                 { question: "Tôi có tìm hiểu khám phá nhiều vấn đề mới", type: "I" },
                 { question: "Tôi có khả năng phân tích vấn đề", type: "I" },
                 { question: "Tôi biết suy nghĩ một cách mạch lạc, chặt chẽ", type: "I" },
                 { question: "Tôi thích thực hiện các thí nghiệm hay nghiên cứu", type: "I" },
                 { question: "Tôi có khả năng tổng hợp, khái quát, suy đoán những vấn đề", type: "I" },
                 { question: "Tôi thích những hoạt động điều tra, phân loại, kiểm tra, đánh giá", type: "I" },
                 { question: "Tôi tự tổ chức công việc mình phải làm", type: "I" },
                 { question: "Tôi thích suy nghĩ về những vấn đề phức tạp, làm những công việc phức tạp", type: "I" },
                 { question: "Tôi có khả năng giải quyết các vấn đề", type: "I" },
                 // Artistic - A (9 câu)
                 { question: "Tôi là người dễ xúc động", type: "A" },
                 { question: "Tôi có óc tưởng tượng phong phú", type: "A" },
                 { question: "Tôi thích sự tự do, không theo những quy định , quy tắc", type: "A" },
                 { question: "Tôi có khả năng thuyết trình, diễn xuất", type: "A" },
                 { question: "Tôi có thể chụp hình hoặc vẽ tranh, trang trí, điêu khắc", type: "A" },
                 { question: "Tôi có năng khiếu âm nhạc", type: "A" },
                 { question: "Tôi có khả năng viết, trình bày những ý tưởng của mình", type: "A" },
                 { question: "Tôi thích làm những công việc mới, những công việc đòi hỏi sự sáng tạo", type: "A" },
                 { question: "Tôi thoải mái bộc lộ những ý thích", type: "A" },
                 // Social - S (9 câu)
                 { question: "Tôi là người thân thiện, hay giúp đỡ người khác", type: "S" },
                 { question: "Tôi thích gặp gỡ, làm việc với con người", type: "S" },
                 { question: "Tôi là người lịch sự, tử tế", type: "S" },
                 { question: "Tôi thích khuyên bảo, huấn luyện hay giảng giải cho người khác", type: "S" },
                 { question: "Tôi là người biết lắng nghe", type: "S" },
                 { question: "Tôi thích các hoạt động chăm sóc sức khỏe của bản thân và người khác", type: "S" },
                 { question: "Tôi thích các hoạt động vì mục tiêu chung của công đồng, xã hội", type: "S" },
                 { question: "Tôi mong muốn mình có thể đóng góp để xã hội tốt đẹp hơn", type: "S" },
                 { question: "Tôi có khả năng hòa giải, giải quyết những sự viêc mâu thuẫn", type: "S" },
                 // Enterprising - E (9 câu)
                 { question: "Tôi là người có tính phiêu lưu, mạo hiểm", type: "E" },
                 { question: "Tôi có tính quyết đoán", type: "E" },
                 { question: "Tôi là người năng động", type: "E" },
                 { question: "Tôi có khả năng diễn đạt, tranh luận, và thuyết phục người khác", type: "E" },
                 { question: "Tôi thích các việc quản lý, đánh giá", type: "E" },
                 { question: "Tôi thường đặt ra các mục tiêu, kế hoạch trong cuộc sống", type: "E" },
                 { question: "Tôi thích gây ảnh hưởng đến người khác", type: "E" },
                 { question: "Tôi là người thích cạnh tranh và muốn mình giỏi hơn người khác", type: "E" },
                 { question: "Tôi muốn người khác phải kính trọng, nể phục tôi", type: "E" },
                 // Conventional - C (9 câu)
                 { question: "Tôi là người có đầu óc sắp xếp, tổ chức", type: "C" },
                 { question: "Tôi có tính cẩn thận", type: "C" },
                 { question: "Tôi là người chu đáo, chính xác và đáng tin cậy", type: "C" },
                 { question: "Tôi thích công việc tính toán sổ sách, ghi chép số liệu", type: "C" },
                 { question: "Tôi thích các công việc lưu trữ, phân loại, cập nhật thông tin", type: "C" },
                 { question: "Tôi thường đặt ra những mục tiêu, kế hoạch trong cuộc sống", type: "C" }, // Câu này hơi giống E6
                 { question: "Tôi thích dự kiến các khoản thu chi", type: "C" },
                 { question: "Tôi thích lập thời khóa biểu, sắp xếp lịch làm việc", type: "C" },
                 { question: "Tôi thích làm việc với các con số, làm việc theo hướng dẫn, quy trình", type: "C" }
            ];

            const totalQuestions = quizData.length; // 54 câu
            let currentQuestionIndex = 0;
            let scores = { R: 0, I: 0, A: 0, S: 0, E: 0, C: 0 };
            let userSelections = new Array(totalQuestions).fill(null);

            const HollandTypes = {
                R: "Thực tế (Realistic)", I: "Nghiên cứu (Investigative)", A: "Nghệ thuật (Artistic)",
                S: "Xã hội (Social)", E: "Kinh doanh (Enterprising)", C: "Nghiệp vụ (Conventional)"
            };

             // Giữ nguyên gợi ý nghề nghiệp
            const HollandCareers = {
                R: ["Kỹ sư Cơ khí", "Kỹ thuật Xây dựng", "Phi công", "Nông nghiệp Công nghệ cao", "Thợ thủ công"],
                I: ["Nhà Khoa học", "Phân tích Dữ liệu", "Lập trình viên", "Bác sĩ (Nghiên cứu)", "Chuyên gia Môi trường"],
                A: ["Thiết kế Đồ họa", "Kiến trúc sư", "Nhà Văn/Nhà Thơ", "Nghệ sĩ Biểu diễn", "Nhiếp ảnh gia"],
                S: ["Giáo viên", "Tư vấn Tâm lý", "Công tác Xã hội", "Quản lý Nhân sự", "Y tá/Điều dưỡng"],
                E: ["Quản lý Dự án", "Doanh nhân", "Chuyên viên Marketing", "Luật sư", "Giám đốc Kinh doanh"],
                C: ["Kế toán", "Kiểm toán", "Thư ký", "Thủ thư", "Chuyên viên Thuế/Ngân hàng"]
            };
            
             // Nhãn mới cho các mức độ
             const levelLabels = ['Rất thấp', 'Thấp', 'Vừa', 'Cao', 'Rất cao'];

            function updateOverallProgress() {
                const overallProgressBar = document.getElementById('holland-overall-progress-bar');
                if (overallProgressBar) {
                    const completedQuestions = userSelections.filter(s => s !== null).length;
                    const progressPercent = (completedQuestions / totalQuestions) * 100;
                    overallProgressBar.style.width = `${progressPercent}%`;
                }
            }

            function renderQuestion() {
                updateOverallProgress();
                const quizArea = document.getElementById('holland-quiz-area');
                if (!quizArea) return;

                if (currentQuestionIndex >= totalQuestions) {
                    showResults();
                    return;
                }

                const questionData = quizData[currentQuestionIndex];
                const currentSelection = userSelections[currentQuestionIndex];
                const type = questionData.type;
                const typeColorVar = `var(--tw-holland-${type.toLowerCase()})`;

                // Tạo HTML cho 5 nút radio với nhãn mới
                let optionsHtml = `
                    <div class="flex flex-col sm:flex-row justify-between space-y-2 sm:space-y-0 sm:space-x-4">
                        ${[1, 2, 3, 4, 5].map(value => {
                            const isSelected = currentSelection === value;
                            const label = levelLabels[value - 1]; // Lấy nhãn từ mảng mới
                            // Sử dụng màu indigo chung cho highlight khi chọn
                            const selectedClass = isSelected ? `ring-4 ring-opacity-50 ring-indigo-500 border-indigo-500 border-4` : 'border-gray-200';
                            return `
                                <label class="flex items-center justify-center cursor-pointer p-3 bg-white rounded-xl border-2 ${selectedClass} shadow-md transition-all duration-200 flex-grow hover:border-indigo-400 text-center"
                                    onclick="HollandEngine.selectOption('${type}', ${value})">
                                    <input type="radio" name="holland-q${currentQuestionIndex}-choice" value="${value}" class="sr-only" ${isSelected ? 'checked' : ''}>
                                    <span class="text-sm font-medium text-gray-700">${label}</span>
                                </label>`;
                        }).join('')}
                    </div>
                `;

                quizArea.innerHTML = `
                    <div class="bg-white p-6 md:p-8 border-l-4 rounded-lg shadow-xl mb-8" style="border-left-color: ${typeColorVar};">
                        <h3 class="text-xl md:text-2xl font-semibold text-gray-800">${questionData.question} <span class="text-sm font-normal text-gray-500 block mt-2">(Câu ${currentQuestionIndex + 1} / ${totalQuestions})</span></h3>
                        <p class="text-sm font-medium mt-2" style="color: ${typeColorVar};">${HollandTypes[type]}</p>
                    </div>

                    <div class="mb-8">
                        ${optionsHtml}
                    </div>

                    <div class="flex justify-between mt-8">
                        <button onclick="HollandEngine.prevQuestion()" ${currentQuestionIndex === 0 ? 'disabled' : ''}
                                class="bg-gray-500 hover:bg-gray-600 text-white font-bold py-2 px-6 rounded-lg transition duration-300 ${currentQuestionIndex === 0 ? 'opacity-50 cursor-not-allowed' : 'shadow-md'}">
                            ← Quay lại
                        </button>
                        <button onclick="HollandEngine.nextQuestion()" ${currentSelection === null ? 'disabled' : ''}
                                class="bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-6 rounded-lg transition duration-300 ${currentSelection === null ? 'opacity-50 cursor-not-allowed' : 'shadow-lg transform hover:scale-105'}">
                            ${currentQuestionIndex === totalQuestions - 1 ? 'Xem Kết Quả' : 'Tiếp Theo →'}
                        </button>
                    </div>
                `;
            }

            function selectOption(type, value) {
                const previousSelection = userSelections[currentQuestionIndex];

                // Trừ điểm cũ trước khi cộng điểm mới
                if (previousSelection !== null) {
                    // Chuyển đổi giá trị cũ (1-5) thành điểm thực (-2 đến +2) để trừ đi cho chính xác
                    // Hoặc đơn giản là trừ đi giá trị đã ghi nhận trước đó
                    scores[type] -= previousSelection; // Trừ đi giá trị đã lưu
                }

                // Cộng điểm mới
                scores[type] += value; // Cộng giá trị mới (1-5)

                // Lưu lựa chọn mới
                userSelections[currentQuestionIndex] = value;

                renderQuestion(); // Vẽ lại câu hỏi với lựa chọn mới được highlight
            }


            function nextQuestion() {
                if (userSelections[currentQuestionIndex] === null) return;
                currentQuestionIndex++;
                renderQuestion();
            }

            function prevQuestion() {
                if (currentQuestionIndex > 0) {
                    currentQuestionIndex--;
                    renderQuestion();
                }
            }

            function showResults() {
                 const progressBar = document.getElementById('holland-overall-progress-bar');
                 const quizArea = document.getElementById('holland-quiz-area');
                 const resultArea = document.getElementById('holland-result-area');

                 if (progressBar) progressBar.style.width = '100%';
                 if (quizArea) quizArea.classList.add('hidden');
                 if (resultArea) resultArea.classList.remove('hidden');

                const sortedResults = Object.entries(scores).sort(([, a], [, b]) => b - a);
                const riasecCode = sortedResults.slice(0, 3).map(([type]) => type).join('');
                const topType = sortedResults[0][0];
                const topCareers = HollandCareers[topType] || [];
                const topColor = `var(--tw-holland-${topType.toLowerCase()})`;
                const maxPossibleScorePerType = 9 * 5; // 9 câu * 5 điểm tối đa

                const mainStyleDisplay = document.getElementById('holland-main-style-display');
                 if (mainStyleDisplay) {
                     mainStyleDisplay.innerHTML = `
                         <p class="text-xl font-medium text-gray-800">Mã Holland của bạn là:</p>
                         <h3 class="text-6xl font-extrabold mt-2 mb-4" style="color: ${topColor};">${riasecCode}</h3>
                         <p class="text-lg text-gray-700 mt-1">Loại hình chính: <strong>${HollandTypes[topType]}</strong></p>
                     `;
                 }

                let scoreChartHtml = '';
                sortedResults.forEach(([type, score]) => {
                    const typeLower = type.toLowerCase();
                    // Đảm bảo điểm không âm
                    const finalScore = Math.max(0, score);
                    const percentage = (finalScore / maxPossibleScorePerType) * 100;
                    const color = `var(--tw-holland-${typeLower})`;
                    scoreChartHtml += `
                        <div class="p-3 rounded-lg shadow-md" style="background-color: ${color}1A;">
                            <div class="flex justify-between items-baseline">
                                <p class="text-sm font-semibold text-gray-700">${HollandTypes[type]}</p>
                                <span class="text-base font-bold" style="color: ${color};">${finalScore} / ${maxPossibleScorePerType}</span>
                            </div>
                            <div class="w-full bg-gray-200 rounded-full h-2.5 mt-1">
                                <div class="h-2.5 rounded-full progress-bar-transition" style="background-color: ${color}; width: 0%;"></div>
                            </div>
                        </div>
                    `;
                });

                const scoreChartEl = document.getElementById('holland-score-chart');
                if (scoreChartEl) scoreChartEl.innerHTML = scoreChartHtml;

                // Thêm timeout để animation chạy
                setTimeout(() => {
                    sortedResults.forEach(([type, score]) => {
                         const finalScore = Math.max(0, score);
                        const percentage = (finalScore / maxPossibleScorePerType) * 100;
                        const bar = document.querySelector(`#holland-score-chart div[style*="--tw-holland-${type.toLowerCase()}"] .progress-bar-transition`);
                        if(bar) bar.style.width = `${percentage}%`;
                    });
                }, 100);


                 const resultDescriptionEl = document.getElementById('holland-result-description');
                 if (resultDescriptionEl) {
                     resultDescriptionEl.innerHTML = `
                         <p class="mb-4">Mã ${riasecCode} thể hiện sự kết hợp giữa các sở thích công việc của bạn. Loại hình chính <strong>${HollandTypes[topType]}</strong> gợi ý các nhóm ngành phù hợp:</p>
                         <ul class="list-disc pl-5 space-y-1 text-gray-800 font-semibold mb-4">
                             ${topCareers.map(c => `<li>${c}</li>`).join('')}
                         </ul>
                         <p class="text-sm italic">Hãy tra cứu chi tiết hơn về các ngành này bằng AI Hướng Nghiệp!</p>
                     `;
                 }
                 const resultProfileEl = document.getElementById('holland-result-profile');
                 if (resultProfileEl) resultProfileEl.style.borderTopColor = topColor;
            }

            function restartQuiz() {
                currentQuestionIndex = 0;
                scores = { R: 0, I: 0, A: 0, S: 0, E: 0, C: 0 };
                userSelections = new Array(totalQuestions).fill(null);

                const quizArea = document.getElementById('holland-quiz-area');
                const resultArea = document.getElementById('holland-result-area');
                const progressBar = document.getElementById('holland-overall-progress-bar');

                if(quizArea) quizArea.classList.remove('hidden');
                if(resultArea) resultArea.classList.add('hidden');
                if(progressBar) progressBar.style.width = '0%';
                renderQuestion();
            }

            return { initialize: renderQuestion, selectOption, nextQuestion, prevQuestion, restartQuiz };
        })();

        // --- 3. MBTI Quiz Engine ---
        const MBTIEngine = (function() {
            const quizData = [
                { dimension: 'E_I', question: "Khi tham gia một sự kiện xã hội, bạn thường:", options: [{ trait: 'E', text: "Chủ động bắt chuyện và gặp gỡ nhiều người mới." }, { trait: 'I', text: "Chỉ nói chuyện với vài người bạn đã quen từ trước." }] },
                { dimension: 'E_I', question: "Sau một tuần làm việc bận rộn, bạn nạp năng lượng bằng cách:", options: [{ trait: 'E', text: "Ra ngoài gặp gỡ bạn bè, tham gia các hoạt động." }, { trait: 'I', text: "Ở nhà một mình, đọc sách, xem phim hoặc nghỉ ngơi." }] },
                { dimension: 'E_I', question: "Trong các cuộc thảo luận nhóm, bạn:", options: [{ trait: 'E', text: "Thường xuyên phát biểu ý kiến, nói ra suy nghĩ của mình." }, { trait: 'I', text: "Lắng nghe nhiều hơn, chỉ phát biểu khi đã suy nghĩ kỹ." }] },
                { dimension: 'E_I', question: "Bạn thích làm việc:", options: [{ trait: 'E', text: "Trong một môi trường mở, có nhiều tương tác." }, { trait: 'I', text: "Trong một không gian yên tĩnh, tập trung một mình." }] },
                { dimension: 'E_I', question: "Khi giải quyết vấn đề, bạn có xu hướng:", options: [{ trait: 'E', text: "Nghĩ ra tiếng (thảo luận với người khác để tìm giải pháp)." }, { trait: 'I', text: "Nghĩ thầm (tự phân tích vấn đề trong đầu)." }] },
                { dimension: 'S_N', question: "Khi tiếp nhận thông tin, bạn tin tưởng hơn vào:", options: [{ trait: 'S', text: "Những gì thực tế, cụ thể và đã xảy ra." }, { trait: 'N', text: "Các khả năng, ý tưởng và bức tranh tổng thể." }] },
                { dimension: 'S_N', question: "Khi mô tả một sự kiện, bạn thường:", options: [{ trait: 'S', text: "Kể lại các chi tiết một cách tuần tự, chính xác." }, { trait: 'N', text: "Tập trung vào ý nghĩa và cảm nhận của bạn về sự kiện đó." }] },
                { dimension: 'S_N', question: "Bạn thích các công việc đòi hỏi:", options: [{ trait: 'S', text: "Sự cẩn thận, tỉ mỉ và theo quy trình có sẵn." }, { trait: 'N', text: "Sự sáng tạo, đổi mới và tìm kiếm giải pháp mới." }] },
                { dimension: 'S_N', question: "Khi học một kỹ năng mới, bạn thích:", options: [{ trait: 'S', text: "Thực hành từng bước cụ thể." }, { trait: 'N', text: "Hiểu được khái niệm và tự mình khám phá." }] },
                { dimension: 'S_N', question: "Bạn có xu hướng:", options: [{ trait: 'S', text: "Tập trung vào hiện tại và những gì đang diễn ra." }, { trait: 'N', text: "Suy nghĩ về tương lai và các khả năng có thể xảy ra." }] },
                { dimension: 'T_F', question: "Khi ra quyết định quan trọng, bạn ưu tiên:", options: [{ trait: 'T', text: "Phân tích logic, sự thật khách quan và tính hiệu quả." }, { trait: 'F', text: "Cảm xúc, giá trị cá nhân và tác động đến người khác." }] },
                { dimension: 'T_F', question: "Bạn muốn được người khác nhìn nhận là người:", options: [{ trait: 'T', text: "Công bằng, logic và có năng lực." }, { trait: 'F', text: "Tử tế, thấu cảm và biết quan tâm." }] },
                { dimension: 'T_F', question: "Khi góp ý cho người khác, bạn thường:", options: [{ trait: 'T', text: "Nói thẳng vào vấn đề cần cải thiện một cách rõ ràng." }, { trait: 'F', text: "Bắt đầu bằng lời khen và góp ý một cách nhẹ nhàng." }] },
                { dimension: 'T_F', question: "Bạn dễ bị thuyết phục bởi:", options: [{ trait: 'T', text: "Một lập luận logic, có số liệu rõ ràng." }, { trait: 'F', text: "Một câu chuyện truyền cảm hứng, chạm đến cảm xúc." }] },
                { dimension: 'T_F', question: "Trong một cuộc tranh luận, mục tiêu của bạn là:", options: [{ trait: 'T', text: "Tìm ra sự thật hoặc giải pháp đúng đắn nhất." }, { trait: 'F', text: "Duy trì sự hòa hợp và đảm bảo mọi người đều cảm thấy được lắng nghe." }] },
                { dimension: 'J_P', question: "Trong cuộc sống, bạn thích:", options: [{ trait: 'J', text: "Có kế hoạch rõ ràng, mọi thứ được sắp xếp trật tự." }, { trait: 'P', text: "Sự linh hoạt, để ngỏ các lựa chọn và tùy cơ ứng biến." }] },
                { dimension: 'J_P', question: "Khi đi du lịch, bạn thường:", options: [{ trait: 'J', text: "Lên lịch trình chi tiết cho từng ngày." }, { trait: 'P', text: "Chỉ đặt vé và khách sạn, còn lại để tự do khám phá." }] },
                { dimension: 'J_P', question: "Bạn cảm thấy thoải mái hơn khi:", options: [{ trait: 'J', text: "Hoàn thành công việc sớm trước thời hạn." }, { trait: 'P', text: "Làm việc dưới áp lực thời gian (nước đến chân mới nhảy)." }] },
                { dimension: 'J_P', question: "Không gian làm việc của bạn thường:", options: [{ trait: 'J', text: "Gọn gàng, ngăn nắp, mọi thứ đúng vị trí." }, { trait: 'P', text: "Có chút lộn xộn, nhưng bạn biết mọi thứ ở đâu." }] },
                { dimension: 'J_P', question: "Bạn nhìn nhận các quy tắc và thời hạn (deadline) là:", options: [{ trait: 'J', text: "Quan trọng, cần được tuân thủ nghiêm ngặt." }, { trait: 'P', text: "Linh hoạt, có thể điều chỉnh nếu cần thiết." }] },
                // Thêm 20 câu nữa
                { dimension: 'E_I', question: "Bạn có dễ dàng bắt đầu cuộc trò chuyện với người lạ không?", options: [{ trait: 'E', text: "Có, tôi thấy khá thoải mái." }, { trait: 'I', text: "Không, tôi thường đợi họ bắt chuyện trước." }] },
                { dimension: 'S_N', question: "Bạn có hay mơ mộng và suy nghĩ về những điều viển vông không?", options: [{ trait: 'S', text: "Hiếm khi, tôi thích tập trung vào thực tế." }, { trait: 'N', text: "Thường xuyên, tôi thích khám phá các ý tưởng." }] },
                { dimension: 'T_F', question: "Bạn có dễ dàng đồng cảm với cảm xúc của người khác không?", options: [{ trait: 'T', text: "Tôi hiểu họ, nhưng không nhất thiết 'cảm' được." }, { trait: 'F', text: "Có, tôi thường cảm nhận được cảm xúc của họ." }] },
                { dimension: 'J_P', question: "Một danh sách công việc (to-do list) đối với bạn là:", options: [{ trait: 'J', text: "Rất cần thiết, tôi bám sát nó." }, { trait: 'P', text: "Chỉ là gợi ý, tôi hay làm việc theo hứng." }] },
                { dimension: 'E_I', question: "Bạn thích làm trung tâm của sự chú ý?", options: [{ trait: 'E', text: "Có, tôi thích điều đó trong các tình huống phù hợp." }, { trait: 'I', text: "Không, tôi thích ở hậu trường hơn." }] },
                { dimension: 'S_N', question: "Bạn thích các hướng dẫn:", options: [{ trait: 'S', text: "Cụ thể, rõ ràng từng bước." }, { trait: 'N', text: "Tổng quan, cho tôi tự do sáng tạo cách làm." }] },
                { dimension: 'T_F', question: "Khi đưa ra lời khuyên, bạn tập trung vào:", options: [{ trait: 'T', text: "Giải pháp thực tế, logic." }, { trait: 'F', text: "Sự ủng hộ tinh thần, lắng nghe." }] },
                { dimension: 'J_P', question: "Bạn cảm thấy căng thẳng khi:", options: [{ trait: 'J', text: "Mọi thứ không theo kế hoạch." }, { trait: 'P', text: "Phải tuân theo một lịch trình quá cứng nhắc." }] },
                { dimension: 'E_I', question: "Bạn có nhiều bạn bè và mối quan hệ xã hội rộng?", options: [{ trait: 'E', text: "Có, tôi quen biết nhiều người." }, { trait: 'I', text: "Không, tôi chỉ có một vài người bạn thân." }] },
                { dimension: 'S_N', question: "Bạn có hay chú ý đến các chi tiết nhỏ nhặt xung quanh không?", options: [{ trait: 'S', text: "Có, tôi rất tinh ý." }, { trait: 'N', text: "Không, tôi hay bỏ qua chi tiết và nhìn tổng thể." }] },
                { dimension: 'T_F', question: "Bạn thấy khó khăn khi phải đưa ra quyết định ảnh hưởng xấu đến người khác?", options: [{ trait: 'T', text: "Khó khăn, nhưng nếu logic, tôi vẫn làm." }, { trait: 'F', text: "Rất khó khăn, tôi cố gắng tránh làm tổn thương người khác." }] },
                { dimension: 'J_P', question: "Bạn thích một công việc:", options: [{ trait: 'J', text: "Ổn định, có cấu trúc rõ ràng." }, { trait: 'P', text: "Năng động, luôn thay đổi và có thử thách mới." }] },
                { dimension: 'E_I', question: "Khi ở một mình quá lâu, bạn cảm thấy:", options: [{ trait: 'E', text: "Buồn chán, mất năng lượng." }, { trait: 'I', text: "Thoải mái, được nạp lại năng lượng." }] },
                { dimension: 'S_N', question: "Bạn có tin vào 'linh cảm' hay 'trực giác' không?", options: [{ trait: 'S', text: "Không hẳn, tôi tin vào bằng chứng." }, { trait: 'N', text: "Có, tôi thường tin vào trực giác của mình." }] },
                { dimension: 'T_F', question: "Sự thật hay sự hòa hợp quan trọng hơn?", options: [{ trait: 'T', text: "Sự thật luôn quan trọng nhất." }, { trait: 'F', text: "Sự hòa hợp cũng quan trọng không kém." }] },
                { dimension: 'J_P', question: "Bạn có hay trì hoãn công việc không?", options: [{ trait: 'J', text: "Hiếm khi, tôi thích hoàn thành mọi thứ." }, { trait: 'P', text: "Khá thường xuyên, tôi làm việc tốt nhất khi gần deadline." }] },
                { dimension: 'E_I', question: "Bạn thích các bữa tiệc lớn hay các cuộc gặp gỡ nhỏ?", options: [{ trait: 'E', text: "Tiệc lớn, càng đông càng vui." }, { trait: 'I', text: "Gặp gỡ nhóm nhỏ, thân mật." }] },
                { dimension: 'S_N', question: "Bạn có phải là người 'thực tế' không?", options: [{ trait: 'S', text: "Vâng, tôi luôn đứng trên mặt đất." }, { trait: 'N', text: "Tôi là người 'mơ mộng' nhiều hơn." }] },
                { dimension: 'T_F', question: "Bạn đánh giá một bộ phim dựa trên:", options: [{ trait: 'T', text: "Cốt truyện logic, kỹ xảo, diễn xuất." }, { trait: 'F', text: "Cảm xúc, thông điệp mà nó mang lại." }] },
                { dimension: 'J_P', question: "Bạn thích mọi thứ được:", options: [{ trait: 'J', text: "Quyết định rõ ràng." }, { trait: 'P', text: "Để mở, linh hoạt thay đổi." }] }
            ];

            const totalQuestions = quizData.length; // 40 câu
            let currentQuestionIndex = 0;
            let scores = { E: 0, I: 0, S: 0, N: 0, T: 0, F: 0, J: 0, P: 0 };
            let userSelections = new Array(totalQuestions).fill(null);

            function updateOverallProgress() {
                const overallProgressBar = document.getElementById('mbti-overall-progress-bar');
                if (overallProgressBar) {
                    const completedQuestions = userSelections.filter(s => s !== null).length;
                    const progressPercent = (completedQuestions / totalQuestions) * 100;
                    overallProgressBar.style.width = `${progressPercent}%`;
                }
            }

            function renderQuestion() {
                updateOverallProgress();
                const quizArea = document.getElementById('mbti-quiz-area');
                if (!quizArea) return;

                if (currentQuestionIndex >= totalQuestions) {
                    showResults();
                    return;
                }

                const questionData = quizData[currentQuestionIndex];
                const currentSelection = userSelections[currentQuestionIndex];

                let optionsHtml = `
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4 md:gap-6">
                        ${questionData.options.map((option, index) => {
                            const isSelected = currentSelection === option.trait;
                            const color = `var(--tw-mbti-${option.trait.toLowerCase()})`;
                            // Sử dụng màu xanh lá chung cho highlight khi chọn
                            const selectedClass = isSelected ? `ring-4 ring-opacity-50 ring-green-500 border-green-500 border-4` : 'border-gray-200';
                            return `
                                <div class="option-card p-4 bg-white rounded-xl border-2 ${selectedClass} shadow-md hover:border-green-400 hover:border-4 cursor-pointer transition-all duration-200"
                                    onclick="MBTIEngine.selectOption('${questionData.dimension}', '${option.trait}')">
                                    <div class="flex items-center space-x-4">
                                         <!-- Giữ màu chữ theo trait -->
                                        <div class="text-2xl font-bold w-6 text-center" style="color: ${color};">${option.trait}</div>
                                        <p class="text-gray-700 font-medium text-left">${option.text}</p>
                                    </div>
                                </div>
                            `;
                        }).join('')}
                    </div>
                `;

                quizArea.innerHTML = `
                    <div class="bg-white p-6 md:p-8 border-l-4 border-green-500 rounded-lg shadow-xl mb-8">
                        <h3 class="text-xl md:text-2xl font-semibold text-gray-800">${questionData.question} <span class="text-sm font-normal text-gray-500 block mt-2">(Câu ${currentQuestionIndex + 1} / ${totalQuestions})</span></h3>
                    </div>

                    ${optionsHtml}

                    <div class="flex justify-between mt-8">
                        <button onclick="MBTIEngine.prevQuestion()" ${currentQuestionIndex === 0 ? 'disabled' : ''}
                                class="bg-gray-500 hover:bg-gray-600 text-white font-bold py-2 px-6 rounded-lg transition duration-300 ${currentQuestionIndex === 0 ? 'opacity-50 cursor-not-allowed' : 'shadow-md'}">
                            ← Quay lại
                        </button>
                        <button onclick="MBTIEngine.nextQuestion()" ${currentSelection === null ? 'disabled' : ''}
                                class="bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-6 rounded-lg transition duration-300 ${currentSelection === null ? 'opacity-50 cursor-not-allowed' : 'shadow-lg transform hover:scale-105'}">
                            ${currentQuestionIndex === totalQuestions - 1 ? 'Xem Kết Quả' : 'Tiếp Theo →'}
                        </button>
                    </div>
                `;
            }

            function selectOption(dimension, trait) {
                const previousSelection = userSelections[currentQuestionIndex];

                // Giảm điểm của lựa chọn cũ nếu có
                if (previousSelection) {
                    scores[previousSelection]--;
                }

                // Tăng điểm cho lựa chọn mới
                scores[trait]++;
                userSelections[currentQuestionIndex] = trait;
                renderQuestion(); // Vẽ lại câu hỏi
            }

            function nextQuestion() {
                if (userSelections[currentQuestionIndex] === null) return;
                currentQuestionIndex++;
                renderQuestion();
            }

            function prevQuestion() {
                if (currentQuestionIndex > 0) {
                    currentQuestionIndex--;
                    renderQuestion();
                }
            }

            function calculateType(dim1, dim2) {
                // Đảm bảo điểm không âm
                const score1 = Math.max(0, scores[dim1]);
                const score2 = Math.max(0, scores[dim2]);
                return score1 >= score2 ? dim1 : dim2;
            }

            function getMBTITitle(code) {
                const titles = {
                    'E': 'Hướng ngoại', 'I': 'Hướng nội',
                    'S': 'Cảm giác', 'N': 'Trực giác',
                    'T': 'Lý trí', 'F': 'Tình cảm',
                    'J': 'Nguyên tắc', 'P': 'Linh hoạt'
                };
                 // Lấy tên đầy đủ cho từng chữ cái
                return code.split('').map(c => titles[c] || c).join(' - ');
            }

            function showResults() {
                 const progressBar = document.getElementById('mbti-overall-progress-bar');
                 const quizArea = document.getElementById('mbti-quiz-area');
                 const resultArea = document.getElementById('mbti-result-area');

                 if (progressBar) progressBar.style.width = '100%';
                 if (quizArea) quizArea.classList.add('hidden');
                 if (resultArea) resultArea.classList.remove('hidden');

                const finalCode =
                    calculateType('E', 'I') +
                    calculateType('S', 'N') +
                    calculateType('T', 'F') +
                    calculateType('J', 'P');

                const fullTitle = getMBTITitle(finalCode);
                // Lấy màu dựa trên chữ cái đầu tiên (E hoặc I)
                const topColor = `var(--tw-mbti-${finalCode.charAt(0).toLowerCase()})`;

                const mainStyleDisplay = document.getElementById('mbti-main-style-display');
                if (mainStyleDisplay) {
                     mainStyleDisplay.innerHTML = `
                         <p class="text-xl font-medium text-gray-800">Loại hình tính cách MBTI của bạn là:</p>
                         <h3 class="text-6xl font-extrabold mt-2 mb-4" style="color: ${topColor};">${finalCode}</h3>
                         <p class="text-lg text-gray-700 mt-1">(${fullTitle})</p>
                     `;
                 }

                 const resultDescriptionEl = document.getElementById('mbti-result-description');
                 if (resultDescriptionEl) {
                     resultDescriptionEl.innerHTML = `
                         <p class="mb-4">Kết quả của bạn là <strong>${finalCode}</strong>. Đây là loại hình tính cách nổi bật với các đặc điểm:</p>
                         <ul class="list-disc pl-5 space-y-1 text-gray-800">
                             <li><strong>${calculateType('E', 'I')} (${scores['E']}E/${scores['I']}I):</strong> ${calculateType('E', 'I') === 'E' ? 'Bạn nhận năng lượng từ tương tác xã hội.' : 'Bạn nhận năng lượng từ việc ở một mình.'}</li>
                             <li><strong>${calculateType('S', 'N')} (${scores['S']}S/${scores['N']}N):</strong> ${calculateType('S', 'N') === 'S' ? 'Bạn tập trung vào thực tế, chi tiết.' : 'Bạn tập trung vào ý tưởng, khả năng.'}</li>
                             <li><strong>${calculateType('T', 'F')} (${scores['T']}T/${scores['F']}F):</strong> ${calculateType('T', 'F') === 'T' ? 'Bạn ra quyết định dựa trên lý trí, logic.' : 'Bạn ra quyết định dựa trên cảm xúc, giá trị.'}</li>
                             <li><strong>${calculateType('J', 'P')} (${scores['J']}J/${scores['P']}P):</strong> ${calculateType('J', 'P') === 'J' ? 'Bạn thích sự ngăn nắp, có kế hoạch.' : 'Bạn thích sự linh hoạt, tùy biến.'}</li>
                         </ul>
                         <p class="text-sm italic mt-4">Lưu ý: Trắc nghiệm này chỉ mang tính chất tham khảo để khám phá bản thân. Kết quả MBTI chuyên nghiệp cần được thực hiện bởi chuyên gia.</p>
                     `;
                 }
                 const resultProfileEl = document.getElementById('mbti-result-profile');
                 // Sử dụng màu xanh lá cố định cho border top
                 if (resultProfileEl) resultProfileEl.style.borderTopColor = 'var(--tw-mbti-i)'; // Màu xanh lá của I
            }

            function restartQuiz() {
                currentQuestionIndex = 0;
                scores = { E: 0, I: 0, S: 0, N: 0, T: 0, F: 0, J: 0, P: 0 };
                userSelections = new Array(totalQuestions).fill(null);

                const quizArea = document.getElementById('mbti-quiz-area');
                const resultArea = document.getElementById('mbti-result-area');
                const progressBar = document.getElementById('mbti-overall-progress-bar');

                if (quizArea) quizArea.classList.remove('hidden');
                if (resultArea) resultArea.classList.add('hidden');
                if (progressBar) progressBar.style.width = '0%';
                renderQuestion();
            }

            return { initialize: renderQuestion, selectOption, nextQuestion, prevQuestion, restartQuiz };
        })();

        // --- KHỞI TẠO QUIZ ENGINE ---
        function initializeQuiz(mode) {
             console.log("Initializing quiz:", mode);
            if (mode === 'disc') DISCEngine.restartQuiz();
            else if (mode === 'holland') HollandEngine.restartQuiz();
            else if (mode === 'mbti') MBTIEngine.restartQuiz();
        }

        // --- VISITOR COUNTER ---
        function updateVisitorCount() {
            try {
                let count = localStorage.getItem('visitorCount');
                if (count === null) {
                    count = 1;
                } else {
                    count = parseInt(count) + 1;
                }
                localStorage.setItem('visitorCount', count);
            } catch (e) {
                console.warn("Không thể truy cập localStorage:", e);
            }
        }

        // --- GLOBAL EVENT LISTENERS ---
        window.onclick = function(event) {
            const storyModal = document.getElementById('storyModal');
            const alertModal = document.getElementById('customAlertModal'); // Giả sử bạn có modal này

            if (storyModal && event.target == storyModal) { // Check if modal exists
                closeStoryModal();
            }
            if (alertModal && event.target == alertModal) {
                alertModal.style.display = 'none';
            }
        }

        // Gán sự kiện đóng modal cho nút (X) - Đảm bảo chạy sau khi DOM sẵn sàng
        document.addEventListener('DOMContentLoaded', () => {
             const closeBtn = document.querySelector('#storyModal .close-btn');
             if (closeBtn) {
                 closeBtn.onclick = closeStoryModal;
             }
             const alertCloseBtn = document.querySelector('#customAlertModal .close-btn');
              if (alertCloseBtn) {
                 alertCloseBtn.onclick = function() {
                      const alertModal = document.getElementById('customAlertModal');
                      if (alertModal) alertModal.style.display = 'none';
                 }
             }
        });


        // --- INITIALIZATION ---
        window.addEventListener('load', function() { // Sử dụng addEventListener thay vì onload
            showPage('home');
            updateVisitorCount();
            logVisitorIP(); // Gọi hàm log IP khi tải xong
        });

      // --- Theo dõi IP người truy cập ---
      async function logVisitorIP() {
        try {
          const response = await fetch('https://api.ipify.org?format=json');
           if (!response.ok) throw new Error('Failed to fetch IP');
          const data = await response.json();
          const ip = data.ip;
          const time = new Date().toLocaleString("vi-VN", { timeZone: "Asia/Ho_Chi_Minh" });
          console.log(`👁️ Lượt truy cập mới | IP: ${ip} | Thời gian: ${time}`);
          // Không lưu IP vào localStorage vì lý do riêng tư
          localStorage.setItem('lastVisitTime', time);
        } catch (err) {
          console.warn('Không thể lấy IP người dùng:', err);
        }
      }
      // Không cần gọi lại window.addEventListener('load', logVisitorIP); vì đã gọi trong listener ở trên
    </script>
</body>
</html>

